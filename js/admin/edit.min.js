!function(e){"use strict";"function"==typeof define&&define.amd?define(e):"undefined"!=typeof module&&void 0!==module.exports?module.exports=e():"undefined"!=typeof Package?Sortable=e():window.Sortable=e()}(function(){"use strict";function e(e,t){if(!e||!e.nodeType||1!==e.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(e);this.el=e,this.options=t=w({},t),e[j]=this;var i={group:Math.random(),sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(e.nodeName)?"li":">*",ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",ignore:"a, img",filter:null,animation:0,setData:function(e,t){e.setData("Text",t.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1};for(var n in i)!(n in t)&&(t[n]=i[n]);Y(t);for(var o in this)"_"===o.charAt(0)&&(this[o]=this[o].bind(this));this.nativeDraggable=!t.forceFallback&&L,s(e,"mousedown",this._onTapStart),s(e,"touchstart",this._onTapStart),this.nativeDraggable&&(s(e,"dragover",this),s(e,"dragenter",this)),J.push(this._onDragOver),t.store&&this.sort(t.store.get(this))}function t(e){C&&C.state!==e&&(r(C,"display",e?"none":""),!e&&C.state&&k.insertBefore(C,y),C.state=e)}function i(e,t,i){if(e){i=i||A;do{if(">*"===t&&e.parentNode===i||f(e,t))return e}while(e!==i&&(e=e.parentNode))}return null}function n(e){e.dataTransfer&&(e.dataTransfer.dropEffect="move"),e.preventDefault()}function s(e,t,i){e.addEventListener(t,i,!1)}function o(e,t,i){e.removeEventListener(t,i,!1)}function a(e,t,i){if(e)if(e.classList)e.classList[i?"add":"remove"](t);else{var n=(" "+e.className+" ").replace(B," ").replace(" "+t+" "," ");e.className=(n+(i?" "+t:"")).replace(B," ")}}function r(e,t,i){var n=e&&e.style;if(n){if(void 0===i)return A.defaultView&&A.defaultView.getComputedStyle?i=A.defaultView.getComputedStyle(e,""):e.currentStyle&&(i=e.currentStyle),void 0===t?i:i[t];t in n||(t="-webkit-"+t),n[t]=i+("string"==typeof i?"":"px")}}function l(e,t,i){if(e){var n=e.getElementsByTagName(t),s=0,o=n.length;if(i)for(;s<o;s++)i(n[s],s);return n}return[]}function d(e,t,i,n,s,o,a){var r=A.createEvent("Event"),l=(e||t[j]).options,d="on"+i.charAt(0).toUpperCase()+i.substr(1);r.initEvent(i,!0,!0),r.to=t,r.from=s||t,r.item=n||t,r.clone=C,r.oldIndex=o,r.newIndex=a,t.dispatchEvent(r),l[d]&&l[d].call(e,r)}function c(e,t,i,n,s,o){var a,r,l=e[j],d=l.options.onMove;return a=A.createEvent("Event"),a.initEvent("move",!0,!0),a.to=t,a.from=e,a.dragged=i,a.draggedRect=n,a.related=s||t,a.relatedRect=o||t.getBoundingClientRect(),e.dispatchEvent(a),d&&(r=d.call(l,a)),r}function p(e){e.draggable=!1}function h(){X=!1}function u(e,t){var i=e.lastElementChild,n=i.getBoundingClientRect();return(t.clientY-(n.top+n.height)>5||t.clientX-(n.right+n.width)>5)&&i}function g(e){for(var t=e.tagName+e.className+e.src+e.href+e.textContent,i=t.length,n=0;i--;)n+=t.charCodeAt(i);return n.toString(36)}function m(e,t){var i=0;if(!e||!e.parentNode)return-1;for(;e&&(e=e.previousElementSibling);)"TEMPLATE"!==e.nodeName.toUpperCase()&&f(e,t)&&i++;return i}function f(e,t){if(e){t=t.split(".");var i=t.shift().toUpperCase(),n=new RegExp("\\s("+t.join("|")+")(?=\\s)","g");return!(""!==i&&e.nodeName.toUpperCase()!=i||t.length&&((" "+e.className+" ").match(n)||[]).length!=t.length)}return!1}function v(e,t){var i,n;return function(){void 0===i&&(i=arguments,n=this,setTimeout(function(){1===i.length?e.call(n,i[0]):e.apply(n,i),i=void 0},t))}}function w(e,t){if(e&&t)for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);return e}if("undefined"==typeof window||void 0===window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var y,b,_,C,k,$,x,z,S,D,N,V,E,T,M,I,O,W={},B=/\s+/g,j="Sortable"+(new Date).getTime(),P=window,A=P.document,R=P.parseInt,L=!!("draggable"in A.createElement("div")),G=function(e){return e=A.createElement("x"),e.style.cssText="pointer-events:auto","auto"===e.style.pointerEvents}(),X=!1,F=Math.abs,J=[],U=v(function(e,t,i){if(i&&t.scroll){var n,s,o,a,r=t.scrollSensitivity,l=t.scrollSpeed,d=e.clientX,c=e.clientY,p=window.innerWidth,h=window.innerHeight;if(z!==i&&(x=t.scroll,z=i,!0===x)){x=i;do{if(x.offsetWidth<x.scrollWidth||x.offsetHeight<x.scrollHeight)break}while(x=x.parentNode)}x&&(n=x,s=x.getBoundingClientRect(),o=(F(s.right-d)<=r)-(F(s.left-d)<=r),a=(F(s.bottom-c)<=r)-(F(s.top-c)<=r)),o||a||(o=(p-d<=r)-(d<=r),a=(h-c<=r)-(c<=r),(o||a)&&(n=P)),W.vx===o&&W.vy===a&&W.el===n||(W.el=n,W.vx=o,W.vy=a,clearInterval(W.pid),n&&(W.pid=setInterval(function(){n===P?P.scrollTo(P.pageXOffset+o*l,P.pageYOffset+a*l):(a&&(n.scrollTop+=a*l),o&&(n.scrollLeft+=o*l))},24)))}},30),Y=function(e){var t=e.group;t&&"object"==typeof t||(t=e.group={name:t}),["pull","put"].forEach(function(e){e in t||(t[e]=!0)}),e.groups=" "+t.name+(t.put.join?" "+t.put.join(" "):"")+" "};return e.prototype={constructor:e,_onTapStart:function(e){var t=this,n=this.el,s=this.options,o=e.type,a=e.touches&&e.touches[0],r=(a||e).target,l=r,c=s.filter;if(!("mousedown"===o&&0!==e.button||s.disabled)&&(r=i(r,s.draggable,n))){if(V=m(r,s.draggable),"function"==typeof c){if(c.call(this,e,r,this))return d(t,l,"filter",r,n,V),void e.preventDefault()}else if(c&&(c=c.split(",").some(function(e){if(e=i(l,e.trim(),n))return d(t,e,"filter",r,n,V),!0})))return void e.preventDefault();s.handle&&!i(l,s.handle,n)||this._prepareDragStart(e,a,r)}},_prepareDragStart:function(e,t,i){var n,o=this,r=o.el,d=o.options,c=r.ownerDocument;i&&!y&&i.parentNode===r&&(M=e,k=r,y=i,b=y.parentNode,$=y.nextSibling,T=d.group,n=function(){o._disableDelayedDrag(),y.draggable=!0,a(y,o.options.chosenClass,!0),o._triggerDragStart(t)},d.ignore.split(",").forEach(function(e){l(y,e.trim(),p)}),s(c,"mouseup",o._onDrop),s(c,"touchend",o._onDrop),s(c,"touchcancel",o._onDrop),d.delay?(s(c,"mouseup",o._disableDelayedDrag),s(c,"touchend",o._disableDelayedDrag),s(c,"touchcancel",o._disableDelayedDrag),s(c,"mousemove",o._disableDelayedDrag),s(c,"touchmove",o._disableDelayedDrag),o._dragStartTimer=setTimeout(n,d.delay)):n())},_disableDelayedDrag:function(){var e=this.el.ownerDocument;clearTimeout(this._dragStartTimer),o(e,"mouseup",this._disableDelayedDrag),o(e,"touchend",this._disableDelayedDrag),o(e,"touchcancel",this._disableDelayedDrag),o(e,"mousemove",this._disableDelayedDrag),o(e,"touchmove",this._disableDelayedDrag)},_triggerDragStart:function(e){e?(M={target:y,clientX:e.clientX,clientY:e.clientY},this._onDragStart(M,"touch")):this.nativeDraggable?(s(y,"dragend",this),s(k,"dragstart",this._onDragStart)):this._onDragStart(M,!0);try{A.selection?A.selection.empty():window.getSelection().removeAllRanges()}catch(e){}},_dragStarted:function(){k&&y&&(a(y,this.options.ghostClass,!0),e.active=this,d(this,k,"start",y,k,V))},_emulateDragOver:function(){if(I){if(this._lastX===I.clientX&&this._lastY===I.clientY)return;this._lastX=I.clientX,this._lastY=I.clientY,G||r(_,"display","none");var e=A.elementFromPoint(I.clientX,I.clientY),t=e,i=" "+this.options.group.name,n=J.length;if(t)do{if(t[j]&&t[j].options.groups.indexOf(i)>-1){for(;n--;)J[n]({clientX:I.clientX,clientY:I.clientY,target:e,rootEl:t});break}e=t}while(t=t.parentNode);G||r(_,"display","")}},_onTouchMove:function(t){if(M){e.active||this._dragStarted(),this._appendGhost();var i=t.touches?t.touches[0]:t,n=i.clientX-M.clientX,s=i.clientY-M.clientY,o=t.touches?"translate3d("+n+"px,"+s+"px,0)":"translate("+n+"px,"+s+"px)";O=!0,I=i,r(_,"webkitTransform",o),r(_,"mozTransform",o),r(_,"msTransform",o),r(_,"transform",o),t.preventDefault()}},_appendGhost:function(){if(!_){var e,t=y.getBoundingClientRect(),i=r(y),n=this.options;_=y.cloneNode(!0),a(_,n.ghostClass,!1),a(_,n.fallbackClass,!0),r(_,"top",t.top-R(i.marginTop,10)),r(_,"left",t.left-R(i.marginLeft,10)),r(_,"width",t.width),r(_,"height",t.height),r(_,"opacity","0.8"),r(_,"position","fixed"),r(_,"zIndex","100000"),r(_,"pointerEvents","none"),n.fallbackOnBody&&A.body.appendChild(_)||k.appendChild(_),e=_.getBoundingClientRect(),r(_,"width",2*t.width-e.width),r(_,"height",2*t.height-e.height)}},_onDragStart:function(e,t){var i=e.dataTransfer,n=this.options;this._offUpEvents(),"clone"==T.pull&&(C=y.cloneNode(!0),r(C,"display","none"),k.insertBefore(C,y)),t?("touch"===t?(s(A,"touchmove",this._onTouchMove),s(A,"touchend",this._onDrop),s(A,"touchcancel",this._onDrop)):(s(A,"mousemove",this._onTouchMove),s(A,"mouseup",this._onDrop)),this._loopId=setInterval(this._emulateDragOver,50)):(i&&(i.effectAllowed="move",n.setData&&n.setData.call(this,i,y)),s(A,"drop",this),setTimeout(this._dragStarted,0))},_onDragOver:function(e){var n,s,o,a=this.el,l=this.options,d=l.group,p=d.put,g=T===d,m=l.sort;if(void 0!==e.preventDefault&&(e.preventDefault(),!l.dragoverBubble&&e.stopPropagation()),O=!0,T&&!l.disabled&&(g?m||(o=!k.contains(y)):T.pull&&p&&(T.name===d.name||p.indexOf&&~p.indexOf(T.name)))&&(void 0===e.rootEl||e.rootEl===this.el)){if(U(e,l,this.el),X)return;if(n=i(e.target,l.draggable,a),s=y.getBoundingClientRect(),o)return t(!0),void(C||$?k.insertBefore(y,C||$):m||k.appendChild(y));if(0===a.children.length||a.children[0]===_||a===e.target&&(n=u(a,e))){if(n){if(n.animated)return;v=n.getBoundingClientRect()}t(g),!1!==c(k,a,y,s,n,v)&&(y.contains(a)||(a.appendChild(y),b=a),this._animate(s,y),n&&this._animate(v,n))}else if(n&&!n.animated&&n!==y&&void 0!==n.parentNode[j]){S!==n&&(S=n,D=r(n),N=r(n.parentNode));var f,v=n.getBoundingClientRect(),w=v.right-v.left,x=v.bottom-v.top,z=/left|right|inline/.test(D.cssFloat+D.display)||"flex"==N.display&&0===N["flex-direction"].indexOf("row"),V=n.offsetWidth>y.offsetWidth,E=n.offsetHeight>y.offsetHeight,M=(z?(e.clientX-v.left)/w:(e.clientY-v.top)/x)>.5,I=n.nextElementSibling,W=c(k,a,y,s,n,v);if(!1!==W){if(X=!0,setTimeout(h,30),t(g),1===W||-1===W)f=1===W;else if(z){var B=y.offsetTop,P=n.offsetTop;f=B===P?n.previousElementSibling===y&&!V||M&&V:P>B}else f=I!==y&&!E||M&&E;y.contains(a)||(f&&!I?a.appendChild(y):n.parentNode.insertBefore(y,f?I:n)),b=y.parentNode,this._animate(s,y),this._animate(v,n)}}}},_animate:function(e,t){var i=this.options.animation;if(i){var n=t.getBoundingClientRect();r(t,"transition","none"),r(t,"transform","translate3d("+(e.left-n.left)+"px,"+(e.top-n.top)+"px,0)"),t.offsetWidth,r(t,"transition","all "+i+"ms"),r(t,"transform","translate3d(0,0,0)"),clearTimeout(t.animated),t.animated=setTimeout(function(){r(t,"transition",""),r(t,"transform",""),t.animated=!1},i)}},_offUpEvents:function(){var e=this.el.ownerDocument;o(A,"touchmove",this._onTouchMove),o(e,"mouseup",this._onDrop),o(e,"touchend",this._onDrop),o(e,"touchcancel",this._onDrop)},_onDrop:function(t){var i=this.el,n=this.options;clearInterval(this._loopId),clearInterval(W.pid),clearTimeout(this._dragStartTimer),o(A,"mousemove",this._onTouchMove),this.nativeDraggable&&(o(A,"drop",this),o(i,"dragstart",this._onDragStart)),this._offUpEvents(),t&&(O&&(t.preventDefault(),!n.dropBubble&&t.stopPropagation()),_&&_.parentNode.removeChild(_),y&&(this.nativeDraggable&&o(y,"dragend",this),p(y),a(y,this.options.ghostClass,!1),a(y,this.options.chosenClass,!1),k!==b?(E=m(y,n.draggable))>=0&&(d(null,b,"sort",y,k,V,E),d(this,k,"sort",y,k,V,E),d(null,b,"add",y,k,V,E),d(this,k,"remove",y,k,V,E)):(C&&C.parentNode.removeChild(C),y.nextSibling!==$&&(E=m(y,n.draggable))>=0&&(d(this,k,"update",y,k,V,E),d(this,k,"sort",y,k,V,E))),e.active&&(null!==E&&-1!==E||(E=V),d(this,k,"end",y,k,V,E),this.save()))),this._nulling()},_nulling:function(){k=y=b=_=$=C=x=z=M=I=O=E=S=D=T=e.active=null},handleEvent:function(e){var t=e.type;"dragover"===t||"dragenter"===t?y&&(this._onDragOver(e),n(e)):"drop"!==t&&"dragend"!==t||this._onDrop(e)},toArray:function(){for(var e,t=[],n=this.el.children,s=0,o=n.length,a=this.options;s<o;s++)e=n[s],i(e,a.draggable,this.el)&&t.push(e.getAttribute(a.dataIdAttr)||g(e));return t},sort:function(e){var t={},n=this.el;this.toArray().forEach(function(e,s){var o=n.children[s];i(o,this.options.draggable,n)&&(t[e]=o)},this),e.forEach(function(e){t[e]&&(n.removeChild(t[e]),n.appendChild(t[e]))})},save:function(){var e=this.options.store;e&&e.set(this)},closest:function(e,t){return i(e,t||this.options.draggable,this.el)},option:function(e,t){var i=this.options;if(void 0===t)return i[e];i[e]=t,"group"===e&&Y(i)},destroy:function(){var e=this.el;e[j]=null,o(e,"mousedown",this._onTapStart),o(e,"touchstart",this._onTapStart),this.nativeDraggable&&(o(e,"dragover",this),o(e,"dragenter",this)),Array.prototype.forEach.call(e.querySelectorAll("[draggable]"),function(e){e.removeAttribute("draggable")}),J.splice(J.indexOf(this._onDragOver),1),this._onDrop(),this.el=e=null}},e.utils={on:s,off:o,css:r,find:l,is:function(e,t){return!!i(e,t,e)},extend:w,throttle:v,closest:i,toggleClass:a,index:m},e.create=function(t,i){return new e(t,i)},e.version="1.4.2",e}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){"use strict";e.fn.sortable=function(t){var i,n=arguments;return this.each(function(){var s=e(this),o=s.data("sortable");if(o||!(t instanceof Object)&&t||(o=new Sortable(this,t),s.data("sortable",o)),o){if("widget"===t)return o;"destroy"===t?(o.destroy(),s.removeData("sortable")):"function"==typeof o[t]?i=o[t].apply(o,[].slice.call(n,1)):t in o.options&&(i=o.option.apply(o,n))}}),void 0===i?this:i}}),function(e,t){String.prototype.removeAccents=function(){var e={A:/[AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄ]/g,AA:/[Ꜳ]/g,AE:/[ÆǼǢ]/g,AO:/[Ꜵ]/g,AU:/[Ꜷ]/g,AV:/[ꜸꜺ]/g,AY:/[Ꜽ]/g,B:/[BⒷＢḂḄḆɃƂƁ]/g,C:/[CⒸＣĆĈĊČÇḈƇȻꜾ]/g,D:/[DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ]/g,DZ:/[ǱǄ]/g,Dz:/[ǲǅ]/g,E:/[EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ]/g,F:/[FⒻＦḞƑꝻ]/g,G:/[GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ]/g,H:/[HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ]/g,I:/[IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ]/g,J:/[JⒿＪĴɈ]/g,K:/[KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ]/g,L:/[LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ]/g,LJ:/[Ǉ]/g,Lj:/[ǈ]/g,M:/[MⓂＭḾṀṂⱮƜ]/g,N:/[NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ]/g,NJ:/[Ǌ]/g,Nj:/[ǋ]/g,O:/[OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ]/g,OI:/[Ƣ]/g,OO:/[Ꝏ]/g,OU:/[Ȣ]/g,P:/[PⓅＰṔṖƤⱣꝐꝒꝔ]/g,Q:/[QⓆＱꝖꝘɊ]/g,R:/[RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ]/g,S:/[SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ]/g,T:/[TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ]/g,TZ:/[Ꜩ]/g,U:/[UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ]/g,V:/[VⓋＶṼṾƲꝞɅ]/g,VY:/[Ꝡ]/g,W:/[WⓌＷẀẂŴẆẄẈⱲ]/g,X:/[XⓍＸẊẌ]/g,Y:/[YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ]/g,Z:/[ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ]/g,a:/[aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/g,aa:/[ꜳ]/g,ae:/[æǽǣ]/g,ao:/[ꜵ]/g,au:/[ꜷ]/g,av:/[ꜹꜻ]/g,ay:/[ꜽ]/g,b:/[bⓑｂḃḅḇƀƃɓ]/g,c:/[cⓒｃćĉċčçḉƈȼꜿↄ]/g,d:/[dⓓｄḋďḍḑḓḏđƌɖɗꝺ]/g,dz:/[ǳǆ]/g,e:/[eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/g,f:/[fⓕｆḟƒꝼ]/g,g:/[gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/g,h:/[hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/g,hv:/[ƕ]/g,i:/[iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı]/g,j:/[jⓙｊĵǰɉ]/g,k:/[kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/g,l:/[lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ]/g,lj:/[ǉ]/g,m:/[mⓜｍḿṁṃɱɯ]/g,n:/[nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/g,nj:/[ǌ]/g,o:/[oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ]/g,oi:/[ƣ]/g,ou:/[ȣ]/g,oo:/[ꝏ]/g,p:/[pⓟｐṕṗƥᵽꝑꝓꝕ]/g,q:/[qⓠｑɋꝗꝙ]/g,r:/[rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/g,s:/[sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ]/g,t:/[tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/g,tz:/[ꜩ]/g,u:/[uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/g,v:/[vⓥｖṽṿʋꝟʌ]/g,vy:/[ꝡ]/g,w:/[wⓦｗẁẃŵẇẅẘẉⱳ]/g,x:/[xⓧｘẋẍ]/g,y:/[yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/g,z:/[zⓩｚźẑżžẓẕƶȥɀⱬꝣ]/g},t=this;for(var i in e){var n=e[i];t=t.replace(n,i)}return t};var i=gridbuilder.options,n=gridbuilder.options.features,s=(gridbuilder.l10n,t.grid={});t.grid.model={},t.grid.view={ui:{},element:{}},t.grid.controller={},t.grid.templates={},t.grid.utils={sanitizeTitle:function(e){return e=e.removeAccents().toLowerCase(),e=e.replace(/[^a-z0-9]/g,"-"),e=e.replace(/-+/g,"-"),e=e.replace(/-+$/g,"")}},t.grid.controller.Grid=function(){this.$input=e('[name="_grid_data"]'),this.postID=e('[name="post_ID"]').val();var i=this,n=this.$input.attr("value");data=JSON.parse(n),types=["grid","container","row","cell","widget"],this.model=new s.model.GridObject(data),this.model.recurse(function(e){this.set("type",types[e])}),this.subviews=new Backbone.Collection([]),this.selected=!1,this.listenTo(this.model,"change",this.onChangeModel),this.view=new t.grid.view.ui.Editor({controller:this,model:this.model}),this.view.setActiveEditor(),this.view.$el.insertAfter("#wp-content-wrap"),this.view.render(),this.view.$el.focus(),e(document).on("click",'[type="submit"]',function(e){i.onChangeModel()})},_.extend(t.grid.controller.Grid.prototype,{whichView:function(){return this.view.whichView()},getSelected:function(e){return this.selected},setSelected:function(e){return console.trace(this.selected.$el),this.selected=e,this},onChangeModel:function(){var e=JSON.stringify(this.model.toJSON());this.$input.val(e),n.autosave&&this.save(e)},save:function(t){e.ajax({method:"post",url:i.ajaxurl,complete:function(e,t){},success:function(e,t,i){e.success},data:{action:"gridbuilder-autosave",nonce:i.autosave_nonce,grid_data:t,post_id:this.postID}})}},Backbone.Events),_.extend(t.grid.controller.Grid,Backbone.Events)}(jQuery,window),function(e,t){var i,n,s=gridbuilder.options,o=(gridbuilder.l10n,0);i=t.model.GridObject=Backbone.Model.extend({parent:!1,locks:{},initialize:function(e){_.defaults(e,{items:[]});var t=this;this.items=new n([]),this.items.parent=this,this.parent=!1,this.id="obj"+o++,_.each(e.items,function(e,i){t.items.add(e)}),delete e.items,Backbone.Model.prototype.initialize.apply(this,arguments)},setItemParent:function(e){e.parent=this},toJSON:function(e){var t=Backbone.Model.prototype.toJSON.apply(this,arguments);return t.items=this.items.toJSON(e),t},recurse:function(){var e=arguments[0],t=arguments[1]||0;e.apply(this,[t]),this.items.each(function(i){i.recurse(e,t+1)})}}),n=t.model.GridCollection=Backbone.Collection.extend({model:i,comparator:function(e){return e.get("idx")},add:function(){var e=Backbone.Collection.prototype.add.apply(this,arguments),t=this;return modelsArr=e.constructor==Array?e:[e],_.each(modelsArr,function(e,i){e.parent=t.parent}),e}}),GridTemplate=t.model.GridTemplate=Backbone.Model.extend({save:function(){var t=this;e.ajax({method:"post",url:s.ajaxurl,complete:function(e,t){},success:function(e,i,n){_.each(e,function(e,i){t.set(i,e)}),t.trigger("sync")},data:{action:this.isNew()?"gridbuilder-create-template":"gridbuilder-update-template",nonce:this.isNew()?s.create_template_nonce:s.update_template_nonce,template:JSON.stringify(this.toJSON())}})},destroy:function(){var t=this;e.ajax({method:"post",url:s.ajaxurl,complete:function(e,t){},success:function(e,i,n){t.trigger("destroy",t,t.collection)},data:{action:"gridbuilder-delete-template",nonce:s.delete_template_nonce,template:JSON.stringify(this.toJSON())}})}}),_.extend(t.templates,{get:function(e,i){return e=e.toLowerCase(),t.templates[e]._byId[i]}}),_.each(s.templates,function(e,i){t.templates[i]=new Backbone.Collection,_.each(e,function(e,n){var s=new t.model.GridTemplate({name:e.name,slug:e.slug,data:e.data,type:i});s.set("id",e.slug),t.templates[i].add(s)})})}(jQuery,window.grid),function(e,t){var i,n=gridbuilder.l10n,s=gridbuilder.options,o=gridbuilder.options.features;t.view.ui.Prompt=wp.media.View.extend({tagName:"div",className:"grid-prompt",template:wp.template("grid-ui-prompt"),events:{"click .btn-confirm":"confirm","click .btn-cancel":"close"},initialize:function(t){return _.defaults(t,{defaultValue:"",title:"",message:"",parent:!1}),wp.media.View.prototype.initialize.apply(this,arguments),this.$parent=e(t.parent?t.parent:"body"),this.render()},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this},open:function(){return this.$parent.append(this.$el),this.$('[type="text"]').focus().select(),this},close:function(){return this.$el.remove(),this},confirm:function(){this.trigger("confirm"),this.close()},getValue:function(){return this.$('[type="text"]').val()}}),i=t.view.ui.Modal=wp.media.view.Modal.extend({template:wp.template("grid-ui-modal"),events:{"click .grid-dialog-prev":"prev","click .grid-dialog-next":"next","click .media-modal-backdrop, .grid-dialog-close":"escapeHandler",keydown:"keydown"},initialize:function(){var e=wp.media.view.Modal.prototype.initialize.apply(this,arguments);return this.prevnext=!_.isUndefined(this.options.prev)&&!_.isUndefined(this.options.next),e},render:function(){var e=wp.media.view.Modal.prototype.render.apply(this,arguments);return this.prevnext?(this.$(".grid-dialog-prev").prop("disabled",!this.options.prev),this.$(".grid-dialog-next").prop("disabled",!this.options.next)):this.$(".grid-dialog-prev, .grid-dialog-next").remove(),e},open:function(){wp.media.view.Modal.prototype.open.apply(this,arguments),e("body").removeClass("modal-open").addClass("grid-modal-open")},close:function(t){wp.media.view.Modal.prototype.close.apply(this,arguments),e("body").removeClass("grid-modal-open")},next:function(){return this.trigger("next"),!1},prev:function(){return this.trigger("prev"),!1}}),t.view.ui.Dialog=wp.media.View.extend({initialize:function(e){return this.model=e.model,this.controller=e.controller,this.okayBtn=new wp.media.view.Button({text:n.Done,classes:["apply","button-primary"]}),this},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.$(".grid-dialog-title").text(this.options.title),this.okayBtn.render(),this.$(".grid-dialog-toolbar").append(this.okayBtn.$el)},dismiss:function(){this.$(".grid-dialog-content").html("")}}),t.view.ui.Toolbar=wp.media.View.extend({template:wp.template("grid-ui-toolbar"),className:"grid-toolbar",tagName:"div",events:{'click .viewswitcher [type="radio"]':"switchView",'click .set-visibility [type="radio"]':"setVisible","click button.add-item":"addItem","change select.add-item":"addTemplateItem","click .item-action.edit":"editItem","click .item-action.clone":"cloneItem","click .item-action.delete":"deleteItem","click .item-action.lock":"lockItem","click .create-template":"createTemplate","click .update-template":"updateTemplate","click .manage-templates":"manageTemplates"},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.delegateEvents(),this.setupSticky()},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.setupViewswitcher(),this.setupTemplateSelects(),this.updateWidth(),viewSize=window.getUserSetting("grid-view-size"),viewSize?this.$('.viewswitcher [value="'+viewSize+'"]').prop("checked",!0):this.$('.viewswitcher [type="radio"]:last').prop("checked",!0),this.switchView()},preventDefault:function(e){e.preventDefault()},addItem:function(t){this.trigger("add:"+e(t.target).data("add-item")),t.preventDefault()},addTemplateItem:function(t){this.trigger("add:"+e(t.target).data("add-item"),e(t.target).val()),e(t.target).val(""),t.preventDefault()},editItem:function(e){this.trigger("edit"),e.preventDefault()},cloneItem:function(e){this.trigger("clone"),e.preventDefault()},deleteItem:function(e){this.trigger("delete"),e.preventDefault()},lockItem:function(e){this.trigger("lock"),e.preventDefault()},setVisible:function(){this.trigger("visible",this.$('.set-visibility [type="radio"]:checked').val())},setupSticky:function(){var t=this;e(window).on("scroll",function(){var i="true"===t.$el.attr("data-sticky"),n=e(window).scrollTop()+33>=t.controller.$el.offset().top;i!=n&&t.$el.attr("data-sticky",n.toString())}),e(window).on("resize",function(){t.updateWidth()})},updateWidth:function(){this.$el.css("width",this.controller.$el.width().toString()+"px")},update:function(){var i=this.controller.getSelected(),n=(can_edit=can_clone=can_delete=can_lock=!1,can_create_template=can_update_template=!1),s=can_add_row=can_add_cell=can_add_widget=!1;if(i){var a=i.is(t.view.element.Grid),r=o.locks||!i.model.get("locked"),l=o.locks||!(i.parent()&&i.parent().model.get("locked")),d=i.closest(t.view.element.Grid),c=i.closest(t.view.element.Container),p=i.closest(t.view.element.Row),h=i.closest(t.view.element.Cell),u=i.model.get("visibility_"+this.whichView())||"";can_edit=!a&&r,can_clone=!a&&r&&l,can_delete=!a&&r&&l,can_lock=!0,n=!a,can_create_template=!a,can_update_template=!a&&!!i.model.get("template"),s=o.locks||!d.model.get("locked"),can_add_row=!!c&&(o.locks||!c.model.get("locked")),can_add_cell=!!p&&(o.locks||!p.model.get("locked")),can_add_widget=!!h&&(o.locks||!h.model.get("locked")),this.$(".item-action.lock").prop("checked",!!i.model.get("locked")),this.$('[name="set-visibility"]').each(function(t,i){var n=e(this);n.prop("checked",n.val()==u)})}this.$(".item-action.edit").prop("disabled",!can_edit),this.$(".item-action.clone").prop("disabled",!can_clone),this.$(".item-action.delete").prop("disabled",!can_delete),this.$(".item-action.lock").prop("disabled",!can_lock),this.$(".create-template").prop("disabled",!can_create_template),this.$(".update-template").prop("disabled",!can_update_template),this.$(".manage-templates").prop("disabled",!1),this.$(".add-container").prop("disabled",!s),this.$(".add-row").prop("disabled",!can_add_row),this.$(".add-cell").prop("disabled",!can_add_cell),this.$(".add-widget").prop("disabled",!can_add_widget),this.$('[name="set-visibility"]').prop("disabled",!n)},setupViewswitcher:function(){var e=this;_.each(s.screensizes.sizes,function(t,i){var n,s={size:i};_.extend(s,t),n=wp.template("viewsize-item")(s),e.$(".viewswitcher").append(n)})},setupTemplateSelects:function(){this.$("select.add-item[data-add-item]").each(function(){var i=e(this),n=i.attr("data-add-item");e(this).find('[value!=""]').remove(),t.templates[n].each(function(s,o){var a=t.templates[n].get(s.id).toJSON();e('<option value="'+a.id+'">'+a.name+"</option>").appendTo(i)})})},switchView:function(){var e=this.whichView();this.$el.attr("data-view-size");e&&(this.trigger("viewsize",this),window.setUserSetting("grid-view-size",e))},whichView:function(){return this.$(".viewswitcher :checked").val()},delegateEvents:function(){wp.media.View.prototype.delegateEvents.apply(this,arguments),this.on("viewsize",this.updateVisibilitySelect,this),this.on("select",this.updateVisibilitySelect,this),this.on("select",this.updateLockButton,this)},undelegateEvents:function(){wp.media.View.prototype.undelegateEvents.apply(this,arguments)},updateVisibilitySelect:function(){var e,i=this.controller.getSelected();i&&!i.is(t.view.element.Grid)&&(e=i.model.get("visibility_"+this.whichView())||"",this.$('[name="set-visibility"][value="'+e+'"]').prop("checked",!0))},updateLockButton:function(){var e=this.getSelected();e&&!e.is(t.view.element.Grid)&&this.$(".item-action.lock").prop("checked",!!e.model.get("locked"))},createTemplate:function(e){this.trigger("create:template"),e.preventDefault()},updateTemplate:function(e){this.trigger("update:template"),e.preventDefault()},manageTemplates:function(e){this.trigger("manage:templates"),e.preventDefault()}}),Editor=t.view.ui.Editor=wp.media.View.extend({className:"grid-editor",tagName:"div",selectWidgetModal:null,events:{"focusout *":function(e){},"focusin *":function(t){var i=e(t.target).data("view");if(e(t.target).is(".locked"))return e(t.target).blur(),void t.preventDefault();i&&this.setSelected(i)},"keyup *":function(e){var i,n,s=this.toolbar.whichView(),a=this.getSelected();if(a)switch(e.keyCode){case 13:i=o.locks||!a.model.get("locked"),i&&this.editItem();break;case 32:break;case 46:case 8:i=o.locks||!a.model.get("locked"),i&&this.deleteItem(),e.preventDefault(),e.stopPropagation();break;case 37:case 39:case 38:case 40:n=e.shiftKey?"size":"offset",i=o.locks||!a.model.get("locked")&&!a.model.get(n+"_"+s+":locked"),i&&a.is(t.view.element.Cell)&&(37==e.keyCode?e.shiftKey?a.decrementSize():a.decrementOffset():39==e.keyCode&&(e.shiftKey?a.incrementSize():a.incrementOffset())),e.stopPropagation()}}},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.toolbar=new t.view.ui.Toolbar({controller:this}),this.grid=new t.view.element.Grid({controller:this,model:this.model}),this.bindEvents()},bindEvents:function(){var t=this;e(document).on("click",function(){t.checkSelected.apply(t,arguments)}),e(document).on("keydown",this.preventBackspaceNav),this.toolbar.on("edit",this.editItem,this),this.toolbar.on("clone",this.cloneItem,this),this.toolbar.on("delete",this.deleteItem,this),this.toolbar.on("lock",this.toggleLockState,this),this.toolbar.on("visible",this.setVisible,this),this.toolbar.on("visible",this.reFocus,this),this.toolbar.on("viewsize",this.onChangeViewsize,this),this.toolbar.on("viewsize",this.reFocus,this),this.toolbar.on("create:template",this.createTemplate,this),this.toolbar.on("update:template",this.updateTemplate,this),this.toolbar.on("manage:templates",this.openTemplateManager,this),this.toolbar.on("add:container",this.addContainer,this),this.toolbar.on("add:row",this.addRow,this),this.toolbar.on("add:cell",this.addCell,this),this.toolbar.on("add:widget",this.addWidget,this)},preventBackspaceNav:function(t){var i=event.srcElement||event.target;e(i).is(":input")||e(i).is("[contenteditable]")||8===t.keyCode&&t.preventDefault()},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.toolbar.render();var t=e('<div class="grid-toolbar-wrap"></div>');this.$el.append(t),t.append(this.toolbar.$el),t.height(t.height()),this.$el.append(this.grid.$el),this.grid.render()},setActiveEditor:function(){t.setActiveEditor(this)},onChangeViewsize:function(){this.$el.attr("data-view-size",this.toolbar.whichView())},getSelected:function(){return this.controller.getSelected(this)},checkSelected:function(t){this.$el.has(t.target).length||e(t.target).closest(".grid-ui-modal")||this.setSelected(null)},setSelected:function(e){return this.controller.setSelected(e),this.toolbar.update(),e&&!e.$el.is(":focus")&&e.$el.focus(),this},addContainer:function(){var e=!!arguments.length&&t.templates.get("container",arguments[0]),i=e?e.get("data"):{type:"container"};return this._addItem(t.view.element.Container,this.grid,i),!1},addRow:function(e){var i=this.getSelected(),n=i.closest(t.view.element.Container),s=!!arguments.length&&t.templates.get("row",arguments[0]),o=s?s.get("data"):{type:"row"};return this._addItem(t.view.element.Row,n,o),!1},addCell:function(e){var i=this.getSelected(),n=i.closest(t.view.element.Row),o=!!arguments.length&&t.templates.get("cell",arguments[0]),a=o?o.get("data"):{size_xs:s.screensizes.columns,type:"cell"};return this._addItem(t.view.element.Cell,n,a),!1},addWidget:function(e){var i,s=this,o=this.getSelected(),a=o.closest(t.view.element.Cell),r=!!arguments.length&&t.templates.get("widget",arguments[0]),l=r?r.get("data"):{instance:{},type:"widget"},d=new Backbone.Model;return r?this._addItem(t.view.element.Widget,a,l):(null===this.selectWidgetModal&&(this.selectWidgetModal=new wp.media.view.Modal({controller:this}),i=new t.view.SelectWidgetDialog({controller:this,model:d,title:n.SelectWidget}),i.on("done",function(){l.widget_class=d.get("widget_class"),s._addItem(t.view.element.Widget,a,l).editItem(),s.selectWidgetModal.close()},this.selectWidgetModal),this.selectWidgetModal.content(i)),this.selectWidgetModal.open()),!1},cloneItem:function(){var e=this.getSelected(),t=e.getClass(),i=e.parent(),n=e.model.toJSON();return n.idx++,this._addItem(t,i,n),!1},_addItem:function(e,i,n,s){var o,s,a=this.getSelected()||this,n=n||{},r=new t.model.GridObject(n),l=new e({controller:this,model:r,parent:i});return s=s||a.closest(e),o=i.$(">.collection"),s?(l.render().$el.insertAfter(s.$el),o.trigger("sort")):o.append(l.render().$el),i.model.items.add(r),this.grid.initSortables(),this.grid.hasChanged(),this.setSelected(l),this},getPrevItem:function(e){var i,e=e||this.getSelected(),i=e.$el.prev().data("view");return _.isUndefined(i)&&!e.parent().is(t.view.element.Grid)?i=e.parent():_.isUndefined(i)||i.is(t.view.element.Widget)||(i=i.$(".widget").last().data("view")),!o.locks&&i&&i.model.get("locked")?this.getPrevItem(i):i},getNextItem:function(e){var i,e=e||this.getSelected();if(i=e.$(">.collection").children().length?e.$(">.collection>*").first().data("view"):e.$el.next().data("view"),_.isUndefined(i))for(;_.isUndefined(i)&&!e.is(t.view.element.Grid);)e=e.parent(),i=e.$el.next().data("view");return!o.locks&&i&&i.model.get("locked")?this.getNextItem(i):i},toggleLockState:function(){var e,t=this.getSelected();t&&(e=!!t.model.get("locked"),t.model.set("locked",!e),this.reFocus()),this.toolbar.update()},editItem:function(n){
if(n&&n.preventDefault(),e("body").hasClass("grid-modal-open"))return!1;for(var o,a,r=this,l=this.getSelected(),d=this.getNextItem(l),c=this.getPrevItem(l),p=new i({controller:this,next:!!d,prev:!!c}),h=s.editors[l.getClassName().toLowerCase()],u=[],g=l;g&&!g.is(t.view.element.Grid);)a=g.getTitle(),u.unshift(a),g=g.parent();return o=new t.view.EditDialog({title:u.join(" › "),controller:this,model:l.model,item:l,editor:h}),o.on("done",function(){r.grid.hasChanged(),p.close()},p),p.on("close",function(e){o.dismiss(),r.getSelected().$el.focus()}).on("next",function(e){o.applyChanges(),r.grid.hasChanged(),p.close(),r.setSelected(d),r.editItem(e)}).on("prev",function(e){o.applyChanges(),r.grid.hasChanged(),p.close(),r.setSelected(c),r.editItem(e)}),p.content(o).open(),p.$el.focus(),!1},deleteItem:function(e){e&&e.preventDefault();var t=this.getSelected(),i=t.parent();this._deleteItem(this.getSelected()),this.setSelected(i)},_deleteItem:function(e){var t=e.parent();return e.remove(),t.model.items.remove(e.model),this.grid.hasChanged(),!1},reFocus:function(){var e=this.getSelected();!!e&&e.reFocus()},setVisible:function(e){var t=this.getSelected(),i="visibility_"+this.toolbar.whichView();t&&(t.model.set(i,e),t.reFocus())},createTemplate:function(){var e=this,i=this.getSelected(),s=new t.model.GridTemplate,o=new t.view.ui.Prompt({title:n.TemplateName,description:n.CreateTemplateDescription,defaultValue:n[i.getClassName()]+" "+n.Template});return o.on("confirm",function(n){var a=o.getValue(),r=t.utils.sanitizeTitle(a),l=i.getClassName().toLowerCase();s.set("name",a),s.set("slug",r),s.set("type",l),s.set("data",i.model.toJSON()),s.once("sync",function(){var n=s.get("slug");s.set("id",n),i.model.set("template",n),t.templates[l].add(s),e.toolbar.update(),e.toolbar.setupTemplateSelects(),e.grid.hasChanged()}),s.save(),i.reFocus()},this).open(),!1},updateTemplate:function(){var e=this.getSelected(),i=e.getClassName().toLowerCase(),n=e.model.get("template");return template=t.templates.get(i,n),template.set("data",e.model.toJSON()),template.save(),e.reFocus(),!1},openTemplateManager:function(){var e=this,i=new wp.media.view.Modal({controller:this}),s=this.getSelected(),o=new t.view.ManageTemplatesDialog({controller:this,title:n.ManageTemplates});return o.on("done",function(){i.close()},i),i.content(o).on("close",function(t){e.toolbar.setupTemplateSelects(),!!s&&s.$el.focus()}).open(),!1}}),_.extend(t,{getActiveEditor:function(){return active_editor},setActiveEditor:function(e){active_editor=e}})}(jQuery,window.grid),function(e,t){function i(){return g.inited||(_.each(u,function(e){g[e]=wp.media.View.extend(_.extend({template:wp.template("grid-ui-input-"+e)},m))}),g.inited=!0),g}var n,s,o,a,r,l,d,c=(t.view.Grid,t.view.Container,t.view.Row,t.view.Cell,t.view.Widget,gridbuilder.options),p=gridbuilder.options.features,h=gridbuilder.l10n,u=["text","textarea","color","number","media","select","checkbox","radio","range","label"],g={inited:!1},m={render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this,t=void 0!==this.options.value&&null!==this.options.value?this.options.value:this.options.settings.default;switch(this.$el.addClass("input-"+this.options.settings.name),this.setValue(t),this.options.settings.type){case"number":_.each(["min","max","step"],function(t){void 0!==e.options.settings[t]&&e.$('[type="number"]').attr(t,e.options.settings[t])});break;case"color":this.$("input.color-picker").wpColorPicker({hide:!0,palettes:e.options.settings.palettes});break;case"media":var i=null;this.$(".select-media").on("click",function(){null===i&&(i=wp.media({title:e.options.settings.title,library:{type:e.options.settings.mimetype},button:{text:h.Done,close:!0}}),i.on("select",function(){var t=i.state().get("selection").first().attributes;e.setValue(t.id)})),i.open()});break;case"range":this.$("input").on("change",function(){e.updateValue()})}return this.updateValue(),this},updateValue:function(){this.$(".display-value").text(this.getValue())},setValue:function(t){switch(this.options.settings.type){case"select":this.$("select").val(t);break;case"radio":null===t?this.$('[type="radio"]:checked').prop("checked",!1):this.$('[type="radio"][value="'+t+'"]').prop("checked",!0);break;case"checkbox":this.$('[type="checkbox"]').prop("checked",!!t);break;case"color":this.$("input.color-picker").val(t);break;case"media":if(this.$(".thumbnail").html(""),t){this.$('[name="media_id"]').val(t);var i=new wp.media.model.Attachment({id:t}),n=this;i.once("change",function(){var t,s;if(i.get("sizes"))try{s=i.get("sizes").thumbnail.url}catch(e){s=i.get("sizes").full.url}else s=i.get("icon");t=new wp.media.View({tagName:"span",className:"filename"}),t.$el.text(i.get("title")),n.$(".thumbnail").append(e("<img />").attr("src",s),new wp.media.view.Button({text:h.RemoveMedia,click:function(){n.setValue(null)}}).$el.addClass("dashicons dashicons-dismiss"),t.$el),delete i}),i.fetch()}else this.$('[name="media_id"]').removeAttr("value");break;case"textarea":this.$("textarea").val(t);break;default:this.$("input").val(t)}},getValue:function(){switch(this.options.settings.type){case"select":return this.$("select").val();case"radio":return this.$('[type="radio"]:checked').val();case"checkbox":return this.$('[type="checkbox"]').prop("checked");case"color":return this.$("input.color-picker").val();case"textarea":return this.$("textarea").val();default:return this.$("input").val()}},dismiss:function(){}};r=wp.media.View.extend({initialize:function(e){wp.media.View.prototype.initialize.apply(this,arguments),this.children=[]},render:function(){var e=this;wp.media.View.prototype.render.apply(this,arguments),_.each(this.children,function(t,i){t.render(),e.$el.append(t.$el)})}}),l=r.extend({initialize:function(e){r.prototype.initialize.apply(this,arguments),!!e.parent&&e.parent.children.push(this)}}),g.widget_instance=wp.media.View.extend({tagName:"div",className:"widget-instance widget-inside",initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.$form=e("<form />"),this.$spinner=e('<span class="spinner" style="visibility:visible;float:none"></span>'),this.$el.append(this.$spinner),this.$el.append(this.$form),this.$widget=null;var t=this;return e.ajax({method:"post",url:c.ajaxurl,complete:function(e,t){},success:function(i,n,s){t.$spinner.remove(),t.$widget=e(i),t.$form.html("").append(t.$widget),t.prepareMCE(),wp.mediaWidgets.handleWidgetAdded({},t.$el.parent()),wp.textWidgets.handleWidgetAdded({},t.$el.parent())},data:{action:"gridbuilder-get-widget",nonce:c.get_widget_nonce,widget_class:this.options.model.get("widget_class"),instance:JSON.stringify(this.options.model.get("instance"))}}),this},hasMCE:function(){return this.getMCE().length>0},getMCE:function(e){var t=this.$(".mce-tinymce + textarea, .quicktags-toolbar + textarea"),i=[];return _.each(tinyMCE.editors,function(e,n){t.each(function(t,n){n===e.targetElm&&i.push(e)})}),i},getValue:function(){var e={};return _.each(this.getMCE(),function(e){e.save()}),_.each(this.$form.serializeArray(),function(t){var i,n=t.name.match(/\[([a-z0-9-_]+)\]$/g);n&&(i=n.length?n[0].replace(/[\[\]]+/g,""):t.name,e[i]=t.value)}),e},setValue:function(e){return this},dismiss:function(){var t=this.$el.parent().find(".widget-inside > form, .widget-inside > .form").find(" > .widget-id").val();return wp.mediaWidgets.widgetControls[t]&&delete wp.mediaWidgets.widgetControls[t],wp.textWidgets.widgetControls[t]&&delete wp.textWidgets.widgetControls[t],e(document).trigger({type:"widget-removed",target:this.$widget}),_.each(this.getMCE(),function(e){tinymce.remove(e)}),this.resetMCE(),this},prepareMCE:function(){var e=this,t=this.$el.closest(".grid-ui-modal").get(0);this._prevMCE={},t&&(d=1e3+parseInt(window.getComputedStyle(t).getPropertyValue("z-index")),this._prevMCE.FloatPanelZindex=tinyMCE.ui.FloatPanel.zIndex,tinyMCE.ui.FloatPanel.zIndex+=d,this._prevMCE.TooltipRepaint=tinyMCE.ui.Tooltip.prototype.repaint,tinyMCE.ui.Tooltip.prototype.repaint=function(){e._prevMCE.TooltipRepaint.apply(this,arguments),this.getEl().style.zIndex=d+65535+65535},this._prevMCE.NotificationpRepaint=tinyMCE.ui.Notification.prototype.repaint,tinyMCE.ui.Notification.prototype.repaint=function(){e._prevMCE.NotificationpRepaint.apply(this,arguments);var t=this.getEl().style;t.zIndex=d+65535+65535,console.log(t.zIndex)},tinymce.ui.WPLinkPreview&&(this._prevMCE.wpLinkRenderHtml=tinymce.ui.WPLinkPreview.prototype.renderHtml,tinymce.ui.WPLinkPreview.prototype.renderHtml=function(){return e._prevMCE.wpLinkRenderHtml.apply(this,arguments).replace('class="wp-link-preview"','class="wp-link-preview in-grid-modal"')}))},resetMCE:function(){this._prevMCE&&(!!this._prevMCE.FloatPanelZindex&&(tinyMCE.ui.FloatPanel.zIndex=this._prevMCE.FloatPanelZindex),!!this._prevMCE.TooltipRepaint&&(tinyMCE.ui.Tooltip.prototype.repaint=this._prevMCE.TooltipRepaint),!!this._prevMCE.NotificationpRepaint&&(tinyMCE.ui.Notification.prototype.repaint=this._prevMCE.NotificationpRepaint),!!this._prevMCE.wpLinkRenderHtml&&(tinymce.ui.WPLinkPreview.prototype.renderHtml=this._prevMCE.wpLinkRenderHtml))}}),a=Backbone.View.extend({tagName:"input",attributes:{type:"text"},events:{'blur [type="text"]':"update"},initialize:function(e){return this.property=e.property,this.model=e.model,this},render:function(){var e=this;return Backbone.View.prototype.render.apply(this,arguments),this.$el.on("change",function(){e.update()}),this},update:function(){this.model.set(this.property,this.$el.val()),this.model.save()}}),o=wp.media.View.extend({template:wp.template("grid-ui-templates-list"),className:"templates-list",render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return this.options.templates.each(function(t,i){var n=new Backbone.View({tagName:"li"}),s=new wp.media.view.Button({model:t,text:"",classes:["delete","dashicons","dashicons-dismiss"],click:function(){return this.options.model.destroy(),!1}}),o=new a({tagName:"input",property:"name",model:t,attributes:{value:t.get("name"),type:"text"}});n.render().$el.append(o.render().$el,s.render().$el),e.$(".templates").append(n.$el),n.listenTo(t,"destroy",function(){this.$el.remove()}),o.listenTo(o,"keyup",function(){})}),this}}),n=wp.media.View.extend({template:wp.template("grid-ui-input-wrap"),className:"input-wrap",initialize:function(t){var n=i();_.extend(t,{lock:p.locks}),wp.media.View.prototype.initialize.apply(this,arguments),"html"==t.settings.type?(this.$el=e(t.settings.html),this.input={getValue:function(){},setValue:function(){},render:function(){},dismiss:function(){}}):n[t.settings.type]?this.input=new n[t.settings.type](t):(this.input=!1,console.log("no such type",t.settings.type))},render:function(){var e=this;return wp.media.View.prototype.render.apply(this,arguments),this.input?(this.input.render(),this.$(".input").append(this.input.$el),this.$el.addClass("input-type-"+this.options.settings.type),this.setLock(this.options.locked),this.options.settings.attr&&_.each(this.options.settings.attr,function(t,i){var n=e.$el.attr(i),s=" ";"style"==i&&(s=";"),e.$el.attr(i,n+s+t)}),this):this},getLock:function(){return this.$('.lock [type="checkbox"]').prop("checked")},setLock:function(e){this.$('.lock [type="checkbox"]').prop("checked",e)},getValue:function(){return this.input.getValue()},setValue:function(e){return this.input.setValue(e),this},dismiss:function(){return this.input.dismiss(),this}}),s=wp.media.View.extend({template:wp.template("grid-ui-input-group"),className:"input-group",initialize:function(e){wp.media.View.prototype.initialize.apply(this,arguments);var t=this;this.model=e.model,this.inputs=[],_.each(e.settings.items,function(e,i){"matrix"==e.type?t.initializeInputMatrix(e,i):t.initializeInputWrap(e,i)})},initializeInputWrap:function(e,t){var i,s=!1,o=this;return _.extend(e,{name:t,lock:p.locks&&"label"!=e.type}),!p.locks&&o.model.get(t+":locked")||(i=o.model.get(t),s=new n({controller:o.controller,settings:e,value:void 0!==i?i:null,locked:!!o.model.get(t+":locked"),model:o.model}),o.inputs.push(s)),s},initializeInputMatrix:function(e,t){var i=this,n=new r({tagName:"table",className:"input-matrix form-table",template:wp.template("grid-ui-input-matrix")});_.each(e.rows,function(e,t){var s=new l({tagName:"tr",parent:n});_.each(e,function(e,t){var n,o=new l({tagName:"td",parent:s});n=i.initializeInputWrap(e,t),n.$parent=o.$el})}),i.inputs.push(n)},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return _.each(this.inputs,function(t){t.render(),t.$parent?t.$parent.append(t.$el):e.$(".inputs").append(t.$el)}),this},dismiss:function(){return _.each(this.inputs,function(e){!!e.dismiss&&e.dismiss()}),this}}),EditDialog=t.view.EditDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-edit-dialog"),className:"edit-dialog sidebar",events:{"click .apply":"done"},initialize:function(e){var i=this;return t.view.ui.Dialog.prototype.initialize.apply(this,arguments),this.inputgroups=[],this.editor=new s({controller:this,model:this.model,settings:{title:"",items:e.editor.main}}),_.each(e.editor.sidebar,function(e,t){_.extend(e,{name:t});var n=new s({controller:i,model:i.model,settings:e});i.inputgroups.push(n)}),this},render:function(){t.view.ui.Dialog.prototype.render.apply(this,arguments);var e=this;return _.each(this.inputgroups,function(t){t.render(),e.$(".grid-dialog-sidebar").append(t.$el)}),this.$(".grid-dialog-content").append(this.editor.render().$el),this},applyChanges:function(){function e(e){if(e.options.settings&&e.options.settings.name){var i=e.options.settings.name;isNaN(parseInt(i))&&(t[i]=e.getValue(),p.locks&&(t[i+":locked"]=e.getLock()))}}var t={};return _.each(this.editor.inputs,e),_.each(this.inputgroups,function(t){_.each(t.inputs,e)}),this.model.set(t),this},done:function(){return this.applyChanges(),this.trigger("done"),!1},dismiss:function(){return this.editor.dismiss(),_.each(this.inputgroups,function(e){e.dismiss()}),t.view.ui.Dialog.prototype.dismiss.apply(this,arguments),this}}),ManageTemplatesDialog=t.view.ManageTemplatesDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-dialog"),className:"manage-templates-dialog",events:{"click .apply":"done"},initialize:function(){t.view.ui.Dialog.prototype.initialize.apply(this,arguments);var e=this;this.templateLists={},_.each(["Container","Row","Cell","Widget"],function(i){e.templateLists[i.toLowerCase()]=new o({title:h[i]+" "+h.Templates,templates:t.templates[i.toLowerCase()]})})},render:function(){t.view.ui.Dialog.prototype.render.apply(this,arguments);var e=this;return _.each(this.templateLists,function(t){e.$(".grid-dialog-content").append(t.render().$el)}),this},done:function(e){return this.trigger("done"),!1}}),SelectWidgetDialog=t.view.SelectWidgetDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-dialog"),className:"select-widget-dialog",events:{'change [name="widget_class"]':"done"},initialize:function(){t.view.ui.Dialog.prototype.initialize.apply(this,arguments),this.selectWidget=new n({model:this.model,settings:{type:"radio",name:"widget_class",title:h.WidgetTypes,options:c.widgets}})},render:function(){return t.view.ui.Dialog.prototype.render.apply(this,arguments),this.$(".grid-dialog-content").append(this.selectWidget.render().$el),this},done:function(){var e=this.selectWidget.getValue();return this.model.set("widget_class",escape(e)),this.selectWidget.setValue(null),this.trigger("done"),!1}})}(jQuery,window.grid),function(e,t){document.caretPositionFromPoint&&!document.caretRangeFromPoint&&(document.caretRangeFromPoint=document.caretPositionFromPoint);var i,n,s,o,a,r,l,d,c,p,h=gridbuilder.l10n,u=gridbuilder.options,g=gridbuilder.options.features,m={},f={},v=[];_.each(u.screensizes.sizes,function(e,t){m[t]="size_"+t,f[t]="offset_"+t}),_.templateSettings={interpolate:/\{\{(.+?)\}\}/g},u.screensizes.size_lock_template=_.template("col-{{screensize}}-lock"),u.screensizes.offset_lock_template=_.template("col-{{screensize}}-offset-lock"),u.screensizes.size_class_template=_.template("col-{{screensize}}-{{size}}"),u.screensizes.offset_class_template=_.template("col-{{screensize}}-offset-{{size}}"),d=wp.media.View.extend({tagName:"div",className:"display-selector",initialize:function(e){this.model=e.model,this.listenTo(this.model,"change",this.render)},render:function(){var e=this.model.get("attr_id"),t=this.model.get("attr_class"),i=this.model.get("locked"),n="";return e&&(n+='<span class="display-id">#'+e+"</span>"),t&&(n+='<span class="display-class">.'+t.split(" ").join(".")+"</span>"),i&&(n+='<span class="dashicons dashicons-lock"></span>'),this.$el.html(n),this}}),c=wp.media.View.extend({tagName:"div",className:"display-template",initialize:function(e){this.model=e.model,this.listenTo(this.model,"change",this.render)},render:function(){var e=this.model.get("template"),t="";return e&&(t+=h.Template+": "+e),this.$el.text(t),this}}),r=wp.media.View.extend({events:{dblclick:"edit"},initialize:function(e){var i;return this.Subviews=wp.Backbone.Subviews,this.options=e,this.controller=e.controller,this.model=e.model,this.templateDisplay=new c({model:this.model}),this.selectorDisplay=new d({model:this.model}),this.listenTo(this.model,"change",this.updateDisplay),i=this.model.get("template"),i&&!t.templates.get(this.getClassName(),i)&&this.model.unset("template"),v.push(this),this.$el.data("view",this),this},edit:function(e){!g.locks&&this.model.get("locked")||(this.controller.setSelected(this).editItem(),e.stopPropagation())},remove:function(){var e=v.indexOf(this);v.splice(e,1),this.$el.remove()},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this,t=this.collectionView(),i=this.$(">.collection,>*>.collection").first();return!g.locks&&this.model.get("locked")?this.$el.addClass("locked"):this.$el.addClass("unlocked"),i.html(""),this.$el.data("model",this.model),i.data("view",this).data("model",this.model.items),t&&this.model.items.each(function(n,s){var o=new t({controller:e.options.controller,model:n,parent:e});i.append(o.$el),o.render()}),this.$el.prepend(this.selectorDisplay.render().$el),this.$el.prepend(this.templateDisplay.render().$el),this.updateDisplay(),this},reFocus:function(){this.$el.focus()},updateDisplay:function(){this.updateVisibilityClasses()},setVisibility:function(e){var t=this.controller.view,i=this.controller.toolbar.whichView(),n="visibility_"+i;this.model.set(n,e),t.hasChanged()},updateVisibilityClasses:function(){var e=this,t=[],i=[];return _.each(u.screensizes.sizes,function(n,s){var o=e.model.get("visibility_"+s),a="visible-"+s,r="hidden-"+s;"visible"===o?(t.push(a),i.push(r)):"hidden"===o?(t.push(r),i.push(a)):(i.push(a),i.push(r))}),this.$el.removeClass(i.join(" ")).addClass(t.join(" ")),this},detach:function(){},is:function(e){return this.constructor===e},closest:function(e){for(var t=this;t&&!t.is(e);)t=t.parent();return t},parent:function(){return this.options.parent},getClass:function(){return this.constructor},getClassName:function(){var e=this,t=_.filter(["Grid","Container","Row","Cell","Widget"],function(t){return e.is(p[t])});return!!t.length&&t[0]},hasChanged:function(){this.closest(i).hasChanged()},getTitle:function(){return h[this.getClassName()]}}),l=r.extend({initialize:function(){return r.prototype.initialize.apply(this,arguments)},updateDisplay:function(){r.prototype.updateDisplay.apply(this,arguments),this.updateColLockClasses(),this.updateSizeClasses(),this.updateOffsetClasses()},render:function(){var e=this;return r.prototype.render.apply(this,arguments),_.each(m,function(t,i){var n=e.model.get(t);n&&e.setColClass(n,i)}),_.each(f,function(t,i){var n=e.model.get(t);isNaN(parseInt(n))||e.setOffsetClass(n,i)}),this},getCurrentSize:function(){var t=this.controller.toolbar.whichView(),i=this,n=!1,s=!1;return e.each(m,function(e,o){var a=i.model.get(o);!n&&a&&(s=parseInt(a)),e==t&&(n=!0)}),s||u.screensizes.columns},hasColClass:function(){var e,t="(\\w+)",i="(\\d+)";return arguments[0]&&(t=arguments[0],arguments[1]&&(i=arguments[1])),e=u.screensizes.size_class_template({screensize:t,size:i}),!!this.$el.attr("class").match(new RegExp(e,"g"))},setColClass:function(e,t){var i;return this.$el.removeClass(this.getColClassnames(t).join(" ")),isNaN(parseInt(e))||(i=u.screensizes.size_class_template({screensize:t,size:e}),this.$el.addClass(i)),this},getCurrentOffset:function(){var e=this.controller.toolbar.whichView(),t=this,i=!1,n=!1;return offset_key=_.find(f,function(s,o){var a=t.model.get(s);!i&&a&&(n=parseInt(a)),o==e&&(i=!0)}),n||0},setOffsetClass:function(e,t){var i;return this.$el.removeClass(this.getColClassnames(t,u.screensizes.offset_class_template).join(" ")),isNaN(parseInt(e))||(i=u.screensizes.offset_class_template({screensize:t,size:e}),this.$el.addClass(i)),this},getColClassnames:function(e,t){void 0===t&&(t=u.screensizes.size_class_template);for(var i=[],n=0;n<13;n++)i.push(t({screensize:e,size:n}));return i},getLockClassnames:function(e,t){return""},incrementOffset:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentOffset();t<u.screensizes.columns-1&&this.setOffset(t+1,e)},decrementOffset:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentOffset();t>0&&this.setOffset(t-1,e)},incrementSize:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentSize();t<u.screensizes.columns&&this.setSize(t+1,e)},decrementSize:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentSize();console.log(t),t>1&&this.setSize(t-1,e)},setSize:function(e,t){this.model.set("size_"+t,e),this.setColClass(e,t),this.hasChanged()},setOffset:function(e,t){this.setOffsetClass(e,t),this.model.set("offset_"+t,e),this.hasChanged()},updateSizeClasses:function(){var e=this;_.each(u.screensizes.sizes,function(t,i){var n=e.model.get("size_"+i);e.setColClass(n,i)})},updateOffsetClasses:function(){var e=this;_.each(u.screensizes.sizes,function(t,i){var n=e.model.get("offset_"+i);e.setOffsetClass(n,i)})},updateColLockClasses:function(){var e=this,t=[],i=[];_.each(u.screensizes.sizes,function(n,s){_.each({size:u.screensizes.size_lock_template,offset:u.screensizes.offset_lock_template},function(n,o){var a=n({screensize:s});e.model.get(o+"_"+s+":locked")?t.push(a):i.push(a)})}),this.$el.removeClass(i.join(" ")).addClass(t.join(" "))}}),a=t.view.element.Widget=l.extend({template:wp.template("grid-element-widget"),className:"widget grid-item",tagName:"li",attributes:{tabindex:0},updateDisplay:function(){l.prototype.updateDisplay.apply(this,arguments),this.$(".widget-type").text(this.getTitle());var e=this.model.get("instance").title;return this.$(".widget-title").text(e),this.hasColClass()||this.setColClass(u.screensizes.columns,_.keys(u.screensizes.sizes)[0]),this},collectionView:function(){return!1},getTitle:function(){var e=this.model.get("widget_class");try{return u.widgets[unescape(e)].name}catch(t){return h.unkonwnWidget+" "+e}}}),o=t.view.element.Cell=l.extend({template:wp.template("grid-element-cell"),className:"cell grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){var e=l.prototype.initialize.apply(this,arguments);return this.listenTo(this.model.items,"update",this.itemsChanged),e},itemsChanged:function(){this.parent().adjustCellSize()},render:function(){function t(t){var i=e.Event("drag",{pageX:t.pageX,pageY:t.pagey,screenX:t.screenX,screenY:t.screeny,clientX:t.clientX,clienty:t.clienty});n.trigger(i)}function i(n){e(document).off("mousemove",t),e(document).off("mouseup",i)}l.prototype.render.apply(this,arguments);var n,s,o,a=this;return!g.locks&&this.model.get("locked")||(this.$(".resize-handle, .offset-handle").on("mousedown",function(r){var l=a.controller.toolbar.whichView(),d=(e(this).is(".offset-handle")?"offset_":"size_")+l;!g.lock&&a.model.get(d+":locked")||(s=r.screenX,o=a.getCurrentOffset(),n=e(this),e(document).on("mousemove",t),e(document).on("mouseup",i)),r.preventDefault()}),this.$(".resize-handle").on("drag",function(t){var i=e(this).closest(".row").width()/u.screensizes.columns,n=a.controller.toolbar.whichView(),s=Math.max(1,Math.min(u.screensizes.columns,Math.round((t.pageX-a.$el.offset().left)/i)));a.model.get("size_"+n)!=s&&a.setSize(s,n),t.stopPropagation()}),this.$(".offset-handle").on("drag",function(t){var i=e(this).closest(".row").width()/u.screensizes.columns;viewSize=a.controller.toolbar.whichView(),diff=s-t.screenX,offsetDiff=Math.round(diff/i),offset=Math.min(11,Math.max(0,o-offsetDiff)),prevOffset=a.model.get("offset_"+viewSize),prevOffset!=offset&&a.setOffset(offset,viewSize),t.stopPropagation(),t.stopImmediatePropagation()})),this},collectionView:function(){return a}}),s=t.view.element.Row=r.extend({template:wp.template("grid-element-row"),className:"row grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){r.prototype.initialize.apply(this,arguments);return this},render:function(){r.prototype.render.apply(this,arguments);var e=this;return setTimeout(function(){e.adjustCellSize()},1),this},adjustCellSize:function(){var t=this.$(".cell"),i=0;return t.each(function(t,n){e(this).removeAttr("style"),i=Math.max(i,e(this).height())}),t.each(function(){e(this).css({height:i+"px"})}),this},collectionView:function(){return o}}),n=t.view.element.Container=r.extend({template:wp.template("grid-element-container"),className:"container grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){return r.prototype.initialize.apply(this,arguments),this},render:function(){return r.prototype.render.apply(this,arguments),this.setCollapsed(this.model.get("collapsed")),this},collectionView:function(){return s},toggleCollapsed:function(e){var t=!this.model.get("collapsed");this.setCollapsed(t),e.preventDefault()},setCollapsed:function(t){this.$el.toggleClass("collapsed",!!t),this.model.set("collapsed",!!t),this.$(">.collection .row").each(function(){e(this).data("view").adjustCellSize()})}}),n.prototype.events["click .toggle-collapse"]="toggleCollapsed",i=t.view.element.Grid=r.extend({template:wp.template("grid-element-grid"),className:"grid-view grid-item",tagName:"div",attributes:{"data-grid-columns":u.screensizes.columns},events:{},initialize:function(){r.prototype.initialize.apply(this,arguments),this.selectWidgetModal=null,this.templateSelectOptions=[]},render:function(){return r.prototype.render.apply(this,arguments),this.$el.removeAttr("tabindex"),this.initSortables(),this.controller.setSelected(this),this},renderTemplateSelects:function(){var e=this;_.each(this.templateSelectOptions,function(t){t.stopListening(),t.remove(),e.stopListening(t.model)}),_.each(["container","row","cell","widget"],function(i){var n=e.$("select.add-"+i);t.templates[i].each(function(t){var i=t.get("slug"),s=new Backbone.View({tagName:"option",attributes:{value:i},model:t});s.render().$el.text(t.get("name")),n.append(s.$el),s.listenTo(t,"change",function(){this.$el.text(this.model.get("name"))}),e.listenTo(t,"destroy",function(){var i=!1;_.each(v,function(e,n){e.model.get("template")===t.id&&(e.model.unset("template"),i=!0)}),i&&e.hasChanged()}),e.templateSelectOptions.push(s)})})},initSortables:function(){var t=["container","row","cell","widget"],i={ghostClass:"ghost",scroll:!0};e('[data-sort-group="cell"]').on("add remove",function(e){}),_.each(t,function(t){var n=e.extend({group:t,handle:".sort-handle"},i);e('.unlocked>[data-sort-group="'+t+'"]').sortable(n).on("add",function(t){var i=e(this).data("model"),n=e(this).data("view"),s=e(t.originalEvent.item).data("view");i.add(e(t.originalEvent.item).data("model"),{silent:!0}),i.trigger("update"),s.options.parent=n,t.stopPropagation()}).on("remove",function(t){var i=e(this).data("model");i.remove(e(t.originalEvent.item).data("model"),{silent:!0}),i.trigger("update"),t.stopPropagation()}).on("sort",function(t){e(this).children().each(function(t,i){e(i).data("model").set("idx",t)}),e(this).data("model").sort(),t.stopPropagation()})})},setItemVisibility:function(e){var t=this.getSelected();t&&t.setVisibility(this.$('[name="set-visibility"]:checked').val())},collectionView:function(){return n},hasChanged:function(){this.model.trigger("change",this.model)}}),p={Grid:i,Container:n,Row:s,Cell:o,Widget:a}}(jQuery,window.grid),function(e,t){var i,n,s=gridbuilder.l10n,o=gridbuilder.options.features,a=gridbuilder.options.default_widget,r=gridbuilder.options.default_widget_content_property,l=t.view.element;e(document).ready(function(){var o=!!parseInt(e('[name="_grid_enabled"]').val()),l='<input type="hidden" name="_grid_enabled" value="'+(o?1:0).toString()+'" />',d='<button type="button" id="edit-content-grid" class="button-secondary toggle-grid-editor">'+s.EditGrid+"</button>",c='<button type="button" id="edit-content-text" class="button-secondary toggle-grid-editor">'+s.EditText+"</button>",p=e('[name="_grid_data"]').val(),h=!JSON.parse(p),u="",g=gridbuilder.options.features.autosave=!!window.getUserSetting("grid-autosave");i=null,n=function(n){var s,o,l=_.isUndefined(n)?"true"!==e("#postdivrich").attr("date-grid-editor-mode"):n;e("#postdivrich").attr("date-grid-editor-mode",l.toString()),e('[name="_grid_enabled"]').val(l?1:0),l||e(window).trigger("resize"),l&&h&&(o={widget_class:a,instance:{}},o.instance[r]=e('textarea[name="content"]').val(),s={items:[{items:[{items:[{size_xs:12,items:[o]}]}]}]},e('[name="_grid_data"]').val(JSON.stringify(s)),h=!1),l&&!i&&(i=new t.controller.Grid)},u+='<div id="grid-toggle-wrap" class="grid-toolbar">',u+='<div class="toolbar-left">',u+='<label class="set-autosave" for="grid_autosave">',u+='<input type="checkbox" name="grid_autosave" id="grid_autosave" value="1" '+(g?"checked":"")+" />",u+=s.Autosave,u+="</label>",u+="</div>",u+='<div class="toolbar-right">',u+=l,u+=d,u+=c,u+="</div>",u+="</div>",e("#postdivrich").attr("date-grid-editor-mode",o.toString()).prepend(u),n(o),"undefined"!=typeof bstw_data&&bstw_data.deactivate_events.push("deactivate-tinymce")}).on("click",".toggle-grid-editor",function(e){n()}).on("change",'[name="grid_autosave"]',function(t){var i=!!e(this).prop("checked");o.autosave=i,window.setUserSetting("grid-autosave",i)}).on("copy cut",function(e){var n,s,o=i.getSelected();o&&(n=JSON.stringify(o.model.toJSON()),e.originalEvent.clipboardData.setData("application/json",n),"cut"===e.type&&(s=t.getActiveEditor(),s._deleteItem(o)),e.preventDefault())}).on("paste",function(e){var n,s,o,a,r,d=t.view.element,c=i.getSelected(),p=e.originalEvent.clipboardData.getData("application/json");if(c){try{n=JSON.parse(p)}catch(e){return}if(n&&-1!==["grid","container","row","cell","widget"].indexOf(n.type)&&("grid"!=n.type||!c.is(d.Grid))){if("container"===n.type)if(o=l.Container,c.is(l.Grid))a=c;else{if(!c.is(l.Container))return;r=c,a=c.parent()}if("row"===n.type)if(o=l.Row,c.is(l.Container))a=c;else{if(!c.is(l.Row))return;r=c,a=c.parent()}if("cell"===n.type)if(o=l.Cell,c.is(l.Row))a=c;else{if(!c.is(l.Cell))return;r=c,a=c.parent()}if("widget"===n.type)if(o=l.Widget,c.is(l.Cell))a=c;else{if(!c.is(l.Widget))return;r=c,a=c.parent()}s=t.getActiveEditor(),s._addItem(o,a,n,r)}}}),e(document).on("tinymce-editor-setup",function(t,i){var n=["body_class","content_css","entities","entity_encoding","formats","language","plugins","preview_styles","toolbar1","toolbar2","toolbar3","toolbar4","wp_lang_attr","wp_shortcut_labels"];e.each(n,function(e,t){i.settings[t]=tinyMCEPreInit.mceInit.content[t]})})}(jQuery,window.grid);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
