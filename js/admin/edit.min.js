!function(e){"use strict";"function"==typeof define&&define.amd?define(e):"undefined"!=typeof module&&void 0!==module.exports?module.exports=e():"undefined"!=typeof Package?Sortable=e():window.Sortable=e()}(function(){"use strict";function e(e,t){if(!e||!e.nodeType||1!==e.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(e);this.el=e,this.options=t=w({},t),e[j]=this;var i={group:Math.random(),sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(e.nodeName)?"li":">*",ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",ignore:"a, img",filter:null,animation:0,setData:function(e,t){e.setData("Text",t.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1};for(var n in i)!(n in t)&&(t[n]=i[n]);Y(t);for(var o in this)"_"===o.charAt(0)&&(this[o]=this[o].bind(this));this.nativeDraggable=!t.forceFallback&&L,s(e,"mousedown",this._onTapStart),s(e,"touchstart",this._onTapStart),this.nativeDraggable&&(s(e,"dragover",this),s(e,"dragenter",this)),J.push(this._onDragOver),t.store&&this.sort(t.store.get(this))}function t(e){C&&C.state!==e&&(r(C,"display",e?"none":""),!e&&C.state&&k.insertBefore(C,y),C.state=e)}function i(e,t,i){if(e){i=i||A;do{if(">*"===t&&e.parentNode===i||f(e,t))return e}while(e!==i&&(e=e.parentNode))}return null}function n(e){e.dataTransfer&&(e.dataTransfer.dropEffect="move"),e.preventDefault()}function s(e,t,i){e.addEventListener(t,i,!1)}function o(e,t,i){e.removeEventListener(t,i,!1)}function a(e,t,i){if(e)if(e.classList)e.classList[i?"add":"remove"](t);else{var n=(" "+e.className+" ").replace(B," ").replace(" "+t+" "," ");e.className=(n+(i?" "+t:"")).replace(B," ")}}function r(e,t,i){var n=e&&e.style;if(n){if(void 0===i)return A.defaultView&&A.defaultView.getComputedStyle?i=A.defaultView.getComputedStyle(e,""):e.currentStyle&&(i=e.currentStyle),void 0===t?i:i[t];t in n||(t="-webkit-"+t),n[t]=i+("string"==typeof i?"":"px")}}function l(e,t,i){if(e){var n=e.getElementsByTagName(t),s=0,o=n.length;if(i)for(;s<o;s++)i(n[s],s);return n}return[]}function d(e,t,i,n,s,o,a){var r=A.createEvent("Event"),l=(e||t[j]).options,d="on"+i.charAt(0).toUpperCase()+i.substr(1);r.initEvent(i,!0,!0),r.to=t,r.from=s||t,r.item=n||t,r.clone=C,r.oldIndex=o,r.newIndex=a,t.dispatchEvent(r),l[d]&&l[d].call(e,r)}function c(e,t,i,n,s,o){var a,r,l=e[j],d=l.options.onMove;return a=A.createEvent("Event"),a.initEvent("move",!0,!0),a.to=t,a.from=e,a.dragged=i,a.draggedRect=n,a.related=s||t,a.relatedRect=o||t.getBoundingClientRect(),e.dispatchEvent(a),d&&(r=d.call(l,a)),r}function p(e){e.draggable=!1}function h(){X=!1}function u(e,t){var i=e.lastElementChild,n=i.getBoundingClientRect();return(t.clientY-(n.top+n.height)>5||t.clientX-(n.right+n.width)>5)&&i}function g(e){for(var t=e.tagName+e.className+e.src+e.href+e.textContent,i=t.length,n=0;i--;)n+=t.charCodeAt(i);return n.toString(36)}function m(e,t){var i=0;if(!e||!e.parentNode)return-1;for(;e&&(e=e.previousElementSibling);)"TEMPLATE"!==e.nodeName.toUpperCase()&&f(e,t)&&i++;return i}function f(e,t){if(e){t=t.split(".");var i=t.shift().toUpperCase(),n=new RegExp("\\s("+t.join("|")+")(?=\\s)","g");return!(""!==i&&e.nodeName.toUpperCase()!=i||t.length&&((" "+e.className+" ").match(n)||[]).length!=t.length)}return!1}function v(e,t){var i,n;return function(){void 0===i&&(i=arguments,n=this,setTimeout(function(){1===i.length?e.call(n,i[0]):e.apply(n,i),i=void 0},t))}}function w(e,t){if(e&&t)for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);return e}if("undefined"==typeof window||void 0===window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var y,_,b,C,k,$,z,x,S,D,N,V,E,T,M,I,O,W={},B=/\s+/g,j="Sortable"+(new Date).getTime(),P=window,A=P.document,R=P.parseInt,L=!!("draggable"in A.createElement("div")),G=function(e){return e=A.createElement("x"),e.style.cssText="pointer-events:auto","auto"===e.style.pointerEvents}(),X=!1,F=Math.abs,J=[],U=v(function(e,t,i){if(i&&t.scroll){var n,s,o,a,r=t.scrollSensitivity,l=t.scrollSpeed,d=e.clientX,c=e.clientY,p=window.innerWidth,h=window.innerHeight;if(x!==i&&(z=t.scroll,x=i,!0===z)){z=i;do{if(z.offsetWidth<z.scrollWidth||z.offsetHeight<z.scrollHeight)break}while(z=z.parentNode)}z&&(n=z,s=z.getBoundingClientRect(),o=(F(s.right-d)<=r)-(F(s.left-d)<=r),a=(F(s.bottom-c)<=r)-(F(s.top-c)<=r)),o||a||(o=(p-d<=r)-(d<=r),a=(h-c<=r)-(c<=r),(o||a)&&(n=P)),W.vx===o&&W.vy===a&&W.el===n||(W.el=n,W.vx=o,W.vy=a,clearInterval(W.pid),n&&(W.pid=setInterval(function(){n===P?P.scrollTo(P.pageXOffset+o*l,P.pageYOffset+a*l):(a&&(n.scrollTop+=a*l),o&&(n.scrollLeft+=o*l))},24)))}},30),Y=function(e){var t=e.group;t&&"object"==typeof t||(t=e.group={name:t}),["pull","put"].forEach(function(e){e in t||(t[e]=!0)}),e.groups=" "+t.name+(t.put.join?" "+t.put.join(" "):"")+" "};return e.prototype={constructor:e,_onTapStart:function(e){var t=this,n=this.el,s=this.options,o=e.type,a=e.touches&&e.touches[0],r=(a||e).target,l=r,c=s.filter;if(!("mousedown"===o&&0!==e.button||s.disabled)&&(r=i(r,s.draggable,n))){if(V=m(r,s.draggable),"function"==typeof c){if(c.call(this,e,r,this))return d(t,l,"filter",r,n,V),void e.preventDefault()}else if(c&&(c=c.split(",").some(function(e){if(e=i(l,e.trim(),n))return d(t,e,"filter",r,n,V),!0})))return void e.preventDefault();s.handle&&!i(l,s.handle,n)||this._prepareDragStart(e,a,r)}},_prepareDragStart:function(e,t,i){var n,o=this,r=o.el,d=o.options,c=r.ownerDocument;i&&!y&&i.parentNode===r&&(M=e,k=r,y=i,_=y.parentNode,$=y.nextSibling,T=d.group,n=function(){o._disableDelayedDrag(),y.draggable=!0,a(y,o.options.chosenClass,!0),o._triggerDragStart(t)},d.ignore.split(",").forEach(function(e){l(y,e.trim(),p)}),s(c,"mouseup",o._onDrop),s(c,"touchend",o._onDrop),s(c,"touchcancel",o._onDrop),d.delay?(s(c,"mouseup",o._disableDelayedDrag),s(c,"touchend",o._disableDelayedDrag),s(c,"touchcancel",o._disableDelayedDrag),s(c,"mousemove",o._disableDelayedDrag),s(c,"touchmove",o._disableDelayedDrag),o._dragStartTimer=setTimeout(n,d.delay)):n())},_disableDelayedDrag:function(){var e=this.el.ownerDocument;clearTimeout(this._dragStartTimer),o(e,"mouseup",this._disableDelayedDrag),o(e,"touchend",this._disableDelayedDrag),o(e,"touchcancel",this._disableDelayedDrag),o(e,"mousemove",this._disableDelayedDrag),o(e,"touchmove",this._disableDelayedDrag)},_triggerDragStart:function(e){e?(M={target:y,clientX:e.clientX,clientY:e.clientY},this._onDragStart(M,"touch")):this.nativeDraggable?(s(y,"dragend",this),s(k,"dragstart",this._onDragStart)):this._onDragStart(M,!0);try{A.selection?A.selection.empty():window.getSelection().removeAllRanges()}catch(e){}},_dragStarted:function(){k&&y&&(a(y,this.options.ghostClass,!0),e.active=this,d(this,k,"start",y,k,V))},_emulateDragOver:function(){if(I){if(this._lastX===I.clientX&&this._lastY===I.clientY)return;this._lastX=I.clientX,this._lastY=I.clientY,G||r(b,"display","none");var e=A.elementFromPoint(I.clientX,I.clientY),t=e,i=" "+this.options.group.name,n=J.length;if(t)do{if(t[j]&&t[j].options.groups.indexOf(i)>-1){for(;n--;)J[n]({clientX:I.clientX,clientY:I.clientY,target:e,rootEl:t});break}e=t}while(t=t.parentNode);G||r(b,"display","")}},_onTouchMove:function(t){if(M){e.active||this._dragStarted(),this._appendGhost();var i=t.touches?t.touches[0]:t,n=i.clientX-M.clientX,s=i.clientY-M.clientY,o=t.touches?"translate3d("+n+"px,"+s+"px,0)":"translate("+n+"px,"+s+"px)";O=!0,I=i,r(b,"webkitTransform",o),r(b,"mozTransform",o),r(b,"msTransform",o),r(b,"transform",o),t.preventDefault()}},_appendGhost:function(){if(!b){var e,t=y.getBoundingClientRect(),i=r(y),n=this.options;b=y.cloneNode(!0),a(b,n.ghostClass,!1),a(b,n.fallbackClass,!0),r(b,"top",t.top-R(i.marginTop,10)),r(b,"left",t.left-R(i.marginLeft,10)),r(b,"width",t.width),r(b,"height",t.height),r(b,"opacity","0.8"),r(b,"position","fixed"),r(b,"zIndex","100000"),r(b,"pointerEvents","none"),n.fallbackOnBody&&A.body.appendChild(b)||k.appendChild(b),e=b.getBoundingClientRect(),r(b,"width",2*t.width-e.width),r(b,"height",2*t.height-e.height)}},_onDragStart:function(e,t){var i=e.dataTransfer,n=this.options;this._offUpEvents(),"clone"==T.pull&&(C=y.cloneNode(!0),r(C,"display","none"),k.insertBefore(C,y)),t?("touch"===t?(s(A,"touchmove",this._onTouchMove),s(A,"touchend",this._onDrop),s(A,"touchcancel",this._onDrop)):(s(A,"mousemove",this._onTouchMove),s(A,"mouseup",this._onDrop)),this._loopId=setInterval(this._emulateDragOver,50)):(i&&(i.effectAllowed="move",n.setData&&n.setData.call(this,i,y)),s(A,"drop",this),setTimeout(this._dragStarted,0))},_onDragOver:function(e){var n,s,o,a=this.el,l=this.options,d=l.group,p=d.put,g=T===d,m=l.sort;if(void 0!==e.preventDefault&&(e.preventDefault(),!l.dragoverBubble&&e.stopPropagation()),O=!0,T&&!l.disabled&&(g?m||(o=!k.contains(y)):T.pull&&p&&(T.name===d.name||p.indexOf&&~p.indexOf(T.name)))&&(void 0===e.rootEl||e.rootEl===this.el)){if(U(e,l,this.el),X)return;if(n=i(e.target,l.draggable,a),s=y.getBoundingClientRect(),o)return t(!0),void(C||$?k.insertBefore(y,C||$):m||k.appendChild(y));if(0===a.children.length||a.children[0]===b||a===e.target&&(n=u(a,e))){if(n){if(n.animated)return;v=n.getBoundingClientRect()}t(g),!1!==c(k,a,y,s,n,v)&&(y.contains(a)||(a.appendChild(y),_=a),this._animate(s,y),n&&this._animate(v,n))}else if(n&&!n.animated&&n!==y&&void 0!==n.parentNode[j]){S!==n&&(S=n,D=r(n),N=r(n.parentNode));var f,v=n.getBoundingClientRect(),w=v.right-v.left,z=v.bottom-v.top,x=/left|right|inline/.test(D.cssFloat+D.display)||"flex"==N.display&&0===N["flex-direction"].indexOf("row"),V=n.offsetWidth>y.offsetWidth,E=n.offsetHeight>y.offsetHeight,M=(x?(e.clientX-v.left)/w:(e.clientY-v.top)/z)>.5,I=n.nextElementSibling,W=c(k,a,y,s,n,v);if(!1!==W){if(X=!0,setTimeout(h,30),t(g),1===W||-1===W)f=1===W;else if(x){var B=y.offsetTop,P=n.offsetTop;f=B===P?n.previousElementSibling===y&&!V||M&&V:P>B}else f=I!==y&&!E||M&&E;y.contains(a)||(f&&!I?a.appendChild(y):n.parentNode.insertBefore(y,f?I:n)),_=y.parentNode,this._animate(s,y),this._animate(v,n)}}}},_animate:function(e,t){var i=this.options.animation;if(i){var n=t.getBoundingClientRect();r(t,"transition","none"),r(t,"transform","translate3d("+(e.left-n.left)+"px,"+(e.top-n.top)+"px,0)"),t.offsetWidth,r(t,"transition","all "+i+"ms"),r(t,"transform","translate3d(0,0,0)"),clearTimeout(t.animated),t.animated=setTimeout(function(){r(t,"transition",""),r(t,"transform",""),t.animated=!1},i)}},_offUpEvents:function(){var e=this.el.ownerDocument;o(A,"touchmove",this._onTouchMove),o(e,"mouseup",this._onDrop),o(e,"touchend",this._onDrop),o(e,"touchcancel",this._onDrop)},_onDrop:function(t){var i=this.el,n=this.options;clearInterval(this._loopId),clearInterval(W.pid),clearTimeout(this._dragStartTimer),o(A,"mousemove",this._onTouchMove),this.nativeDraggable&&(o(A,"drop",this),o(i,"dragstart",this._onDragStart)),this._offUpEvents(),t&&(O&&(t.preventDefault(),!n.dropBubble&&t.stopPropagation()),b&&b.parentNode.removeChild(b),y&&(this.nativeDraggable&&o(y,"dragend",this),p(y),a(y,this.options.ghostClass,!1),a(y,this.options.chosenClass,!1),k!==_?(E=m(y,n.draggable))>=0&&(d(null,_,"sort",y,k,V,E),d(this,k,"sort",y,k,V,E),d(null,_,"add",y,k,V,E),d(this,k,"remove",y,k,V,E)):(C&&C.parentNode.removeChild(C),y.nextSibling!==$&&(E=m(y,n.draggable))>=0&&(d(this,k,"update",y,k,V,E),d(this,k,"sort",y,k,V,E))),e.active&&(null!==E&&-1!==E||(E=V),d(this,k,"end",y,k,V,E),this.save()))),this._nulling()},_nulling:function(){k=y=_=b=$=C=z=x=M=I=O=E=S=D=T=e.active=null},handleEvent:function(e){var t=e.type;"dragover"===t||"dragenter"===t?y&&(this._onDragOver(e),n(e)):"drop"!==t&&"dragend"!==t||this._onDrop(e)},toArray:function(){for(var e,t=[],n=this.el.children,s=0,o=n.length,a=this.options;s<o;s++)e=n[s],i(e,a.draggable,this.el)&&t.push(e.getAttribute(a.dataIdAttr)||g(e));return t},sort:function(e){var t={},n=this.el;this.toArray().forEach(function(e,s){var o=n.children[s];i(o,this.options.draggable,n)&&(t[e]=o)},this),e.forEach(function(e){t[e]&&(n.removeChild(t[e]),n.appendChild(t[e]))})},save:function(){var e=this.options.store;e&&e.set(this)},closest:function(e,t){return i(e,t||this.options.draggable,this.el)},option:function(e,t){var i=this.options;if(void 0===t)return i[e];i[e]=t,"group"===e&&Y(i)},destroy:function(){var e=this.el;e[j]=null,o(e,"mousedown",this._onTapStart),o(e,"touchstart",this._onTapStart),this.nativeDraggable&&(o(e,"dragover",this),o(e,"dragenter",this)),Array.prototype.forEach.call(e.querySelectorAll("[draggable]"),function(e){e.removeAttribute("draggable")}),J.splice(J.indexOf(this._onDragOver),1),this._onDrop(),this.el=e=null}},e.utils={on:s,off:o,css:r,find:l,is:function(e,t){return!!i(e,t,e)},extend:w,throttle:v,closest:i,toggleClass:a,index:m},e.create=function(t,i){return new e(t,i)},e.version="1.4.2",e}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){"use strict";e.fn.sortable=function(t){var i,n=arguments;return this.each(function(){var s=e(this),o=s.data("sortable");if(o||!(t instanceof Object)&&t||(o=new Sortable(this,t),s.data("sortable",o)),o){if("widget"===t)return o;"destroy"===t?(o.destroy(),s.removeData("sortable")):"function"==typeof o[t]?i=o[t].apply(o,[].slice.call(n,1)):t in o.options&&(i=o.option.apply(o,n))}}),void 0===i?this:i}}),function(e,t){String.prototype.removeAccents=function(){var e={A:/[AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄ]/g,AA:/[Ꜳ]/g,AE:/[ÆǼǢ]/g,AO:/[Ꜵ]/g,AU:/[Ꜷ]/g,AV:/[ꜸꜺ]/g,AY:/[Ꜽ]/g,B:/[BⒷＢḂḄḆɃƂƁ]/g,C:/[CⒸＣĆĈĊČÇḈƇȻꜾ]/g,D:/[DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ]/g,DZ:/[ǱǄ]/g,Dz:/[ǲǅ]/g,E:/[EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ]/g,F:/[FⒻＦḞƑꝻ]/g,G:/[GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ]/g,H:/[HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ]/g,I:/[IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ]/g,J:/[JⒿＪĴɈ]/g,K:/[KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ]/g,L:/[LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ]/g,LJ:/[Ǉ]/g,Lj:/[ǈ]/g,M:/[MⓂＭḾṀṂⱮƜ]/g,N:/[NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ]/g,NJ:/[Ǌ]/g,Nj:/[ǋ]/g,O:/[OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ]/g,OI:/[Ƣ]/g,OO:/[Ꝏ]/g,OU:/[Ȣ]/g,P:/[PⓅＰṔṖƤⱣꝐꝒꝔ]/g,Q:/[QⓆＱꝖꝘɊ]/g,R:/[RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ]/g,S:/[SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ]/g,T:/[TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ]/g,TZ:/[Ꜩ]/g,U:/[UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ]/g,V:/[VⓋＶṼṾƲꝞɅ]/g,VY:/[Ꝡ]/g,W:/[WⓌＷẀẂŴẆẄẈⱲ]/g,X:/[XⓍＸẊẌ]/g,Y:/[YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ]/g,Z:/[ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ]/g,a:/[aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/g,aa:/[ꜳ]/g,ae:/[æǽǣ]/g,ao:/[ꜵ]/g,au:/[ꜷ]/g,av:/[ꜹꜻ]/g,ay:/[ꜽ]/g,b:/[bⓑｂḃḅḇƀƃɓ]/g,c:/[cⓒｃćĉċčçḉƈȼꜿↄ]/g,d:/[dⓓｄḋďḍḑḓḏđƌɖɗꝺ]/g,dz:/[ǳǆ]/g,e:/[eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/g,f:/[fⓕｆḟƒꝼ]/g,g:/[gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/g,h:/[hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/g,hv:/[ƕ]/g,i:/[iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı]/g,j:/[jⓙｊĵǰɉ]/g,k:/[kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/g,l:/[lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ]/g,lj:/[ǉ]/g,m:/[mⓜｍḿṁṃɱɯ]/g,n:/[nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/g,nj:/[ǌ]/g,o:/[oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ]/g,oi:/[ƣ]/g,ou:/[ȣ]/g,oo:/[ꝏ]/g,p:/[pⓟｐṕṗƥᵽꝑꝓꝕ]/g,q:/[qⓠｑɋꝗꝙ]/g,r:/[rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/g,s:/[sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ]/g,t:/[tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/g,tz:/[ꜩ]/g,u:/[uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/g,v:/[vⓥｖṽṿʋꝟʌ]/g,vy:/[ꝡ]/g,w:/[wⓦｗẁẃŵẇẅẘẉⱳ]/g,x:/[xⓧｘẋẍ]/g,y:/[yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/g,z:/[zⓩｚźẑżžẓẕƶȥɀⱬꝣ]/g},t=this;for(var i in e){var n=e[i];t=t.replace(n,i)}return t};var i=gridbuilder.options,n=gridbuilder.options.features,s=(gridbuilder.l10n,t.grid={});t.grid.model={},t.grid.view={ui:{},element:{}},t.grid.controller={},t.grid.templates={},t.grid.utils={sanitizeTitle:function(e){return e=e.removeAccents().toLowerCase(),e=e.replace(/[^a-z0-9]/g,"-"),e=e.replace(/-+/g,"-"),e=e.replace(/-+$/g,"")}},t.grid.controller.Grid=function(){this.$input=e('[name="_grid_data"]'),this.postID=e('[name="post_ID"]').val();var i=this,n=this.$input.attr("value");data=JSON.parse(n),types=["grid","container","row","cell","widget"],this.model=new s.model.GridObject(data),this.model.recurse(function(e){this.set("type",types[e])}),this.subviews=new Backbone.Collection([]),this.selected=!1,this.listenTo(this.model,"change",this.onChangeModel),this.view=new t.grid.view.ui.Editor({controller:this,model:this.model}),this.view.setActiveEditor(),this.view.$el.insertAfter("#wp-content-wrap"),this.view.render(),this.view.$el.focus(),e(document).on("click",'[type="submit"]',function(e){i.onChangeModel()})},_.extend(t.grid.controller.Grid.prototype,{whichView:function(){return this.view.whichView()},getSelected:function(e){return this.selected},setSelected:function(e){return this.selected=e,this},onChangeModel:function(){var e=JSON.stringify(this.model.toJSON());this.$input.val(e),n.autosave&&this.save(e)},save:function(t){e.ajax({method:"post",url:i.ajaxurl,complete:function(e,t){},success:function(e,t,i){e.success},data:{action:"gridbuilder-autosave",nonce:i.autosave_nonce,grid_data:t,post_id:this.postID}})}},Backbone.Events),_.extend(t.grid.controller.Grid,Backbone.Events)}(jQuery,window),function(e,t){var i,n,s=gridbuilder.options,o=(gridbuilder.l10n,0);i=t.model.GridObject=Backbone.Model.extend({parent:!1,locks:{},initialize:function(e){_.defaults(e,{items:[]});var t=this;this.items=new n([]),this.items.parent=this,this.parent=!1,this.id="obj"+o++,_.each(e.items,function(e,i){t.items.add(e)}),delete e.items,Backbone.Model.prototype.initialize.apply(this,arguments)},setItemParent:function(e){e.parent=this},toJSON:function(e){var t=Backbone.Model.prototype.toJSON.apply(this,arguments);return t.items=this.items.toJSON(e),t},recurse:function(){var e=arguments[0],t=arguments[1]||0;e.apply(this,[t]),this.items.each(function(i){i.recurse(e,t+1)})}}),n=t.model.GridCollection=Backbone.Collection.extend({model:i,comparator:function(e){return e.get("idx")},add:function(){var e=Backbone.Collection.prototype.add.apply(this,arguments),t=this;return modelsArr=e.constructor==Array?e:[e],_.each(modelsArr,function(e,i){e.parent=t.parent}),e}}),GridTemplate=t.model.GridTemplate=Backbone.Model.extend({save:function(){var t=this;e.ajax({method:"post",url:s.ajaxurl,complete:function(e,t){},success:function(e,i,n){_.each(e,function(e,i){t.set(i,e)}),t.trigger("sync")},data:{action:this.isNew()?"gridbuilder-create-template":"gridbuilder-update-template",nonce:this.isNew()?s.create_template_nonce:s.update_template_nonce,template:JSON.stringify(this.toJSON())}})},destroy:function(){var t=this;e.ajax({method:"post",url:s.ajaxurl,complete:function(e,t){},success:function(e,i,n){t.trigger("destroy",t,t.collection)},data:{action:"gridbuilder-delete-template",nonce:s.delete_template_nonce,template:JSON.stringify(this.toJSON())}})}}),_.extend(t.templates,{get:function(e,i){return e=e.toLowerCase(),t.templates[e]._byId[i]}}),_.each(s.templates,function(e,i){t.templates[i]=new Backbone.Collection,_.each(e,function(e,n){var s=new t.model.GridTemplate({name:e.name,slug:e.slug,data:e.data,type:i});s.set("id",e.slug),t.templates[i].add(s)})})}(jQuery,window.grid),function(e,t){var i,n=gridbuilder.l10n,s=gridbuilder.options,o=gridbuilder.options.features;t.view.ui.Prompt=wp.media.View.extend({tagName:"div",className:"grid-prompt",template:wp.template("grid-ui-prompt"),events:{"click .btn-confirm":"confirm","click .btn-cancel":"close"},initialize:function(t){return _.defaults(t,{defaultValue:"",title:"",message:"",parent:!1}),wp.media.View.prototype.initialize.apply(this,arguments),this.$parent=e(t.parent?t.parent:"body"),this.render()},render:function(){return wp.media.View.prototype.render.apply(this,arguments),this},open:function(){return this.$parent.append(this.$el),this.$('[type="text"]').focus().select(),this},close:function(){return this.$el.remove(),this},confirm:function(){this.trigger("confirm"),this.close()},getValue:function(){return this.$('[type="text"]').val()}}),i=t.view.ui.Modal=wp.media.view.Modal.extend({template:wp.template("grid-ui-modal"),events:{"click .grid-dialog-prev":"prev","click .grid-dialog-next":"next","click .media-modal-backdrop, .grid-dialog-close":"escapeHandler",keydown:"keydown"},initialize:function(){var e=wp.media.view.Modal.prototype.initialize.apply(this,arguments);return this.prevnext=!_.isUndefined(this.options.prev)&&!_.isUndefined(this.options.next),e},render:function(){var e=wp.media.view.Modal.prototype.render.apply(this,arguments);return this.prevnext?(this.$(".grid-dialog-prev").prop("disabled",!this.options.prev),this.$(".grid-dialog-next").prop("disabled",!this.options.next)):this.$(".grid-dialog-prev, .grid-dialog-next").remove(),e},open:function(){wp.media.view.Modal.prototype.open.apply(this,arguments),e("body").removeClass("modal-open").addClass("grid-modal-open")},close:function(t){wp.media.view.Modal.prototype.close.apply(this,arguments),e("body").removeClass("grid-modal-open")},next:function(){return this.trigger("next"),!1},prev:function(){return this.trigger("prev"),!1}}),t.view.ui.Dialog=wp.media.View.extend({initialize:function(e){return this.model=e.model,this.controller=e.controller,this.okayBtn=new wp.media.view.Button({text:n.Done,classes:["apply","button-primary"]}),this},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.$(".grid-dialog-title").text(this.options.title),this.okayBtn.render(),this.$(".grid-dialog-toolbar").append(this.okayBtn.$el)},dismiss:function(){this.$(".grid-dialog-content").html("")}}),t.view.ui.Toolbar=wp.media.View.extend({template:wp.template("grid-ui-toolbar"),className:"grid-toolbar",tagName:"div",events:{'click .viewswitcher [type="radio"]':"switchView",'click .set-visibility [type="radio"]':"setVisible","click button.add-item":"addItem","change select.add-item":"addTemplateItem","click .item-action.edit":"editItem","click .item-action.clone":"cloneItem","click .item-action.delete":"deleteItem","click .item-action.lock":"lockItem","click .create-template":"createTemplate","click .update-template":"updateTemplate","click .manage-templates":"manageTemplates"},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.delegateEvents(),this.setupSticky()},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.setupViewswitcher(),this.setupTemplateSelects(),this.updateWidth(),viewSize=window.getUserSetting("grid-view-size"),viewSize?this.$('.viewswitcher [value="'+viewSize+'"]').prop("checked",!0):this.$('.viewswitcher [type="radio"]:last').prop("checked",!0),this.switchView()},preventDefault:function(e){e.preventDefault()},addItem:function(t){this.trigger("add:"+e(t.target).data("add-item")),t.preventDefault()},addTemplateItem:function(t){this.trigger("add:"+e(t.target).data("add-item"),e(t.target).val()),e(t.target).val(""),t.preventDefault()},editItem:function(e){this.trigger("edit"),e.preventDefault()},cloneItem:function(e){this.trigger("clone"),e.preventDefault()},deleteItem:function(e){this.trigger("delete"),e.preventDefault()},lockItem:function(e){this.trigger("lock"),e.preventDefault()},setVisible:function(){this.trigger("visible",this.$('.set-visibility [type="radio"]:checked').val())},setupSticky:function(){var t=this;e(window).on("scroll",function(){var i="true"===t.$el.attr("data-sticky"),n=e(window).scrollTop()+33>=t.controller.$el.offset().top;i!=n&&t.$el.attr("data-sticky",n.toString())}),e(window).on("resize",function(){t.updateWidth()})},updateWidth:function(){this.$el.css("width",this.controller.$el.width().toString()+"px")},update:function(){var i=this.controller.getSelected(),n=(can_edit=can_clone=can_delete=can_lock=!1,can_create_template=can_update_template=!1),s=can_add_row=can_add_cell=can_add_widget=!1;if(i){var a=i.is(t.view.element.Grid),r=o.locks||!i.model.get("locked"),l=o.locks||!(i.parent()&&i.parent().model.get("locked")),d=i.closest(t.view.element.Grid),c=i.closest(t.view.element.Container),p=i.closest(t.view.element.Row),h=i.closest(t.view.element.Cell),u=i.model.get("visibility_"+this.whichView())||"";can_edit=!a&&r,can_clone=!a&&r&&l,can_delete=!a&&r&&l,can_lock=!0,n=!a,can_create_template=!a,can_update_template=!a&&!!i.model.get("template"),s=o.locks||!d.model.get("locked"),can_add_row=!!c&&(o.locks||!c.model.get("locked")),can_add_cell=!!p&&(o.locks||!p.model.get("locked")),can_add_widget=!!h&&(o.locks||!h.model.get("locked")),this.$(".item-action.lock").prop("checked",!!i.model.get("locked")),this.$('[name="set-visibility"]').each(function(t,i){var n=e(this);n.prop("checked",n.val()==u)})}this.$(".item-action.edit").prop("disabled",!can_edit),this.$(".item-action.clone").prop("disabled",!can_clone),this.$(".item-action.delete").prop("disabled",!can_delete),this.$(".item-action.lock").prop("disabled",!can_lock),this.$(".create-template").prop("disabled",!can_create_template),this.$(".update-template").prop("disabled",!can_update_template),this.$(".manage-templates").prop("disabled",!1),this.$(".add-container").prop("disabled",!s),this.$(".add-row").prop("disabled",!can_add_row),this.$(".add-cell").prop("disabled",!can_add_cell),this.$(".add-widget").prop("disabled",!can_add_widget),this.$('[name="set-visibility"]').prop("disabled",!n)},setupViewswitcher:function(){var e=this;_.each(s.screensizes.sizes,function(t,i){var n,s={size:i};_.extend(s,t),n=wp.template("viewsize-item")(s),e.$(".viewswitcher").append(n)})},setupTemplateSelects:function(){this.$("select.add-item[data-add-item]").each(function(){var i=e(this),n=i.attr("data-add-item");e(this).find('[value!=""]').remove(),t.templates[n].each(function(s,o){var a=t.templates[n].get(s.id).toJSON();e('<option value="'+a.id+'">'+a.name+"</option>").appendTo(i)})})},switchView:function(){var e=this.whichView();this.$el.attr("data-view-size");e&&(this.trigger("viewsize",this),window.setUserSetting("grid-view-size",e))},whichView:function(){return this.$(".viewswitcher :checked").val()},delegateEvents:function(){wp.media.View.prototype.delegateEvents.apply(this,arguments),this.on("viewsize",this.updateVisibilitySelect,this),this.on("select",this.updateVisibilitySelect,this),this.on("select",this.updateLockButton,this)},undelegateEvents:function(){wp.media.View.prototype.undelegateEvents.apply(this,arguments)},updateVisibilitySelect:function(){var e,i=this.controller.getSelected();i&&!i.is(t.view.element.Grid)&&(e=i.model.get("visibility_"+this.whichView())||"",this.$('[name="set-visibility"][value="'+e+'"]').prop("checked",!0))},updateLockButton:function(){var e=this.getSelected();e&&!e.is(t.view.element.Grid)&&this.$(".item-action.lock").prop("checked",!!e.model.get("locked"))},createTemplate:function(e){this.trigger("create:template"),e.preventDefault()},updateTemplate:function(e){this.trigger("update:template"),e.preventDefault()},manageTemplates:function(e){this.trigger("manage:templates"),e.preventDefault()}}),Editor=t.view.ui.Editor=wp.media.View.extend({className:"grid-editor",tagName:"div",selectWidgetModal:null,events:{"focusout *":function(e){},"focusin *":function(t){var i=e(t.target).data("view");if(e(t.target).is(".locked"))return e(t.target).blur(),void t.preventDefault();i&&this.setSelected(i)},"keyup *":function(e){var i,n,s=this.toolbar.whichView(),a=this.getSelected();if(a)switch(e.keyCode){case 13:i=o.locks||!a.model.get("locked"),i&&this.editItem();break;case 32:break;case 46:case 8:i=o.locks||!a.model.get("locked"),i&&this.deleteItem(),e.preventDefault(),e.stopPropagation();break;case 37:case 39:case 38:case 40:n=e.shiftKey?"size":"offset",i=o.locks||!a.model.get("locked")&&!a.model.get(n+"_"+s+":locked"),i&&a.is(t.view.element.Cell)&&(37==e.keyCode?e.shiftKey?a.decrementSize():a.decrementOffset():39==e.keyCode&&(e.shiftKey?a.incrementSize():a.incrementOffset())),e.stopPropagation()}}},initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.toolbar=new t.view.ui.Toolbar({controller:this}),this.grid=new t.view.element.Grid({controller:this,model:this.model}),this.bindEvents()},bindEvents:function(){var t=this;e(document).on("click",function(){t.checkSelected.apply(t,arguments)}),e(document).on("keydown",this.preventBackspaceNav),this.toolbar.on("edit",this.editItem,this),this.toolbar.on("clone",this.cloneItem,this),this.toolbar.on("delete",this.deleteItem,this),this.toolbar.on("lock",this.toggleLockState,this),this.toolbar.on("visible",this.setVisible,this),this.toolbar.on("visible",this.reFocus,this),this.toolbar.on("viewsize",this.onChangeViewsize,this),this.toolbar.on("viewsize",this.reFocus,this),this.toolbar.on("create:template",this.createTemplate,this),this.toolbar.on("update:template",this.updateTemplate,this),this.toolbar.on("manage:templates",this.openTemplateManager,this),this.toolbar.on("add:container",this.addContainer,this),this.toolbar.on("add:row",this.addRow,this),this.toolbar.on("add:cell",this.addCell,this),this.toolbar.on("add:widget",this.addWidget,this)},preventBackspaceNav:function(t){var i=event.srcElement||event.target;e(i).is(":input")||e(i).is("[contenteditable]")||8===t.keyCode&&t.preventDefault()},render:function(){wp.media.View.prototype.render.apply(this,arguments),this.toolbar.render();var t=e('<div class="grid-toolbar-wrap"></div>');this.$el.append(t),t.append(this.toolbar.$el),t.height(t.height()),this.$el.append(this.grid.$el),this.grid.render()},setActiveEditor:function(){t.setActiveEditor(this)},onChangeViewsize:function(){this.$el.attr("data-view-size",this.toolbar.whichView())},getSelected:function(){return this.controller.getSelected(this)},checkSelected:function(t){this.$el.has(t.target).length||e(t.target).closest(".grid-ui-modal")||this.setSelected(null)},setSelected:function(e){return this.controller.setSelected(e),this.toolbar.update(),e&&!e.$el.is(":focus")&&e.$el.focus(),this},addContainer:function(){var e=!!arguments.length&&t.templates.get("container",arguments[0]),i=e?e.get("data"):{type:"container"};return this._addItem(t.view.element.Container,this.grid,i),!1},addRow:function(e){var i=this.getSelected(),n=i.closest(t.view.element.Container),s=!!arguments.length&&t.templates.get("row",arguments[0]),o=s?s.get("data"):{type:"row"};return this._addItem(t.view.element.Row,n,o),!1},addCell:function(e){var i=this.getSelected(),n=i.closest(t.view.element.Row),o=!!arguments.length&&t.templates.get("cell",arguments[0]),a=o?o.get("data"):{size_xs:s.screensizes.columns,type:"cell"};return this._addItem(t.view.element.Cell,n,a),!1},addWidget:function(e){var i,s=this,o=this.getSelected(),a=o.closest(t.view.element.Cell),r=!!arguments.length&&t.templates.get("widget",arguments[0]),l=r?r.get("data"):{instance:{},type:"widget"},d=new Backbone.Model;return r?this._addItem(t.view.element.Widget,a,l):(null===this.selectWidgetModal&&(this.selectWidgetModal=new wp.media.view.Modal({controller:this}),i=new t.view.SelectWidgetDialog({controller:this,model:d,title:n.SelectWidget}),i.on("done",function(){l.widget_class=d.get("widget_class"),s._addItem(t.view.element.Widget,a,l).editItem(),s.selectWidgetModal.close()},this.selectWidgetModal),this.selectWidgetModal.content(i)),this.selectWidgetModal.open()),!1},cloneItem:function(){var e=this.getSelected(),t=e.getClass(),i=e.parent(),n=e.model.toJSON();return n.idx++,this._addItem(t,i,n),!1},_addItem:function(e,i,n,s){var o,s,a=this.getSelected()||this,n=n||{},r=new t.model.GridObject(n),l=new e({controller:this,model:r,parent:i});return s=s||a.closest(e),o=i.$(">.collection"),s?(l.render().$el.insertAfter(s.$el),o.trigger("sort")):o.append(l.render().$el),i.model.items.add(r),this.grid.initSortables(),this.grid.hasChanged(),this.setSelected(l),this.trigger("added:"+r.get("type"),l),this},getPrevItem:function(e){var i,e=e||this.getSelected(),i=e.$el.prev().data("view");return _.isUndefined(i)&&!e.parent().is(t.view.element.Grid)?i=e.parent():_.isUndefined(i)||i.is(t.view.element.Widget)||(i=i.$(".widget").last().data("view")),!o.locks&&i&&i.model.get("locked")?this.getPrevItem(i):i},getNextItem:function(e){var i,e=e||this.getSelected();if(i=e.$(">.collection").children().length?e.$(">.collection>*").first().data("view"):e.$el.next().data("view"),_.isUndefined(i))for(;_.isUndefined(i)&&!e.is(t.view.element.Grid);)e=e.parent(),i=e.$el.next().data("view");return!o.locks&&i&&i.model.get("locked")?this.getNextItem(i):i},toggleLockState:function(){var e,t=this.getSelected();t&&(e=!!t.model.get("locked"),t.model.set("locked",!e),this.reFocus()),this.toolbar.update()},editItem:function(n){
if(n&&n.preventDefault(),e("body").hasClass("grid-modal-open"))return!1;for(var o,a,r=this,l=this.getSelected(),d=this.getNextItem(l),c=this.getPrevItem(l),p=new i({controller:this,next:!!d,prev:!!c}),h=s.editors[l.getClassName().toLowerCase()],u=[],g=l;g&&!g.is(t.view.element.Grid);)a=g.getTitle(),u.unshift(a),g=g.parent();return o=new t.view.EditDialog({title:u.join(" › "),controller:this,model:l.model,item:l,editor:h}),o.on("done",function(){r.grid.hasChanged(),p.close()},p),p.on("close",function(e){o.dismiss(),r.getSelected().$el.focus()}).on("next",function(e){o.applyChanges(),r.grid.hasChanged(),p.close(),r.setSelected(d),r.editItem(e)}).on("prev",function(e){o.applyChanges(),r.grid.hasChanged(),p.close(),r.setSelected(c),r.editItem(e)}),p.content(o).open(),p.$el.focus(),!1},deleteItem:function(e){e&&e.preventDefault();var t=this.getSelected(),i=t.parent();this._deleteItem(this.getSelected()),this.setSelected(i)},_deleteItem:function(e){var t=e.parent();return e.remove(),t.model.items.remove(e.model),this.grid.hasChanged(),!1},reFocus:function(){var e=this.getSelected();!!e&&e.reFocus()},setVisible:function(e){var t=this.getSelected(),i="visibility_"+this.toolbar.whichView();t&&(t.model.set(i,e),t.reFocus())},createTemplate:function(){var e=this,i=this.getSelected(),s=new t.model.GridTemplate,o=new t.view.ui.Prompt({title:n.TemplateName,description:n.CreateTemplateDescription,defaultValue:n[i.getClassName()]+" "+n.Template});return o.on("confirm",function(n){var a=o.getValue(),r=t.utils.sanitizeTitle(a),l=i.getClassName().toLowerCase();s.set("name",a),s.set("slug",r),s.set("type",l),s.set("data",i.model.toJSON()),s.once("sync",function(){var n=s.get("slug");s.set("id",n),i.model.set("template",n),t.templates[l].add(s),e.toolbar.update(),e.toolbar.setupTemplateSelects(),e.grid.hasChanged()}),s.save(),i.reFocus()},this).open(),!1},updateTemplate:function(){var e=this.getSelected(),i=e.getClassName().toLowerCase(),n=e.model.get("template");return template=t.templates.get(i,n),template.set("data",e.model.toJSON()),template.save(),e.reFocus(),!1},openTemplateManager:function(){var e=this,i=new wp.media.view.Modal({controller:this}),s=this.getSelected(),o=new t.view.ManageTemplatesDialog({controller:this,title:n.ManageTemplates});return o.on("done",function(){i.close()},i),i.content(o).on("close",function(t){e.toolbar.setupTemplateSelects(),!!s&&s.$el.focus()}).open(),!1}}),_.extend(t,{getActiveEditor:function(){return active_editor},setActiveEditor:function(e){active_editor=e}})}(jQuery,window.grid),function(e,t){function i(){return g.inited||(_.each(u,function(e){g[e]=wp.media.View.extend(_.extend({template:wp.template("grid-ui-input-"+e)},m))}),g.inited=!0),g}var n,s,o,a,r,l,d,c=(t.view.Grid,t.view.Container,t.view.Row,t.view.Cell,t.view.Widget,gridbuilder.options),p=gridbuilder.options.features,h=gridbuilder.l10n,u=["text","textarea","color","number","media","select","checkbox","radio","range","label"],g={inited:!1},m={render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this,t=void 0!==this.options.value&&null!==this.options.value?this.options.value:this.options.settings.default;switch(this.$el.addClass("input-"+this.options.settings.name),this.setValue(t),this.options.settings.type){case"number":_.each(["min","max","step"],function(t){void 0!==e.options.settings[t]&&e.$('[type="number"]').attr(t,e.options.settings[t])});break;case"color":this.$("input.color-picker").wpColorPicker({hide:!0,palettes:e.options.settings.palettes});break;case"media":var i=null;this.$(".select-media").on("click",function(){null===i&&(i=wp.media({title:e.options.settings.title,library:{type:e.options.settings.mimetype},button:{text:h.Done,close:!0}}),i.on("select",function(){var t=i.state().get("selection").first().attributes;e.setValue(t.id)})),i.open()});break;case"range":this.$("input").on("change",function(){e.updateValue()})}return this.updateValue(),this},updateValue:function(){this.$(".display-value").text(this.getValue())},setValue:function(t){switch(this.options.settings.type){case"select":this.$("select").val(t);break;case"radio":null===t?this.$('[type="radio"]:checked').prop("checked",!1):this.$('[type="radio"][value="'+t+'"]').prop("checked",!0);break;case"checkbox":this.$('[type="checkbox"]').prop("checked",!!t);break;case"color":this.$("input.color-picker").val(t);break;case"media":if(this.$(".thumbnail").html(""),t){this.$('[name="media_id"]').val(t);var i=new wp.media.model.Attachment({id:t}),n=this;i.once("change",function(){var t,s;if(i.get("sizes"))try{s=i.get("sizes").thumbnail.url}catch(e){s=i.get("sizes").full.url}else s=i.get("icon");t=new wp.media.View({tagName:"span",className:"filename"}),t.$el.text(i.get("title")),n.$(".thumbnail").append(e("<img />").attr("src",s),new wp.media.view.Button({text:h.RemoveMedia,click:function(){n.setValue(null)}}).$el.addClass("dashicons dashicons-dismiss"),t.$el),delete i}),i.fetch()}else this.$('[name="media_id"]').removeAttr("value");break;case"textarea":this.$("textarea").val(t);break;default:this.$("input").val(t)}},getValue:function(){switch(this.options.settings.type){case"select":return this.$("select").val();case"radio":return this.$('[type="radio"]:checked').val();case"checkbox":return this.$('[type="checkbox"]').prop("checked");case"color":return this.$("input.color-picker").val();case"textarea":return this.$("textarea").val();default:return this.$("input").val()}},dismiss:function(){}};r=wp.media.View.extend({initialize:function(e){wp.media.View.prototype.initialize.apply(this,arguments),this.children=[]},render:function(){var e=this;wp.media.View.prototype.render.apply(this,arguments),_.each(this.children,function(t,i){t.render(),e.$el.append(t.$el)})}}),l=r.extend({initialize:function(e){r.prototype.initialize.apply(this,arguments),!!e.parent&&e.parent.children.push(this)}}),g.widget_instance=wp.media.View.extend({tagName:"div",className:"widget-instance widget-inside",initialize:function(){wp.media.View.prototype.initialize.apply(this,arguments),this.$form=e("<form />"),this.$spinner=e('<span class="spinner" style="visibility:visible;float:none"></span>'),this.$el.append(this.$spinner),this.$el.append(this.$form),this.$widget=null;var t=this;return e.ajax({method:"post",url:c.ajaxurl,complete:function(e,t){},success:function(i,n,s){t.$spinner.remove(),t.$widget=e(i),t.$form.html("").append(t.$widget),t.prepareMCE(),wp.mediaWidgets.handleWidgetAdded({},t.$el.parent()),wp.textWidgets.handleWidgetAdded({},t.$el.parent())},data:{action:"gridbuilder-get-widget",nonce:c.get_widget_nonce,widget_class:this.options.model.get("widget_class"),instance:JSON.stringify(this.options.model.get("instance"))}}),this},hasMCE:function(){return this.getMCE().length>0},getMCE:function(e){var t=this.$(".mce-tinymce + textarea, .quicktags-toolbar + textarea"),i=[];return _.each(tinyMCE.editors,function(e,n){t.each(function(t,n){n===e.targetElm&&i.push(e)})}),i},getValue:function(){var e={};return _.each(this.getMCE(),function(e){e.save()}),_.each(this.$form.serializeArray(),function(t){var i,n=t.name.match(/\[([a-z0-9-_]+)\]$/g);n&&(i=n.length?n[0].replace(/[\[\]]+/g,""):t.name,e[i]=t.value)}),e},setValue:function(e){return this},dismiss:function(){var t=this.$el.parent().find(".widget-inside > form, .widget-inside > .form").find(" > .widget-id").val();return wp.mediaWidgets.widgetControls[t]&&delete wp.mediaWidgets.widgetControls[t],wp.textWidgets.widgetControls[t]&&delete wp.textWidgets.widgetControls[t],e(document).trigger({type:"widget-removed",target:this.$widget}),_.each(this.getMCE(),function(e){tinymce.remove(e)}),this.resetMCE(),this},prepareMCE:function(){var e=this,t=this.$el.closest(".grid-ui-modal").get(0);this._prevMCE={},t&&(d=1e3+parseInt(window.getComputedStyle(t).getPropertyValue("z-index")),this._prevMCE.FloatPanelZindex=tinyMCE.ui.FloatPanel.zIndex,tinyMCE.ui.FloatPanel.zIndex+=d,this._prevMCE.TooltipRepaint=tinyMCE.ui.Tooltip.prototype.repaint,tinyMCE.ui.Tooltip.prototype.repaint=function(){e._prevMCE.TooltipRepaint.apply(this,arguments),this.getEl().style.zIndex=d+65535+65535},this._prevMCE.NotificationpRepaint=tinyMCE.ui.Notification.prototype.repaint,tinyMCE.ui.Notification.prototype.repaint=function(){e._prevMCE.NotificationpRepaint.apply(this,arguments),this.getEl().style.zIndex=d+65535+65535},tinymce.ui.WPLinkPreview&&(this._prevMCE.wpLinkRenderHtml=tinymce.ui.WPLinkPreview.prototype.renderHtml,tinymce.ui.WPLinkPreview.prototype.renderHtml=function(){return e._prevMCE.wpLinkRenderHtml.apply(this,arguments).replace('class="wp-link-preview"','class="wp-link-preview in-grid-modal"')}))},resetMCE:function(){this._prevMCE&&(!!this._prevMCE.FloatPanelZindex&&(tinyMCE.ui.FloatPanel.zIndex=this._prevMCE.FloatPanelZindex),!!this._prevMCE.TooltipRepaint&&(tinyMCE.ui.Tooltip.prototype.repaint=this._prevMCE.TooltipRepaint),!!this._prevMCE.NotificationpRepaint&&(tinyMCE.ui.Notification.prototype.repaint=this._prevMCE.NotificationpRepaint),!!this._prevMCE.wpLinkRenderHtml&&(tinymce.ui.WPLinkPreview.prototype.renderHtml=this._prevMCE.wpLinkRenderHtml))}}),a=Backbone.View.extend({tagName:"input",attributes:{type:"text"},events:{'blur [type="text"]':"update"},initialize:function(e){return this.property=e.property,this.model=e.model,this},render:function(){var e=this;return Backbone.View.prototype.render.apply(this,arguments),this.$el.on("change",function(){e.update()}),this},update:function(){this.model.set(this.property,this.$el.val()),this.model.save()}}),o=wp.media.View.extend({template:wp.template("grid-ui-templates-list"),className:"templates-list",render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return this.options.templates.each(function(t,i){var n=new Backbone.View({tagName:"li"}),s=new wp.media.view.Button({model:t,text:"",classes:["delete","dashicons","dashicons-dismiss"],click:function(){return this.options.model.destroy(),!1}}),o=new a({tagName:"input",property:"name",model:t,attributes:{value:t.get("name"),type:"text"}});n.render().$el.append(o.render().$el,s.render().$el),e.$(".templates").append(n.$el),n.listenTo(t,"destroy",function(){this.$el.remove()}),o.listenTo(o,"keyup",function(){})}),this}}),n=wp.media.View.extend({template:wp.template("grid-ui-input-wrap"),className:"input-wrap",initialize:function(t){var n=i();_.extend(t,{lock:p.locks}),wp.media.View.prototype.initialize.apply(this,arguments),"html"==t.settings.type?(this.$el=e(t.settings.html),this.input={getValue:function(){},setValue:function(){},render:function(){},dismiss:function(){}}):n[t.settings.type]?this.input=new n[t.settings.type](t):(this.input=!1,console.trace("no such input type",t.settings.type))},render:function(){var e=this;return wp.media.View.prototype.render.apply(this,arguments),this.input?(this.input.render(),this.$(".input").append(this.input.$el),this.$el.addClass("input-type-"+this.options.settings.type),this.setLock(this.options.locked),this.options.settings.attr&&_.each(this.options.settings.attr,function(t,i){var n=e.$el.attr(i),s=" ";"style"==i&&(s=";"),e.$el.attr(i,n+s+t)}),this):this},getLock:function(){return this.$('.lock [type="checkbox"]').prop("checked")},setLock:function(e){this.$('.lock [type="checkbox"]').prop("checked",e)},getValue:function(){return this.input.getValue()},setValue:function(e){return this.input.setValue(e),this},dismiss:function(){return this.input.dismiss(),this}}),s=wp.media.View.extend({template:wp.template("grid-ui-input-group"),className:"input-group",initialize:function(e){wp.media.View.prototype.initialize.apply(this,arguments);var t=this;this.model=e.model,this.inputs=[],_.each(e.settings.items,function(e,i){"matrix"==e.type?t.initializeInputMatrix(e,i):t.initializeInputWrap(e,i)})},initializeInputWrap:function(e,t){var i,s=!1,o=this;return _.extend(e,{name:t,lock:p.locks&&"label"!=e.type}),!p.locks&&o.model.get(t+":locked")||(i=o.model.get(t),s=new n({controller:o.controller,settings:e,value:void 0!==i?i:null,locked:!!o.model.get(t+":locked"),model:o.model}),o.inputs.push(s)),s},initializeInputMatrix:function(e,t){var i=this,n=new r({tagName:"table",className:"input-matrix form-table",template:wp.template("grid-ui-input-matrix")});_.each(e.rows,function(e,t){var s=new l({tagName:"tr",parent:n});_.each(e,function(e,t){var n,o=new l({tagName:"td",parent:s});n=i.initializeInputWrap(e,t),n.$parent=o.$el})}),i.inputs.push(n)},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return _.each(this.inputs,function(t){t.render(),t.$parent?t.$parent.append(t.$el):e.$(".inputs").append(t.$el)}),this},dismiss:function(){return _.each(this.inputs,function(e){!!e.dismiss&&e.dismiss()}),this}}),EditDialog=t.view.EditDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-edit-dialog"),className:"edit-dialog sidebar",events:{"click .apply":"done"},initialize:function(e){var i=this;return t.view.ui.Dialog.prototype.initialize.apply(this,arguments),this.inputgroups=[],this.editor=new s({controller:this,model:this.model,settings:{title:"",items:e.editor.main}}),_.each(e.editor.sidebar,function(e,t){_.extend(e,{name:t});var n=new s({controller:i,model:i.model,settings:e});i.inputgroups.push(n)}),this},render:function(){t.view.ui.Dialog.prototype.render.apply(this,arguments);var e=this;return _.each(this.inputgroups,function(t){t.render(),e.$(".grid-dialog-sidebar").append(t.$el)}),this.$(".grid-dialog-content").append(this.editor.render().$el),this},applyChanges:function(){function e(e){if(e.options.settings&&e.options.settings.name){var i=e.options.settings.name;isNaN(parseInt(i))&&(t[i]=e.getValue(),p.locks&&(t[i+":locked"]=e.getLock()))}}var t={};return _.each(this.editor.inputs,e),_.each(this.inputgroups,function(t){_.each(t.inputs,e)}),this.model.set(t),this},done:function(){return this.applyChanges(),this.trigger("done"),!1},dismiss:function(){return this.editor.dismiss(),_.each(this.inputgroups,function(e){e.dismiss()}),t.view.ui.Dialog.prototype.dismiss.apply(this,arguments),this}}),ManageTemplatesDialog=t.view.ManageTemplatesDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-dialog"),className:"manage-templates-dialog",events:{"click .apply":"done"},initialize:function(){t.view.ui.Dialog.prototype.initialize.apply(this,arguments);var e=this;this.templateLists={},_.each(["Container","Row","Cell","Widget"],function(i){e.templateLists[i.toLowerCase()]=new o({title:h[i]+" "+h.Templates,templates:t.templates[i.toLowerCase()]})})},render:function(){t.view.ui.Dialog.prototype.render.apply(this,arguments);var e=this;return _.each(this.templateLists,function(t){e.$(".grid-dialog-content").append(t.render().$el)}),this},done:function(e){return this.trigger("done"),!1}}),SelectWidgetDialog=t.view.SelectWidgetDialog=t.view.ui.Dialog.extend({template:wp.template("grid-ui-dialog"),className:"select-widget-dialog",events:{'change [name="widget_class"]':"done"},initialize:function(){t.view.ui.Dialog.prototype.initialize.apply(this,arguments),this.selectWidget=new n({model:this.model,settings:{type:"radio",name:"widget_class",title:h.WidgetTypes,options:c.widgets}}),this.okayBtn.$el.hide()},render:function(){return t.view.ui.Dialog.prototype.render.apply(this,arguments),this.$(".grid-dialog-content").append(this.selectWidget.render().$el),this},done:function(){var e=this.selectWidget.getValue();return this.model.set("widget_class",escape(e)),this.selectWidget.setValue(null),this.trigger("done"),!1}})}(jQuery,window.grid),function(e,t){document.caretPositionFromPoint&&!document.caretRangeFromPoint&&(document.caretRangeFromPoint=document.caretPositionFromPoint);var i,n,s,o,a,r,l,d,c,p,h=gridbuilder.l10n,u=gridbuilder.options,g=gridbuilder.options.features,m={},f={},v=[];_.each(u.screensizes.sizes,function(e,t){m[t]="size_"+t,f[t]="offset_"+t}),_.templateSettings={interpolate:/\{\{(.+?)\}\}/g},u.screensizes.size_lock_template=_.template("col-{{screensize}}-lock"),u.screensizes.offset_lock_template=_.template("col-{{screensize}}-offset-lock"),u.screensizes.size_class_template=_.template("col-{{screensize}}-{{size}}"),u.screensizes.offset_class_template=_.template("col-{{screensize}}-offset-{{size}}"),d=wp.media.View.extend({tagName:"div",className:"display-selector",initialize:function(e){this.model=e.model,this.listenTo(this.model,"change",this.render)},render:function(){var e=this.model.get("attr_id"),t=this.model.get("attr_class"),i=this.model.get("locked"),n="";return e&&(n+='<span class="display-id">#'+e+"</span>"),t&&(n+='<span class="display-class">.'+t.split(" ").join(".")+"</span>"),i&&(n+='<span class="dashicons dashicons-lock"></span>'),this.$el.html(n),this}}),c=wp.media.View.extend({tagName:"div",className:"display-template",initialize:function(e){this.model=e.model,this.listenTo(this.model,"change",this.render)},render:function(){var e=this.model.get("template"),t="";return e&&(t+=h.Template+": "+e),this.$el.text(t),this}}),r=wp.media.View.extend({events:{dblclick:"edit"},initialize:function(e){var i;return this.Subviews=wp.Backbone.Subviews,this.options=e,this.controller=e.controller,this.model=e.model,this.templateDisplay=new c({model:this.model}),this.selectorDisplay=new d({model:this.model}),this.listenTo(this.model,"change",this.updateDisplay),i=this.model.get("template"),i&&!t.templates.get(this.getClassName(),i)&&this.model.unset("template"),v.push(this),this.$el.data("view",this),this},edit:function(e){!g.locks&&this.model.get("locked")||(this.controller.setSelected(this).editItem(),e.stopPropagation())},remove:function(){var e=v.indexOf(this);v.splice(e,1),this.$el.remove()},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this,t=this.collectionView(),i=this.$(">.collection,>*>.collection").first();return!g.locks&&this.model.get("locked")?this.$el.addClass("locked"):this.$el.addClass("unlocked"),i.html(""),this.$el.data("model",this.model),i.data("view",this).data("model",this.model.items),t&&this.model.items.each(function(n,s){var o=new t({controller:e.options.controller,model:n,parent:e});i.append(o.$el),o.render()}),this.$el.prepend(this.selectorDisplay.render().$el),this.$el.prepend(this.templateDisplay.render().$el),this.updateDisplay(),this},reFocus:function(){this.$el.focus()},updateDisplay:function(){this.updateVisibilityClasses()},setVisibility:function(e){var t=this.controller.view,i=this.controller.toolbar.whichView(),n="visibility_"+i;this.model.set(n,e),t.hasChanged()},updateVisibilityClasses:function(){var e=this,t=[],i=[];return _.each(u.screensizes.sizes,function(n,s){var o=e.model.get("visibility_"+s),a="visible-"+s,r="hidden-"+s;"visible"===o?(t.push(a),i.push(r)):"hidden"===o?(t.push(r),i.push(a)):(i.push(a),i.push(r))}),this.$el.removeClass(i.join(" ")).addClass(t.join(" ")),this},detach:function(){},is:function(e){return this.constructor===e},closest:function(e){for(var t=this;t&&!t.is(e);)t=t.parent();return t},parent:function(){return this.options.parent},getClass:function(){return this.constructor},getClassName:function(){var e=this,t=_.filter(["Grid","Container","Row","Cell","Widget"],function(t){return e.is(p[t])});return!!t.length&&t[0]},hasChanged:function(){this.closest(i).hasChanged()},getTitle:function(){return h[this.getClassName()]}}),l=r.extend({initialize:function(){return r.prototype.initialize.apply(this,arguments)},updateDisplay:function(){r.prototype.updateDisplay.apply(this,arguments),this.updateColLockClasses(),this.updateSizeClasses(),this.updateOffsetClasses()},render:function(){var e=this;return r.prototype.render.apply(this,arguments),_.each(m,function(t,i){var n=e.model.get(t);n&&e.setColClass(n,i)}),_.each(f,function(t,i){var n=e.model.get(t);isNaN(parseInt(n))||e.setOffsetClass(n,i)}),this},getCurrentSize:function(){var t=this.controller.toolbar.whichView(),i=this,n=!1,s=!1;return e.each(m,function(e,o){var a=i.model.get(o);!n&&a&&(s=parseInt(a)),e==t&&(n=!0)}),s||u.screensizes.columns},hasColClass:function(){var e,t="(\\w+)",i="(\\d+)";return arguments[0]&&(t=arguments[0],arguments[1]&&(i=arguments[1])),e=u.screensizes.size_class_template({screensize:t,size:i}),!!this.$el.attr("class").match(new RegExp(e,"g"))},setColClass:function(e,t){var i;return this.$el.removeClass(this.getColClassnames(t).join(" ")),isNaN(parseInt(e))||(i=u.screensizes.size_class_template({screensize:t,size:e}),this.$el.addClass(i)),this},getCurrentOffset:function(){var e=this.controller.toolbar.whichView(),t=this,i=!1,n=!1;return offset_key=_.find(f,function(s,o){var a=t.model.get(s);!i&&a&&(n=parseInt(a)),o==e&&(i=!0)}),n||0},setOffsetClass:function(e,t){var i;return this.$el.removeClass(this.getColClassnames(t,u.screensizes.offset_class_template).join(" ")),isNaN(parseInt(e))||(i=u.screensizes.offset_class_template({screensize:t,size:e}),this.$el.addClass(i)),this},getColClassnames:function(e,t){void 0===t&&(t=u.screensizes.size_class_template);for(var i=[],n=0;n<13;n++)i.push(t({screensize:e,size:n}));return i},getLockClassnames:function(e,t){return""},incrementOffset:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentOffset();t<u.screensizes.columns-1&&this.setOffset(t+1,e)},decrementOffset:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentOffset();t>0&&this.setOffset(t-1,e)},incrementSize:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentSize();t<u.screensizes.columns&&this.setSize(t+1,e)},decrementSize:function(){var e=this.controller.toolbar.whichView(),t=this.getCurrentSize();t>1&&this.setSize(t-1,e)},setSize:function(e,t){this.model.set("size_"+t,e),this.setColClass(e,t),this.hasChanged()},setOffset:function(e,t){this.setOffsetClass(e,t),this.model.set("offset_"+t,e),this.hasChanged()},updateSizeClasses:function(){var e=this;_.each(u.screensizes.sizes,function(t,i){var n=e.model.get("size_"+i);e.setColClass(n,i)})},updateOffsetClasses:function(){var e=this;_.each(u.screensizes.sizes,function(t,i){var n=e.model.get("offset_"+i);e.setOffsetClass(n,i)})},updateColLockClasses:function(){var e=this,t=[],i=[];_.each(u.screensizes.sizes,function(n,s){_.each({size:u.screensizes.size_lock_template,offset:u.screensizes.offset_lock_template},function(n,o){var a=n({screensize:s});e.model.get(o+"_"+s+":locked")?t.push(a):i.push(a)})}),this.$el.removeClass(i.join(" ")).addClass(t.join(" "))}}),a=t.view.element.Widget=l.extend({template:wp.template("grid-element-widget"),className:"widget grid-item",tagName:"li",attributes:{tabindex:0},updateDisplay:function(){return this.hasColClass()||this.setColClass(u.screensizes.columns,_.keys(u.screensizes.sizes)[0]),l.prototype.updateDisplay.apply(this,arguments),wp.media.View.prototype.render.apply(this,arguments),this},collectionView:function(){return!1},getTitle:function(){var e=this.model.get("widget_class");try{return u.widgets[unescape(e)].name}catch(t){return h.unkonwnWidget+" "+e}}}),o=t.view.element.Cell=l.extend({template:wp.template("grid-element-cell"),className:"cell grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){var e=l.prototype.initialize.apply(this,arguments);return this.listenTo(this.model.items,"update",this.itemsChanged),e},itemsChanged:function(){this.parent().adjustCellSize()},render:function(){function t(t){var i=e.Event("drag",{pageX:t.pageX,pageY:t.pagey,screenX:t.screenX,screenY:t.screeny,clientX:t.clientX,clienty:t.clienty});n.trigger(i)}function i(n){e(document).off("mousemove",t),e(document).off("mouseup",i)}l.prototype.render.apply(this,arguments);var n,s,o,a=this;return!g.locks&&this.model.get("locked")||(this.$(".resize-handle, .offset-handle").on("mousedown",function(r){var l=a.controller.toolbar.whichView(),d=(e(this).is(".offset-handle")?"offset_":"size_")+l;!g.lock&&a.model.get(d+":locked")||(s=r.screenX,o=a.getCurrentOffset(),n=e(this),e(document).on("mousemove",t),e(document).on("mouseup",i)),r.preventDefault()}),this.$(".resize-handle").on("drag",function(t){var i=e(this).closest(".row").width()/u.screensizes.columns,n=a.controller.toolbar.whichView(),s=Math.max(1,Math.min(u.screensizes.columns,Math.round((t.pageX-a.$el.offset().left)/i)));a.model.get("size_"+n)!=s&&a.setSize(s,n),t.stopPropagation()}),this.$(".offset-handle").on("drag",function(t){var i=e(this).closest(".row").width()/u.screensizes.columns;viewSize=a.controller.toolbar.whichView(),diff=s-t.screenX,offsetDiff=Math.round(diff/i),offset=Math.min(11,Math.max(0,o-offsetDiff)),prevOffset=a.model.get("offset_"+viewSize),prevOffset!=offset&&a.setOffset(offset,viewSize),t.stopPropagation(),t.stopImmediatePropagation()})),this},collectionView:function(){return a}}),s=t.view.element.Row=r.extend({template:wp.template("grid-element-row"),className:"row grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){r.prototype.initialize.apply(this,arguments);return this},render:function(){r.prototype.render.apply(this,arguments);var e=this;return setTimeout(function(){e.adjustCellSize()},1),this},adjustCellSize:function(){var t=this.$(".cell"),i=0;return t.each(function(t,n){e(this).removeAttr("style"),i=Math.max(i,e(this).height())}),t.each(function(){e(this).css({height:i+"px"})}),this},collectionView:function(){return o}}),n=t.view.element.Container=r.extend({template:wp.template("grid-element-container"),className:"container grid-item",tagName:"li",attributes:{tabindex:0},initialize:function(){return r.prototype.initialize.apply(this,arguments),this},render:function(){return r.prototype.render.apply(this,arguments),this.setCollapsed(this.model.get("collapsed")),this},collectionView:function(){return s},toggleCollapsed:function(e){var t=!this.model.get("collapsed");this.setCollapsed(t),e.preventDefault()},setCollapsed:function(t){this.$el.toggleClass("collapsed",!!t),this.model.set("collapsed",!!t),this.$(">.collection .row").each(function(){e(this).data("view").adjustCellSize()})}}),n.prototype.events["click .toggle-collapse"]="toggleCollapsed",i=t.view.element.Grid=r.extend({template:wp.template("grid-element-grid"),className:"grid-view grid-item",tagName:"div",attributes:{"data-grid-columns":u.screensizes.columns},events:{},initialize:function(){r.prototype.initialize.apply(this,arguments),this.selectWidgetModal=null,this.templateSelectOptions=[]},render:function(){return r.prototype.render.apply(this,arguments),this.$el.removeAttr("tabindex"),this.initSortables(),this.controller.setSelected(this),this},renderTemplateSelects:function(){var e=this;_.each(this.templateSelectOptions,function(t){t.stopListening(),t.remove(),e.stopListening(t.model)}),_.each(["container","row","cell","widget"],function(i){var n=e.$("select.add-"+i);t.templates[i].each(function(t){var i=t.get("slug"),s=new Backbone.View({tagName:"option",attributes:{value:i},model:t});s.render().$el.text(t.get("name")),n.append(s.$el),s.listenTo(t,"change",function(){this.$el.text(this.model.get("name"))}),e.listenTo(t,"destroy",function(){var i=!1;_.each(v,function(e,n){e.model.get("template")===t.id&&(e.model.unset("template"),i=!0)}),i&&e.hasChanged()}),e.templateSelectOptions.push(s)})})},initSortables:function(){var t=["container","row","cell","widget"],i={ghostClass:"ghost",scroll:!0};e('[data-sort-group="cell"]').on("add remove",function(e){}),_.each(t,function(t){var n=e.extend({group:t,handle:".sort-handle"},i);e('.unlocked>[data-sort-group="'+t+'"]').sortable(n).on("add",function(t){var i=e(this).data("model"),n=e(this).data("view"),s=e(t.originalEvent.item).data("view");i.add(e(t.originalEvent.item).data("model"),{silent:!0}),i.trigger("update"),s.options.parent=n,t.stopPropagation()}).on("remove",function(t){var i=e(this).data("model");i.remove(e(t.originalEvent.item).data("model"),{silent:!0}),i.trigger("update"),t.stopPropagation()}).on("sort",function(t){e(this).children().each(function(t,i){e(i).data("model").set("idx",t)}),e(this).data("model").sort(),t.stopPropagation()})})},setItemVisibility:function(e){var t=this.getSelected();t&&t.setVisibility(this.$('[name="set-visibility"]:checked').val())},collectionView:function(){return n},hasChanged:function(){this.model.trigger("change",this.model)}}),p={Grid:i,Container:n,Row:s,Cell:o,Widget:a}}(jQuery,window.grid),function(e,t){var i,n,s=gridbuilder.l10n,o=gridbuilder.options.features,a=gridbuilder.options.default_widget,r=gridbuilder.options.default_widget_content_property,l=t.view.element;e(document).ready(function(){var o=!!parseInt(e('[name="_grid_enabled"]').val()),l='<input type="hidden" name="_grid_enabled" value="'+(o?1:0).toString()+'" />',d='<button type="button" id="edit-content-grid" class="button-secondary toggle-grid-editor">'+s.EditGrid+"</button>",c='<button type="button" id="edit-content-text" class="button-secondary toggle-grid-editor">'+s.EditText+"</button>",p=e('[name="_grid_data"]').val(),h=!JSON.parse(p),u="",g=gridbuilder.options.features.autosave=!!window.getUserSetting("grid-autosave");i=null,n=function(n){var s,o,l=_.isUndefined(n)?"true"!==e("#postdivrich").attr("date-grid-editor-mode"):n;e("#postdivrich").attr("date-grid-editor-mode",l.toString()),e('[name="_grid_enabled"]').val(l?1:0),l||e(window).trigger("resize"),l&&h&&(o={widget_class:a,instance:{}},o.instance[r]=e('textarea[name="content"]').val(),s={items:[{items:[{items:[{size_xs:12,items:[o]}]}]}]},e('[name="_grid_data"]').val(JSON.stringify(s)),h=!1),l&&!i&&(i=new t.controller.Grid)},u+='<div id="grid-toggle-wrap" class="grid-toolbar">',u+='<div class="toolbar-left">',u+='<label class="set-autosave" for="grid_autosave">',u+='<input type="checkbox" name="grid_autosave" id="grid_autosave" value="1" '+(g?"checked":"")+" />",u+=s.Autosave,u+="</label>",u+="</div>",u+='<div class="toolbar-right">',u+=l,u+=d,u+=c,u+="</div>",u+="</div>",e("#postdivrich").attr("date-grid-editor-mode",o.toString()).prepend(u),n(o),"undefined"!=typeof bstw_data&&bstw_data.deactivate_events.push("deactivate-tinymce")}).on("click",".toggle-grid-editor",function(e){n()}).on("change",'[name="grid_autosave"]',function(t){var i=!!e(this).prop("checked");o.autosave=i,window.setUserSetting("grid-autosave",i)}).on("copy cut",function(e){var n,s,o=i.getSelected();o&&(n=JSON.stringify(o.model.toJSON()),e.originalEvent.clipboardData.setData("application/json",n),"cut"===e.type&&(s=t.getActiveEditor(),s._deleteItem(o)),e.preventDefault())}).on("paste",function(e){var n,s,o,a,r,d=t.view.element,c=i.getSelected(),p=e.originalEvent.clipboardData.getData("application/json");if(c){try{n=JSON.parse(p)}catch(e){return}if(n&&-1!==["grid","container","row","cell","widget"].indexOf(n.type)&&("grid"!=n.type||!c.is(d.Grid))){if("container"===n.type)if(o=l.Container,c.is(l.Grid))a=c;else{if(!c.is(l.Container))return;r=c,a=c.parent()}if("row"===n.type)if(o=l.Row,c.is(l.Container))a=c;else{if(!c.is(l.Row))return;r=c,a=c.parent()}if("cell"===n.type)if(o=l.Cell,c.is(l.Row))a=c;else{if(!c.is(l.Cell))return;r=c,a=c.parent()}if("widget"===n.type)if(o=l.Widget,c.is(l.Cell))a=c;else{if(!c.is(l.Widget))return;r=c,a=c.parent()}s=t.getActiveEditor(),s._addItem(o,a,n,r)}}}),e(document).on("tinymce-editor-setup",function(t,i){var n=["add_unload_trigger","body_class","branding","browser_spellcheck","cache_suffix","content_css","convert_urls","end_container_on_empty_block","entities","entity_encoding","external_plugins","fix_list_elements","formats","indent","keep_styles","language","menubar","plugins","preview_styles","relative_urls","remove_script_host","resize","selector","skin","tabfocus_elements","theme","toolbar1","toolbar2","toolbar3","toolbar4","wp_autoresize_on","wp_lang_attr","wp_shortcut_labels","wpautop","wpeditimage_html5_captions"];e.each(n,function(e,t){i.settings[t]=tinyMCEPreInit.mceInit.content[t]})})}(jQuery,window.grid);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNvcnRhYmxlLmpzIiwianF1ZXJ5LmJpbmRpbmcuanMiLCJncmlkLWJhc2UuanMiLCJncmlkLW1vZGVsLmpzIiwiZ3JpZC11aS5qcyIsImdyaWQtZGlhbG9nLXZpZXdzLmpzIiwiZ3JpZC1lbGVtZW50LmpzIl0sIm5hbWVzIjpbImZhY3RvcnkiLCJkZWZpbmUiLCJhbWQiLCJtb2R1bGUiLCJleHBvcnRzIiwiUGFja2FnZSIsIlNvcnRhYmxlIiwid2luZG93IiwiZWwiLCJvcHRpb25zIiwibm9kZVR5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJ0aGlzIiwiX2V4dGVuZCIsImV4cGFuZG8iLCJkZWZhdWx0cyIsImdyb3VwIiwiTWF0aCIsInJhbmRvbSIsInNvcnQiLCJkaXNhYmxlZCIsInN0b3JlIiwiaGFuZGxlIiwic2Nyb2xsIiwic2Nyb2xsU2Vuc2l0aXZpdHkiLCJzY3JvbGxTcGVlZCIsImRyYWdnYWJsZSIsInRlc3QiLCJub2RlTmFtZSIsImdob3N0Q2xhc3MiLCJjaG9zZW5DbGFzcyIsImlnbm9yZSIsImZpbHRlciIsImFuaW1hdGlvbiIsInNldERhdGEiLCJkYXRhVHJhbnNmZXIiLCJkcmFnRWwiLCJ0ZXh0Q29udGVudCIsImRyb3BCdWJibGUiLCJkcmFnb3ZlckJ1YmJsZSIsImRhdGFJZEF0dHIiLCJkZWxheSIsImZvcmNlRmFsbGJhY2siLCJmYWxsYmFja0NsYXNzIiwiZmFsbGJhY2tPbkJvZHkiLCJuYW1lIiwiX3ByZXBhcmVHcm91cCIsImZuIiwiY2hhckF0IiwiYmluZCIsIm5hdGl2ZURyYWdnYWJsZSIsInN1cHBvcnREcmFnZ2FibGUiLCJfb24iLCJfb25UYXBTdGFydCIsInRvdWNoRHJhZ092ZXJMaXN0ZW5lcnMiLCJwdXNoIiwiX29uRHJhZ092ZXIiLCJnZXQiLCJfY2xvbmVIaWRlIiwic3RhdGUiLCJjbG9uZUVsIiwiX2NzcyIsInJvb3RFbCIsImluc2VydEJlZm9yZSIsIl9jbG9zZXN0Iiwic2VsZWN0b3IiLCJjdHgiLCJkb2N1bWVudCIsInBhcmVudE5vZGUiLCJfbWF0Y2hlcyIsIl9nbG9iYWxEcmFnT3ZlciIsImV2dCIsImRyb3BFZmZlY3QiLCJwcmV2ZW50RGVmYXVsdCIsImV2ZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9vZmYiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX3RvZ2dsZUNsYXNzIiwiY2xhc3NMaXN0IiwiY2xhc3NOYW1lIiwicmVwbGFjZSIsIlJTUEFDRSIsInByb3AiLCJ2YWwiLCJzdHlsZSIsImRlZmF1bHRWaWV3IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImN1cnJlbnRTdHlsZSIsIl9maW5kIiwidGFnTmFtZSIsIml0ZXJhdG9yIiwibGlzdCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaSIsIm4iLCJsZW5ndGgiLCJfZGlzcGF0Y2hFdmVudCIsInNvcnRhYmxlIiwidGFyZ2V0RWwiLCJmcm9tRWwiLCJzdGFydEluZGV4IiwibmV3SW5kZXgiLCJjcmVhdGVFdmVudCIsIm9uTmFtZSIsInRvVXBwZXJDYXNlIiwic3Vic3RyIiwiaW5pdEV2ZW50IiwidG8iLCJmcm9tIiwiaXRlbSIsImNsb25lIiwib2xkSW5kZXgiLCJkaXNwYXRjaEV2ZW50IiwiX29uTW92ZSIsInRvRWwiLCJkcmFnUmVjdCIsInRhcmdldFJlY3QiLCJyZXRWYWwiLCJvbk1vdmVGbiIsIm9uTW92ZSIsImRyYWdnZWQiLCJkcmFnZ2VkUmVjdCIsInJlbGF0ZWQiLCJyZWxhdGVkUmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIl9kaXNhYmxlRHJhZ2dhYmxlIiwiX3Vuc2lsZW50IiwiX3NpbGVudCIsIl9naG9zdElzTGFzdCIsImxhc3RFbCIsImxhc3RFbGVtZW50Q2hpbGQiLCJyZWN0IiwiY2xpZW50WSIsInRvcCIsImhlaWdodCIsImNsaWVudFgiLCJyaWdodCIsIndpZHRoIiwiX2dlbmVyYXRlSWQiLCJzdHIiLCJzcmMiLCJocmVmIiwic3VtIiwiY2hhckNvZGVBdCIsIl9pbmRleCIsImluZGV4IiwicHJldmlvdXNFbGVtZW50U2libGluZyIsInNwbGl0IiwidGFnIiwic2hpZnQiLCJyZSIsIlJlZ0V4cCIsImpvaW4iLCJtYXRjaCIsIl90aHJvdHRsZSIsImNhbGxiYWNrIiwibXMiLCJhcmdzIiwiX3RoaXMiLCJhcmd1bWVudHMiLCJzZXRUaW1lb3V0IiwiYXBwbHkiLCJkc3QiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsIkVycm9yIiwicGFyZW50RWwiLCJnaG9zdEVsIiwibmV4dEVsIiwic2Nyb2xsRWwiLCJzY3JvbGxQYXJlbnRFbCIsImxhc3RDU1MiLCJsYXN0UGFyZW50Q1NTIiwiYWN0aXZlR3JvdXAiLCJ0YXBFdnQiLCJ0b3VjaEV2dCIsIm1vdmVkIiwiYXV0b1Njcm9sbCIsIkRhdGUiLCJnZXRUaW1lIiwid2luIiwicGFyc2VJbnQiLCJjcmVhdGVFbGVtZW50Iiwic3VwcG9ydENzc1BvaW50ZXJFdmVudHMiLCJjc3NUZXh0IiwicG9pbnRlckV2ZW50cyIsImFicyIsIl9hdXRvU2Nyb2xsIiwidngiLCJ2eSIsInNlbnMiLCJzcGVlZCIsIngiLCJ5Iiwid2luV2lkdGgiLCJpbm5lcldpZHRoIiwid2luSGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJvZmZzZXRXaWR0aCIsInNjcm9sbFdpZHRoIiwib2Zmc2V0SGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwibGVmdCIsImJvdHRvbSIsImNsZWFySW50ZXJ2YWwiLCJwaWQiLCJzZXRJbnRlcnZhbCIsInNjcm9sbFRvIiwicGFnZVhPZmZzZXQiLCJwYWdlWU9mZnNldCIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJmb3JFYWNoIiwiZ3JvdXBzIiwicHV0IiwicHJvdG90eXBlIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwidG91Y2giLCJ0b3VjaGVzIiwidGFyZ2V0Iiwib3JpZ2luYWxUYXJnZXQiLCJidXR0b24iLCJzb21lIiwiY3JpdGVyaWEiLCJ0cmltIiwiX3ByZXBhcmVEcmFnU3RhcnQiLCJkcmFnU3RhcnRGbiIsIm93bmVyRG9jdW1lbnQiLCJuZXh0U2libGluZyIsIl9kaXNhYmxlRGVsYXllZERyYWciLCJfdHJpZ2dlckRyYWdTdGFydCIsIl9vbkRyb3AiLCJfZHJhZ1N0YXJ0VGltZXIiLCJjbGVhclRpbWVvdXQiLCJfb25EcmFnU3RhcnQiLCJzZWxlY3Rpb24iLCJlbXB0eSIsImdldFNlbGVjdGlvbiIsInJlbW92ZUFsbFJhbmdlcyIsImVyciIsIl9kcmFnU3RhcnRlZCIsImFjdGl2ZSIsIl9lbXVsYXRlRHJhZ092ZXIiLCJfbGFzdFgiLCJfbGFzdFkiLCJlbGVtZW50RnJvbVBvaW50IiwicGFyZW50IiwiZ3JvdXBOYW1lIiwiaW5kZXhPZiIsIl9vblRvdWNoTW92ZSIsIl9hcHBlbmRHaG9zdCIsImR4IiwiZHkiLCJ0cmFuc2xhdGUzZCIsImdob3N0UmVjdCIsImNzcyIsImNsb25lTm9kZSIsIm1hcmdpblRvcCIsIm1hcmdpbkxlZnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ1c2VGYWxsYmFjayIsIl9vZmZVcEV2ZW50cyIsInB1bGwiLCJfbG9vcElkIiwiZWZmZWN0QWxsb3dlZCIsInJldmVydCIsImdyb3VwUHV0IiwiaXNPd25lciIsImNhblNvcnQiLCJzdG9wUHJvcGFnYXRpb24iLCJjb250YWlucyIsImNoaWxkcmVuIiwiYW5pbWF0ZWQiLCJfYW5pbWF0ZSIsImFmdGVyIiwiZmxvYXRpbmciLCJjc3NGbG9hdCIsImRpc3BsYXkiLCJpc1dpZGUiLCJpc0xvbmciLCJoYWxmd2F5IiwibmV4dEVsZW1lbnRTaWJsaW5nIiwibW92ZVZlY3RvciIsImVsVG9wIiwib2Zmc2V0VG9wIiwidGdUb3AiLCJwcmV2UmVjdCIsImN1cnJlbnRSZWN0IiwicmVtb3ZlQ2hpbGQiLCJzYXZlIiwiX251bGxpbmciLCJoYW5kbGVFdmVudCIsInRvQXJyYXkiLCJvcmRlciIsImdldEF0dHJpYnV0ZSIsIml0ZW1zIiwiaWQiLCJzZXQiLCJjbG9zZXN0Iiwib3B0aW9uIiwidmFsdWUiLCJkZXN0cm95IiwiQXJyYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVtb3ZlQXR0cmlidXRlIiwic3BsaWNlIiwidXRpbHMiLCJvbiIsIm9mZiIsImZpbmQiLCJpcyIsImV4dGVuZCIsInRocm90dGxlIiwidG9nZ2xlQ2xhc3MiLCJjcmVhdGUiLCJ2ZXJzaW9uIiwialF1ZXJ5IiwiJCIsImVhY2giLCIkZWwiLCJkYXRhIiwiT2JqZWN0IiwicmVtb3ZlRGF0YSIsInNsaWNlIiwiU3RyaW5nIiwicmVtb3ZlQWNjZW50cyIsInJlbW92YWxNYXAiLCJBIiwiQUEiLCJBRSIsIkFPIiwiQVUiLCJBViIsIkFZIiwiQiIsIkMiLCJEIiwiRFoiLCJEeiIsIkUiLCJGIiwiRyIsIkgiLCJJIiwiSiIsIksiLCJMIiwiTEoiLCJMaiIsIk0iLCJOIiwiTkoiLCJOaiIsIk8iLCJPSSIsIk9PIiwiT1UiLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlRaIiwiVSIsIlYiLCJWWSIsIlciLCJYIiwiWSIsIloiLCJhIiwiYWEiLCJhZSIsImFvIiwiYXUiLCJhdiIsImF5IiwiYiIsImMiLCJkIiwiZHoiLCJlIiwiZiIsImciLCJoIiwiaHYiLCJqIiwiayIsImwiLCJsaiIsIm0iLCJuaiIsIm8iLCJvaSIsIm91Iiwib28iLCJwIiwicSIsInIiLCJzIiwidCIsInR6IiwidSIsInYiLCJ3IiwieiIsImxhdGluIiwibm9uTGF0aW4iLCJncmlkYnVpbGRlciIsImZlYXR1cmVzIiwiZ3JpZCIsImwxMG4iLCJtb2RlbCIsInZpZXciLCJ1aSIsImVsZW1lbnQiLCJjb250cm9sbGVyIiwidGVtcGxhdGVzIiwic2FuaXRpemVUaXRsZSIsInRvTG93ZXJDYXNlIiwiR3JpZCIsIiRpbnB1dCIsInBvc3RJRCIsInNlbGYiLCJyYXciLCJhdHRyIiwiSlNPTiIsInBhcnNlIiwidHlwZXMiLCJHcmlkT2JqZWN0IiwicmVjdXJzZSIsImRlcHRoIiwic3Vidmlld3MiLCJCYWNrYm9uZSIsIkNvbGxlY3Rpb24iLCJzZWxlY3RlZCIsImxpc3RlblRvIiwib25DaGFuZ2VNb2RlbCIsIkVkaXRvciIsInNldEFjdGl2ZUVkaXRvciIsImluc2VydEFmdGVyIiwicmVuZGVyIiwiZm9jdXMiLCJfIiwid2hpY2hWaWV3IiwiZ2V0U2VsZWN0ZWQiLCJ3aGF0Iiwic2V0U2VsZWN0ZWQiLCJzdHJpbmdpZnkiLCJ0b0pTT04iLCJhdXRvc2F2ZSIsImFqYXgiLCJtZXRob2QiLCJ1cmwiLCJhamF4dXJsIiwiY29tcGxldGUiLCJ4aHIiLCJzdGF0dXMiLCJzdWNjZXNzIiwiYWN0aW9uIiwibm9uY2UiLCJhdXRvc2F2ZV9ub25jZSIsImdyaWRfZGF0YSIsInBvc3RfaWQiLCJFdmVudHMiLCJHcmlkQ29sbGVjdGlvbiIsIk1vZGVsIiwibG9ja3MiLCJpbml0aWFsaXplIiwiYWRkIiwic2V0SXRlbVBhcmVudCIsInJldCIsImNiIiwiY29tcGFyYXRvciIsIm1vZGVscyIsIm1vZGVsc0FyciIsIkdyaWRUZW1wbGF0ZSIsInRyaWdnZXIiLCJpc05ldyIsImNyZWF0ZV90ZW1wbGF0ZV9ub25jZSIsInVwZGF0ZV90ZW1wbGF0ZV9ub25jZSIsInRlbXBsYXRlIiwiY29sbGVjdGlvbiIsImRlbGV0ZV90ZW1wbGF0ZV9ub25jZSIsInNsdWciLCJfYnlJZCIsInRlbXBsYXRlTGlzdCIsInRwbCIsIk1vZGFsIiwiUHJvbXB0Iiwid3AiLCJtZWRpYSIsIlZpZXciLCJldmVudHMiLCJjbGljayAuYnRuLWNvbmZpcm0iLCJjbGljayAuYnRuLWNhbmNlbCIsImRlZmF1bHRWYWx1ZSIsInRpdGxlIiwibWVzc2FnZSIsIiRwYXJlbnQiLCJvcGVuIiwiYXBwZW5kIiwic2VsZWN0IiwiY2xvc2UiLCJyZW1vdmUiLCJjb25maXJtIiwiZ2V0VmFsdWUiLCJjbGljayAuZ3JpZC1kaWFsb2ctcHJldiIsImNsaWNrIC5ncmlkLWRpYWxvZy1uZXh0IiwiY2xpY2sgLm1lZGlhLW1vZGFsLWJhY2tkcm9wLCAuZ3JpZC1kaWFsb2ctY2xvc2UiLCJrZXlkb3duIiwicHJldm5leHQiLCJpc1VuZGVmaW5lZCIsInByZXYiLCJuZXh0IiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsIkRpYWxvZyIsIm9rYXlCdG4iLCJCdXR0b24iLCJ0ZXh0IiwiRG9uZSIsImNsYXNzZXMiLCJkaXNtaXNzIiwiaHRtbCIsIlRvb2xiYXIiLCJjbGljayAudmlld3N3aXRjaGVyIFt0eXBlPVwicmFkaW9cIl0iLCJjbGljayAuc2V0LXZpc2liaWxpdHkgW3R5cGU9XCJyYWRpb1wiXSIsImNsaWNrIGJ1dHRvbi5hZGQtaXRlbSIsImNoYW5nZSBzZWxlY3QuYWRkLWl0ZW0iLCJjbGljayAuaXRlbS1hY3Rpb24uZWRpdCIsImNsaWNrIC5pdGVtLWFjdGlvbi5jbG9uZSIsImNsaWNrIC5pdGVtLWFjdGlvbi5kZWxldGUiLCJjbGljayAuaXRlbS1hY3Rpb24ubG9jayIsImNsaWNrIC5jcmVhdGUtdGVtcGxhdGUiLCJjbGljayAudXBkYXRlLXRlbXBsYXRlIiwiY2xpY2sgLm1hbmFnZS10ZW1wbGF0ZXMiLCJkZWxlZ2F0ZUV2ZW50cyIsInNldHVwU3RpY2t5Iiwic2V0dXBWaWV3c3dpdGNoZXIiLCJzZXR1cFRlbXBsYXRlU2VsZWN0cyIsInVwZGF0ZVdpZHRoIiwidmlld1NpemUiLCJnZXRVc2VyU2V0dGluZyIsInN3aXRjaFZpZXciLCJhZGRJdGVtIiwiYWRkVGVtcGxhdGVJdGVtIiwiZWRpdEl0ZW0iLCJjbG9uZUl0ZW0iLCJkZWxldGVJdGVtIiwibG9ja0l0ZW0iLCJzZXRWaXNpYmxlIiwib2xkU3RhdGUiLCJuZXdTdGF0ZSIsIm9mZnNldCIsInVwZGF0ZSIsImNhbl92aXNpYmxlIiwiY2FuX2VkaXQiLCJjYW5fY2xvbmUiLCJjYW5fZGVsZXRlIiwiY2FuX2xvY2siLCJjYW5fY3JlYXRlX3RlbXBsYXRlIiwiY2FuX3VwZGF0ZV90ZW1wbGF0ZSIsImNhbl9hZGRfY29udGFpbmVyIiwiY2FuX2FkZF9yb3ciLCJjYW5fYWRkX2NlbGwiLCJjYW5fYWRkX3dpZGdldCIsIml0ZW1faXNfZ3JpZCIsImlzX3VubG9ja2VkIiwiaXNfcGFyZW50X3VubG9ja2VkIiwiY2xvc2VzdF9ncmlkIiwiY2xvc2VzdF9jb250YWluZXIiLCJDb250YWluZXIiLCJjbG9zZXN0X3JvdyIsIlJvdyIsImNsb3Nlc3RfY2VsbCIsIkNlbGwiLCJpdGVtX3Zpc2liaWxpdHkiLCIkdGhpcyIsInNjcmVlbnNpemVzIiwic2l6ZXMiLCJzaXplT3B0aW9ucyIsInNpemUiLCJzaXplT3B0cyIsIiRzZWxmIiwidHBsRGF0YSIsImFwcGVuZFRvIiwibmV3VmlldyIsInNldFVzZXJTZXR0aW5nIiwidXBkYXRlVmlzaWJpbGl0eVNlbGVjdCIsInVwZGF0ZUxvY2tCdXR0b24iLCJ1bmRlbGVnYXRlRXZlbnRzIiwidmlzaVZhbHVlIiwiY3VycmVudCIsImNyZWF0ZVRlbXBsYXRlIiwidXBkYXRlVGVtcGxhdGUiLCJtYW5hZ2VUZW1wbGF0ZXMiLCJzZWxlY3RXaWRnZXRNb2RhbCIsImZvY3Vzb3V0ICoiLCJmb2N1c2luICoiLCJibHVyIiwia2V5dXAgKiIsInRvb2xiYXIiLCJzZWwiLCJrZXlDb2RlIiwic2hpZnRLZXkiLCJkZWNyZW1lbnRTaXplIiwiZGVjcmVtZW50T2Zmc2V0IiwiaW5jcmVtZW50U2l6ZSIsImluY3JlbWVudE9mZnNldCIsImJpbmRFdmVudHMiLCJjaGVja1NlbGVjdGVkIiwicHJldmVudEJhY2tzcGFjZU5hdiIsInRvZ2dsZUxvY2tTdGF0ZSIsInJlRm9jdXMiLCJvbkNoYW5nZVZpZXdzaXplIiwib3BlblRlbXBsYXRlTWFuYWdlciIsImFkZENvbnRhaW5lciIsImFkZFJvdyIsImFkZENlbGwiLCJhZGRXaWRnZXQiLCJzcmNFbGVtZW50IiwiJHRvb2xiYXJXcmFwIiwiaGFzIiwiX2FkZEl0ZW0iLCJzaXplX3hzIiwiY29sdW1ucyIsImRpYWxvZyIsImluc3RhbmNlIiwiV2lkZ2V0IiwiU2VsZWN0V2lkZ2V0RGlhbG9nIiwiU2VsZWN0V2lkZ2V0Iiwid2lkZ2V0X2NsYXNzIiwiY29udGVudCIsIml0ZW1DbGFzcyIsImdldENsYXNzIiwiaWR4IiwiJGNvbGxlY3Rpb24iLCJpdGVtTW9kZWwiLCJpbml0U29ydGFibGVzIiwiaGFzQ2hhbmdlZCIsImdldFByZXZJdGVtIiwibGFzdCIsImdldE5leHRJdGVtIiwiZmlyc3QiLCJoYXNDbGFzcyIsInRpdGxlU2VnbWVudCIsIm1vZGFsIiwiZWRpdG9yIiwiZWRpdG9ycyIsImdldENsYXNzTmFtZSIsImN1cnJlbnRUaXRsZSIsImdldFRpdGxlIiwidW5zaGlmdCIsIkVkaXREaWFsb2ciLCJhcHBseUNoYW5nZXMiLCJfZGVsZXRlSXRlbSIsInZpc2liaWxpdHkiLCJwcm9tcHQiLCJUZW1wbGF0ZU5hbWUiLCJkZXNjcmlwdGlvbiIsIkNyZWF0ZVRlbXBsYXRlRGVzY3JpcHRpb24iLCJUZW1wbGF0ZSIsIm9uY2UiLCJNYW5hZ2VUZW1wbGF0ZXNEaWFsb2ciLCJNYW5hZ2VUZW1wbGF0ZXMiLCJnZXRBY3RpdmVFZGl0b3IiLCJhY3RpdmVfZWRpdG9yIiwiZ2V0SW5wdXRUeXBlcyIsImlucHV0cyIsImluaXRlZCIsImlucHV0VHlwZXMiLCJpbnB1dFByb3RvdHlwZSIsIklucHV0V3JhcCIsIklucHV0R3JvdXAiLCJUZW1wbGF0ZXNMaXN0IiwiQWN0aXZlSW5wdXQiLCJQYXJlbnRWaWV3IiwiQ2hpbGRWaWV3IiwibWNlWkluZGV4Iiwic2V0dGluZ3MiLCJkZWZhdWx0Iiwic2V0VmFsdWUiLCJ3cENvbG9yUGlja2VyIiwiaGlkZSIsInBhbGV0dGVzIiwiZnJhbWUiLCJsaWJyYXJ5IiwibWltZXR5cGUiLCJhdHRhY2htZW50IiwiYXR0cmlidXRlcyIsInVwZGF0ZVZhbHVlIiwiQXR0YWNobWVudCIsIl9maWxlbmFtZSIsInRodW1ibmFpbCIsImZ1bGwiLCJSZW1vdmVNZWRpYSIsImNsaWNrIiwiZmV0Y2giLCJyZW1vdmVBdHRyIiwiY2hpbGQiLCJ3aWRnZXRfaW5zdGFuY2UiLCIkZm9ybSIsIiRzcGlubmVyIiwiJHdpZGdldCIsInByZXBhcmVNQ0UiLCJtZWRpYVdpZGdldHMiLCJoYW5kbGVXaWRnZXRBZGRlZCIsInRleHRXaWRnZXRzIiwiZ2V0X3dpZGdldF9ub25jZSIsImhhc01DRSIsImdldE1DRSIsIiR0ZXh0YXJlYXMiLCJ0aW55TUNFIiwiZWQiLCJ0YXJnZXRFbG0iLCJzZXJpYWxpemVBcnJheSIsIm1hdGNoZXMiLCJ3aWRnZXRJZCIsIndpZGdldENvbnRyb2xzIiwidGlueW1jZSIsInJlc2V0TUNFIiwiX3ByZXZNQ0UiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiRmxvYXRQYW5lbFppbmRleCIsIkZsb2F0UGFuZWwiLCJ6SW5kZXgiLCJUb29sdGlwUmVwYWludCIsIlRvb2x0aXAiLCJyZXBhaW50IiwiZ2V0RWwiLCJOb3RpZmljYXRpb25wUmVwYWludCIsIk5vdGlmaWNhdGlvbiIsIldQTGlua1ByZXZpZXciLCJ3cExpbmtSZW5kZXJIdG1sIiwicmVuZGVySHRtbCIsImJsdXIgW3R5cGU9XCJ0ZXh0XCJdIiwicHJvcGVydHkiLCJsaSIsImRlbCIsImxvY2siLCJpbnB1dCIsImNvbnNvbGUiLCJ0cmFjZSIsInNldExvY2siLCJsb2NrZWQiLCJwcmV2QXR0ciIsImdsdWUiLCJnZXRMb2NrIiwic2V0dGluZyIsImluaXRpYWxpemVJbnB1dE1hdHJpeCIsImluaXRpYWxpemVJbnB1dFdyYXAiLCJfbWF0cml4Iiwicm93cyIsInJvd0RhdGEiLCJfcm93IiwiY2VsbERhdGEiLCJfY2VsbCIsImNsaWNrIC5hcHBseSIsImlucHV0Z3JvdXBzIiwibWFpbiIsInNpZGViYXIiLCJpbnB1dGdyb3VwIiwic2V0TW9kZWxWYWwiLCJpc05hTiIsInVwZGF0ZU1vZGVsIiwiZG9uZSIsInRlbXBsYXRlTGlzdHMiLCJUZW1wbGF0ZXMiLCJjaGFuZ2UgW25hbWU9XCJ3aWRnZXRfY2xhc3NcIl0iLCJzZWxlY3RXaWRnZXQiLCJXaWRnZXRUeXBlcyIsIndpZGdldHMiLCJlc2NhcGUiLCJjYXJldFBvc2l0aW9uRnJvbVBvaW50IiwiY2FyZXRSYW5nZUZyb21Qb2ludCIsIkNvbGxlY3Rpb25WaWV3IiwiQ29sdW1uQ29sbGVjdGlvblZpZXciLCJTZWxlY3RvckRpc3BsYXkiLCJUZW1wbGF0ZURpc3BsYXkiLCJjbGFzc01hcCIsInNpemVrZXlzIiwib2Zmc2V0a2V5cyIsImFsbE9iamVjdHMiLCJzaXRlT3B0aW9ucyIsInRlbXBsYXRlU2V0dGluZ3MiLCJpbnRlcnBvbGF0ZSIsInNpemVfbG9ja190ZW1wbGF0ZSIsIm9mZnNldF9sb2NrX3RlbXBsYXRlIiwic2l6ZV9jbGFzc190ZW1wbGF0ZSIsIm9mZnNldF9jbGFzc190ZW1wbGF0ZSIsImNsYXNzbmFtZSIsImRibGNsaWNrIiwiU3Vidmlld3MiLCJ0ZW1wbGF0ZURpc3BsYXkiLCJzZWxlY3RvckRpc3BsYXkiLCJ1cGRhdGVEaXNwbGF5IiwidW5zZXQiLCJlZGl0IiwiY2xzIiwiY29sbGVjdGlvblZpZXciLCJjbnQiLCJwcmVwZW5kIiwidXBkYXRlVmlzaWJpbGl0eUNsYXNzZXMiLCJzZXRWaXNpYmlsaXR5IiwiZ3JpZFZpZXciLCJ2aXMiLCJ2aXNpYmxlQ2xhc3MiLCJoaWRkZW5DbGFzcyIsImRldGFjaCIsInJlc3VsdHMiLCJ1cGRhdGVDb2xMb2NrQ2xhc3NlcyIsInVwZGF0ZVNpemVDbGFzc2VzIiwidXBkYXRlT2Zmc2V0Q2xhc3NlcyIsInNpemVrZXkiLCJzZXRDb2xDbGFzcyIsIm9mZnNldGtleSIsInNldE9mZnNldENsYXNzIiwiZ2V0Q3VycmVudFNpemUiLCJkaWQiLCJzaXplS2V5IiwiX3NpemUiLCJoYXNDb2xDbGFzcyIsInNjcmVlbnNpemUiLCJnZXRDb2xDbGFzc25hbWVzIiwiZ2V0Q3VycmVudE9mZnNldCIsIm9mZnNldF9rZXkiLCJfb2Zmc2V0Iiwidmlld3NpemUiLCJjbGFzc190ZW1wbGF0ZSIsImdldExvY2tDbGFzc25hbWVzIiwic2V0T2Zmc2V0Iiwic2V0U2l6ZSIsInNjcmVlblNpemUiLCJhZGRfY2xhc3NlcyIsInJtX2NsYXNzZXMiLCJ0YWJpbmRleCIsImtleXMiLCJ3aWRnZXRDbGFzcyIsInVuZXNjYXBlIiwidW5rb253bldpZGdldCIsIml0ZW1zQ2hhbmdlZCIsImFkanVzdENlbGxTaXplIiwibW91c2Vtb3ZlIiwiJGUiLCJFdmVudCIsInBhZ2VYIiwicGFnZVkiLCJwYWdleSIsInNjcmVlblgiLCJzY3JlZW5ZIiwic2NyZWVueSIsImNsaWVudHkiLCIkZHJhZ2dlZCIsIm1vdXNldXAiLCJkcmFnU3RhcnRYIiwic3RhcnRPZmZzZXQiLCJwcm9wbmFtZSIsImNvbFdpZHRoIiwiY29scyIsIm1heCIsIm1pbiIsInJvdW5kIiwiZGlmZiIsIm9mZnNldERpZmYiLCJwcmV2T2Zmc2V0Iiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwiJGNlbGxzIiwiY2VsbEhlaWdodCIsInNldENvbGxhcHNlZCIsInRvZ2dsZUNvbGxhcHNlZCIsImRhdGEtZ3JpZC1jb2x1bW5zIiwidGVtcGxhdGVTZWxlY3RPcHRpb25zIiwicmVuZGVyVGVtcGxhdGVTZWxlY3RzIiwic3RvcExpc3RlbmluZyIsIiRzZWxlY3QiLCJvYmoiLCJzb3J0b3B0aW9ucyIsIml0ZW1WaWV3Iiwib3JpZ2luYWxFdmVudCIsInNpbGVudCIsInNldEl0ZW1WaXNpYmlsaXR5IiwiZ3JpZENvbnRyb2xsZXIiLCJ0b2dnbGVHcmlkRWRpdG9yIiwiZGVmYXVsdF93aWRnZXQiLCJkZWZhdWx0X3dpZGdldF9jb250ZW50X3Byb3BlcnR5IiwicmVhZHkiLCJncmlkU3RhdGUiLCJncmlkT24iLCJidG5PcGVuIiwiRWRpdEdyaWQiLCJidG5DbG9zZSIsIkVkaXRUZXh0IiwiaW5pdGlhbF92YWwiLCJpc19pbml0aWFsIiwidG9nZ2xlV3JhcEh0bWwiLCJpbml0aWFsX2dyaWRfZGF0YSIsImluaXRpYWxfd2lkZ2V0IiwiQXV0b3NhdmUiLCJic3R3X2RhdGEiLCJkZWFjdGl2YXRlX2V2ZW50cyIsImNsaXBib2FyZERhdGEiLCJncmlkRWwiLCJkYXRhU3RyIiwiZ2V0RGF0YSIsInByb3BzIiwidGlueU1DRVByZUluaXQiLCJtY2VJbml0Il0sIm1hcHBpbmdzIjoiQ0FPQSxTQUFBQSxHQUNBLFlBRUEsbUJBQUFDLFNBQUFBLE9BQUFDLElBQ0FELE9BQUFELEdBRUEsbUJBQUFHLGFBQUEsS0FBQUEsT0FBQUMsUUFDQUQsT0FBQUMsUUFBQUosSUFFQSxtQkFBQUssU0FDQUMsU0FBQU4sSUFJQU8sT0FB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MmtCLEVBQUEsU0FBQTl5QixFQUFBWCxHQUNBd2pCLEVBQUFnQyxTQUFBeGxCLEdBQUEwekIsZUFBQUMsUUFBQWxSLFFBQUF6aUIsUUFVQTRPLE9BQUF6VCxPQUFBdVoiLCJmaWxlIjoiZWRpdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiohXG4gKiBTb3J0YWJsZVxuICogQGF1dGhvclx0UnViYVhhICAgPHRyYXNoQHJ1YmF4YS5vcmc+XG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuXG5cbihmdW5jdGlvbiAoZmFjdG9yeSkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoZmFjdG9yeSk7XG5cdH1cblx0ZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyAhPSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdH1cblx0ZWxzZSBpZiAodHlwZW9mIFBhY2thZ2UgIT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRTb3J0YWJsZSA9IGZhY3RvcnkoKTsgIC8vIGV4cG9ydCBmb3IgTWV0ZW9yLmpzXG5cdH1cblx0ZWxzZSB7XG5cdFx0LyoganNoaW50IHN1Yjp0cnVlICovXG5cdFx0d2luZG93W1wiU29ydGFibGVcIl0gPSBmYWN0b3J5KCk7XG5cdH1cbn0pKGZ1bmN0aW9uICgpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cdFxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PSBcInVuZGVmaW5lZFwiIHx8IHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgPT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvciggXCJTb3J0YWJsZS5qcyByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnRcIiApO1xuXHRcdH1cblx0fVxuXG5cdHZhciBkcmFnRWwsXG5cdFx0cGFyZW50RWwsXG5cdFx0Z2hvc3RFbCxcblx0XHRjbG9uZUVsLFxuXHRcdHJvb3RFbCxcblx0XHRuZXh0RWwsXG5cblx0XHRzY3JvbGxFbCxcblx0XHRzY3JvbGxQYXJlbnRFbCxcblxuXHRcdGxhc3RFbCxcblx0XHRsYXN0Q1NTLFxuXHRcdGxhc3RQYXJlbnRDU1MsXG5cblx0XHRvbGRJbmRleCxcblx0XHRuZXdJbmRleCxcblxuXHRcdGFjdGl2ZUdyb3VwLFxuXHRcdGF1dG9TY3JvbGwgPSB7fSxcblxuXHRcdHRhcEV2dCxcblx0XHR0b3VjaEV2dCxcblxuXHRcdG1vdmVkLFxuXG5cdFx0LyoqIEBjb25zdCAqL1xuXHRcdFJTUEFDRSA9IC9cXHMrL2csXG5cblx0XHRleHBhbmRvID0gJ1NvcnRhYmxlJyArIChuZXcgRGF0ZSkuZ2V0VGltZSgpLFxuXG5cdFx0d2luID0gd2luZG93LFxuXHRcdGRvY3VtZW50ID0gd2luLmRvY3VtZW50LFxuXHRcdHBhcnNlSW50ID0gd2luLnBhcnNlSW50LFxuXG5cdFx0c3VwcG9ydERyYWdnYWJsZSA9ICEhKCdkcmFnZ2FibGUnIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKSxcblx0XHRzdXBwb3J0Q3NzUG9pbnRlckV2ZW50cyA9IChmdW5jdGlvbiAoZWwpIHtcblx0XHRcdGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgneCcpO1xuXHRcdFx0ZWwuc3R5bGUuY3NzVGV4dCA9ICdwb2ludGVyLWV2ZW50czphdXRvJztcblx0XHRcdHJldHVybiBlbC5zdHlsZS5wb2ludGVyRXZlbnRzID09PSAnYXV0byc7XG5cdFx0fSkoKSxcblxuXHRcdF9zaWxlbnQgPSBmYWxzZSxcblxuXHRcdGFicyA9IE1hdGguYWJzLFxuXHRcdHNsaWNlID0gW10uc2xpY2UsXG5cblx0XHR0b3VjaERyYWdPdmVyTGlzdGVuZXJzID0gW10sXG5cblx0XHRfYXV0b1Njcm9sbCA9IF90aHJvdHRsZShmdW5jdGlvbiAoLyoqRXZlbnQqL2V2dCwgLyoqT2JqZWN0Ki9vcHRpb25zLCAvKipIVE1MRWxlbWVudCovcm9vdEVsKSB7XG5cdFx0XHQvLyBCdWc6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTUwNTUyMVxuXHRcdFx0aWYgKHJvb3RFbCAmJiBvcHRpb25zLnNjcm9sbCkge1xuXHRcdFx0XHR2YXIgZWwsXG5cdFx0XHRcdFx0cmVjdCxcblx0XHRcdFx0XHRzZW5zID0gb3B0aW9ucy5zY3JvbGxTZW5zaXRpdml0eSxcblx0XHRcdFx0XHRzcGVlZCA9IG9wdGlvbnMuc2Nyb2xsU3BlZWQsXG5cblx0XHRcdFx0XHR4ID0gZXZ0LmNsaWVudFgsXG5cdFx0XHRcdFx0eSA9IGV2dC5jbGllbnRZLFxuXG5cdFx0XHRcdFx0d2luV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCxcblx0XHRcdFx0XHR3aW5IZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQsXG5cblx0XHRcdFx0XHR2eCxcblx0XHRcdFx0XHR2eVxuXHRcdFx0XHQ7XG5cblx0XHRcdFx0Ly8gRGVsZWN0IHNjcm9sbEVsXG5cdFx0XHRcdGlmIChzY3JvbGxQYXJlbnRFbCAhPT0gcm9vdEVsKSB7XG5cdFx0XHRcdFx0c2Nyb2xsRWwgPSBvcHRpb25zLnNjcm9sbDtcblx0XHRcdFx0XHRzY3JvbGxQYXJlbnRFbCA9IHJvb3RFbDtcblxuXHRcdFx0XHRcdGlmIChzY3JvbGxFbCA9PT0gdHJ1ZSkge1xuXHRcdFx0XHRcdFx0c2Nyb2xsRWwgPSByb290RWw7XG5cblx0XHRcdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRcdFx0aWYgKChzY3JvbGxFbC5vZmZzZXRXaWR0aCA8IHNjcm9sbEVsLnNjcm9sbFdpZHRoKSB8fFxuXHRcdFx0XHRcdFx0XHRcdChzY3JvbGxFbC5vZmZzZXRIZWlnaHQgPCBzY3JvbGxFbC5zY3JvbGxIZWlnaHQpXG5cdFx0XHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdC8qIGpzaGludCBib3NzOnRydWUgKi9cblx0XHRcdFx0XHRcdH0gd2hpbGUgKHNjcm9sbEVsID0gc2Nyb2xsRWwucGFyZW50Tm9kZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHNjcm9sbEVsKSB7XG5cdFx0XHRcdFx0ZWwgPSBzY3JvbGxFbDtcblx0XHRcdFx0XHRyZWN0ID0gc2Nyb2xsRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0XHRcdFx0dnggPSAoYWJzKHJlY3QucmlnaHQgLSB4KSA8PSBzZW5zKSAtIChhYnMocmVjdC5sZWZ0IC0geCkgPD0gc2Vucyk7XG5cdFx0XHRcdFx0dnkgPSAoYWJzKHJlY3QuYm90dG9tIC0geSkgPD0gc2VucykgLSAoYWJzKHJlY3QudG9wIC0geSkgPD0gc2Vucyk7XG5cdFx0XHRcdH1cblxuXG5cdFx0XHRcdGlmICghKHZ4IHx8IHZ5KSkge1xuXHRcdFx0XHRcdHZ4ID0gKHdpbldpZHRoIC0geCA8PSBzZW5zKSAtICh4IDw9IHNlbnMpO1xuXHRcdFx0XHRcdHZ5ID0gKHdpbkhlaWdodCAtIHkgPD0gc2VucykgLSAoeSA8PSBzZW5zKTtcblxuXHRcdFx0XHRcdC8qIGpzaGludCBleHByOnRydWUgKi9cblx0XHRcdFx0XHQodnggfHwgdnkpICYmIChlbCA9IHdpbik7XG5cdFx0XHRcdH1cblxuXG5cdFx0XHRcdGlmIChhdXRvU2Nyb2xsLnZ4ICE9PSB2eCB8fCBhdXRvU2Nyb2xsLnZ5ICE9PSB2eSB8fCBhdXRvU2Nyb2xsLmVsICE9PSBlbCkge1xuXHRcdFx0XHRcdGF1dG9TY3JvbGwuZWwgPSBlbDtcblx0XHRcdFx0XHRhdXRvU2Nyb2xsLnZ4ID0gdng7XG5cdFx0XHRcdFx0YXV0b1Njcm9sbC52eSA9IHZ5O1xuXG5cdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbChhdXRvU2Nyb2xsLnBpZCk7XG5cblx0XHRcdFx0XHRpZiAoZWwpIHtcblx0XHRcdFx0XHRcdGF1dG9TY3JvbGwucGlkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRpZiAoZWwgPT09IHdpbikge1xuXHRcdFx0XHRcdFx0XHRcdHdpbi5zY3JvbGxUbyh3aW4ucGFnZVhPZmZzZXQgKyB2eCAqIHNwZWVkLCB3aW4ucGFnZVlPZmZzZXQgKyB2eSAqIHNwZWVkKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR2eSAmJiAoZWwuc2Nyb2xsVG9wICs9IHZ5ICogc3BlZWQpO1xuXHRcdFx0XHRcdFx0XHRcdHZ4ICYmIChlbC5zY3JvbGxMZWZ0ICs9IHZ4ICogc3BlZWQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9LCAyNCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSwgMzApLFxuXG5cdFx0X3ByZXBhcmVHcm91cCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cdFx0XHR2YXIgZ3JvdXAgPSBvcHRpb25zLmdyb3VwO1xuXG5cdFx0XHRpZiAoIWdyb3VwIHx8IHR5cGVvZiBncm91cCAhPSAnb2JqZWN0Jykge1xuXHRcdFx0XHRncm91cCA9IG9wdGlvbnMuZ3JvdXAgPSB7bmFtZTogZ3JvdXB9O1xuXHRcdFx0fVxuXG5cdFx0XHRbJ3B1bGwnLCAncHV0J10uZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdGlmICghKGtleSBpbiBncm91cCkpIHtcblx0XHRcdFx0XHRncm91cFtrZXldID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdG9wdGlvbnMuZ3JvdXBzID0gJyAnICsgZ3JvdXAubmFtZSArIChncm91cC5wdXQuam9pbiA/ICcgJyArIGdyb3VwLnB1dC5qb2luKCcgJykgOiAnJykgKyAnICc7XG5cdFx0fVxuXHQ7XG5cblxuXG5cdC8qKlxuXHQgKiBAY2xhc3MgIFNvcnRhYmxlXG5cdCAqIEBwYXJhbSAge0hUTUxFbGVtZW50fSAgZWxcblx0ICogQHBhcmFtICB7T2JqZWN0fSAgICAgICBbb3B0aW9uc11cblx0ICovXG5cdGZ1bmN0aW9uIFNvcnRhYmxlKGVsLCBvcHRpb25zKSB7XG5cdFx0aWYgKCEoZWwgJiYgZWwubm9kZVR5cGUgJiYgZWwubm9kZVR5cGUgPT09IDEpKSB7XG5cdFx0XHR0aHJvdyAnU29ydGFibGU6IGBlbGAgbXVzdCBiZSBIVE1MRWxlbWVudCwgYW5kIG5vdCAnICsge30udG9TdHJpbmcuY2FsbChlbCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5lbCA9IGVsOyAvLyByb290IGVsZW1lbnRcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zID0gX2V4dGVuZCh7fSwgb3B0aW9ucyk7XG5cblxuXHRcdC8vIEV4cG9ydCBpbnN0YW5jZVxuXHRcdGVsW2V4cGFuZG9dID0gdGhpcztcblxuXG5cdFx0Ly8gRGVmYXVsdCBvcHRpb25zXG5cdFx0dmFyIGRlZmF1bHRzID0ge1xuXHRcdFx0Z3JvdXA6IE1hdGgucmFuZG9tKCksXG5cdFx0XHRzb3J0OiB0cnVlLFxuXHRcdFx0ZGlzYWJsZWQ6IGZhbHNlLFxuXHRcdFx0c3RvcmU6IG51bGwsXG5cdFx0XHRoYW5kbGU6IG51bGwsXG5cdFx0XHRzY3JvbGw6IHRydWUsXG5cdFx0XHRzY3JvbGxTZW5zaXRpdml0eTogMzAsXG5cdFx0XHRzY3JvbGxTcGVlZDogMTAsXG5cdFx0XHRkcmFnZ2FibGU6IC9bdW9dbC9pLnRlc3QoZWwubm9kZU5hbWUpID8gJ2xpJyA6ICc+KicsXG5cdFx0XHRnaG9zdENsYXNzOiAnc29ydGFibGUtZ2hvc3QnLFxuXHRcdFx0Y2hvc2VuQ2xhc3M6ICdzb3J0YWJsZS1jaG9zZW4nLFxuXHRcdFx0aWdub3JlOiAnYSwgaW1nJyxcblx0XHRcdGZpbHRlcjogbnVsbCxcblx0XHRcdGFuaW1hdGlvbjogMCxcblx0XHRcdHNldERhdGE6IGZ1bmN0aW9uIChkYXRhVHJhbnNmZXIsIGRyYWdFbCkge1xuXHRcdFx0XHRkYXRhVHJhbnNmZXIuc2V0RGF0YSgnVGV4dCcsIGRyYWdFbC50ZXh0Q29udGVudCk7XG5cdFx0XHR9LFxuXHRcdFx0ZHJvcEJ1YmJsZTogZmFsc2UsXG5cdFx0XHRkcmFnb3ZlckJ1YmJsZTogZmFsc2UsXG5cdFx0XHRkYXRhSWRBdHRyOiAnZGF0YS1pZCcsXG5cdFx0XHRkZWxheTogMCxcblx0XHRcdGZvcmNlRmFsbGJhY2s6IGZhbHNlLFxuXHRcdFx0ZmFsbGJhY2tDbGFzczogJ3NvcnRhYmxlLWZhbGxiYWNrJyxcblx0XHRcdGZhbGxiYWNrT25Cb2R5OiBmYWxzZVxuXHRcdH07XG5cblxuXHRcdC8vIFNldCBkZWZhdWx0IG9wdGlvbnNcblx0XHRmb3IgKHZhciBuYW1lIGluIGRlZmF1bHRzKSB7XG5cdFx0XHQhKG5hbWUgaW4gb3B0aW9ucykgJiYgKG9wdGlvbnNbbmFtZV0gPSBkZWZhdWx0c1tuYW1lXSk7XG5cdFx0fVxuXG5cdFx0X3ByZXBhcmVHcm91cChvcHRpb25zKTtcblxuXHRcdC8vIEJpbmQgYWxsIHByaXZhdGUgbWV0aG9kc1xuXHRcdGZvciAodmFyIGZuIGluIHRoaXMpIHtcblx0XHRcdGlmIChmbi5jaGFyQXQoMCkgPT09ICdfJykge1xuXHRcdFx0XHR0aGlzW2ZuXSA9IHRoaXNbZm5dLmJpbmQodGhpcyk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU2V0dXAgZHJhZyBtb2RlXG5cdFx0dGhpcy5uYXRpdmVEcmFnZ2FibGUgPSBvcHRpb25zLmZvcmNlRmFsbGJhY2sgPyBmYWxzZSA6IHN1cHBvcnREcmFnZ2FibGU7XG5cblx0XHQvLyBCaW5kIGV2ZW50c1xuXHRcdF9vbihlbCwgJ21vdXNlZG93bicsIHRoaXMuX29uVGFwU3RhcnQpO1xuXHRcdF9vbihlbCwgJ3RvdWNoc3RhcnQnLCB0aGlzLl9vblRhcFN0YXJ0KTtcblxuXHRcdGlmICh0aGlzLm5hdGl2ZURyYWdnYWJsZSkge1xuXHRcdFx0X29uKGVsLCAnZHJhZ292ZXInLCB0aGlzKTtcblx0XHRcdF9vbihlbCwgJ2RyYWdlbnRlcicsIHRoaXMpO1xuXHRcdH1cblxuXHRcdHRvdWNoRHJhZ092ZXJMaXN0ZW5lcnMucHVzaCh0aGlzLl9vbkRyYWdPdmVyKTtcblxuXHRcdC8vIFJlc3RvcmUgc29ydGluZ1xuXHRcdG9wdGlvbnMuc3RvcmUgJiYgdGhpcy5zb3J0KG9wdGlvbnMuc3RvcmUuZ2V0KHRoaXMpKTtcblx0fVxuXG5cblx0U29ydGFibGUucHJvdG90eXBlID0gLyoqIEBsZW5kcyBTb3J0YWJsZS5wcm90b3R5cGUgKi8ge1xuXHRcdGNvbnN0cnVjdG9yOiBTb3J0YWJsZSxcblxuXHRcdF9vblRhcFN0YXJ0OiBmdW5jdGlvbiAoLyoqIEV2ZW50fFRvdWNoRXZlbnQgKi9ldnQpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdGVsID0gdGhpcy5lbCxcblx0XHRcdFx0b3B0aW9ucyA9IHRoaXMub3B0aW9ucyxcblx0XHRcdFx0dHlwZSA9IGV2dC50eXBlLFxuXHRcdFx0XHR0b3VjaCA9IGV2dC50b3VjaGVzICYmIGV2dC50b3VjaGVzWzBdLFxuXHRcdFx0XHR0YXJnZXQgPSAodG91Y2ggfHwgZXZ0KS50YXJnZXQsXG5cdFx0XHRcdG9yaWdpbmFsVGFyZ2V0ID0gdGFyZ2V0LFxuXHRcdFx0XHRmaWx0ZXIgPSBvcHRpb25zLmZpbHRlcjtcblxuXG5cdFx0XHRpZiAodHlwZSA9PT0gJ21vdXNlZG93bicgJiYgZXZ0LmJ1dHRvbiAhPT0gMCB8fCBvcHRpb25zLmRpc2FibGVkKSB7XG5cdFx0XHRcdHJldHVybjsgLy8gb25seSBsZWZ0IGJ1dHRvbiBvciBlbmFibGVkXG5cdFx0XHR9XG5cblx0XHRcdHRhcmdldCA9IF9jbG9zZXN0KHRhcmdldCwgb3B0aW9ucy5kcmFnZ2FibGUsIGVsKTtcblxuXHRcdFx0aWYgKCF0YXJnZXQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBnZXQgdGhlIGluZGV4IG9mIHRoZSBkcmFnZ2VkIGVsZW1lbnQgd2l0aGluIGl0cyBwYXJlbnRcblx0XHRcdG9sZEluZGV4ID0gX2luZGV4KHRhcmdldCwgb3B0aW9ucy5kcmFnZ2FibGUpO1xuXG5cdFx0XHQvLyBDaGVjayBmaWx0ZXJcblx0XHRcdGlmICh0eXBlb2YgZmlsdGVyID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRcdGlmIChmaWx0ZXIuY2FsbCh0aGlzLCBldnQsIHRhcmdldCwgdGhpcykpIHtcblx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudChfdGhpcywgb3JpZ2luYWxUYXJnZXQsICdmaWx0ZXInLCB0YXJnZXQsIGVsLCBvbGRJbmRleCk7XG5cdFx0XHRcdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0cmV0dXJuOyAvLyBjYW5jZWwgZG5kXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGVsc2UgaWYgKGZpbHRlcikge1xuXHRcdFx0XHRmaWx0ZXIgPSBmaWx0ZXIuc3BsaXQoJywnKS5zb21lKGZ1bmN0aW9uIChjcml0ZXJpYSkge1xuXHRcdFx0XHRcdGNyaXRlcmlhID0gX2Nsb3Nlc3Qob3JpZ2luYWxUYXJnZXQsIGNyaXRlcmlhLnRyaW0oKSwgZWwpO1xuXG5cdFx0XHRcdFx0aWYgKGNyaXRlcmlhKSB7XG5cdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudChfdGhpcywgY3JpdGVyaWEsICdmaWx0ZXInLCB0YXJnZXQsIGVsLCBvbGRJbmRleCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGlmIChmaWx0ZXIpIHtcblx0XHRcdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRyZXR1cm47IC8vIGNhbmNlbCBkbmRcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cblx0XHRcdGlmIChvcHRpb25zLmhhbmRsZSAmJiAhX2Nsb3Nlc3Qob3JpZ2luYWxUYXJnZXQsIG9wdGlvbnMuaGFuZGxlLCBlbCkpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cblx0XHRcdC8vIFByZXBhcmUgYGRyYWdzdGFydGBcblx0XHRcdHRoaXMuX3ByZXBhcmVEcmFnU3RhcnQoZXZ0LCB0b3VjaCwgdGFyZ2V0KTtcblx0XHR9LFxuXG5cdFx0X3ByZXBhcmVEcmFnU3RhcnQ6IGZ1bmN0aW9uICgvKiogRXZlbnQgKi9ldnQsIC8qKiBUb3VjaCAqL3RvdWNoLCAvKiogSFRNTEVsZW1lbnQgKi90YXJnZXQpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXMsXG5cdFx0XHRcdGVsID0gX3RoaXMuZWwsXG5cdFx0XHRcdG9wdGlvbnMgPSBfdGhpcy5vcHRpb25zLFxuXHRcdFx0XHRvd25lckRvY3VtZW50ID0gZWwub3duZXJEb2N1bWVudCxcblx0XHRcdFx0ZHJhZ1N0YXJ0Rm47XG5cblx0XHRcdGlmICh0YXJnZXQgJiYgIWRyYWdFbCAmJiAodGFyZ2V0LnBhcmVudE5vZGUgPT09IGVsKSkge1xuXHRcdFx0XHR0YXBFdnQgPSBldnQ7XG5cblx0XHRcdFx0cm9vdEVsID0gZWw7XG5cdFx0XHRcdGRyYWdFbCA9IHRhcmdldDtcblx0XHRcdFx0cGFyZW50RWwgPSBkcmFnRWwucGFyZW50Tm9kZTtcblx0XHRcdFx0bmV4dEVsID0gZHJhZ0VsLm5leHRTaWJsaW5nO1xuXHRcdFx0XHRhY3RpdmVHcm91cCA9IG9wdGlvbnMuZ3JvdXA7XG5cblx0XHRcdFx0ZHJhZ1N0YXJ0Rm4gPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0Ly8gRGVsYXllZCBkcmFnIGhhcyBiZWVuIHRyaWdnZXJlZFxuXHRcdFx0XHRcdC8vIHdlIGNhbiByZS1lbmFibGUgdGhlIGV2ZW50czogdG91Y2htb3ZlL21vdXNlbW92ZVxuXHRcdFx0XHRcdF90aGlzLl9kaXNhYmxlRGVsYXllZERyYWcoKTtcblxuXHRcdFx0XHRcdC8vIE1ha2UgdGhlIGVsZW1lbnQgZHJhZ2dhYmxlXG5cdFx0XHRcdFx0ZHJhZ0VsLmRyYWdnYWJsZSA9IHRydWU7XG5cblx0XHRcdFx0XHQvLyBDaG9zZW4gaXRlbVxuXHRcdFx0XHRcdF90b2dnbGVDbGFzcyhkcmFnRWwsIF90aGlzLm9wdGlvbnMuY2hvc2VuQ2xhc3MsIHRydWUpO1xuXG5cdFx0XHRcdFx0Ly8gQmluZCB0aGUgZXZlbnRzOiBkcmFnc3RhcnQvZHJhZ2VuZFxuXHRcdFx0XHRcdF90aGlzLl90cmlnZ2VyRHJhZ1N0YXJ0KHRvdWNoKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBEaXNhYmxlIFwiZHJhZ2dhYmxlXCJcblx0XHRcdFx0b3B0aW9ucy5pZ25vcmUuc3BsaXQoJywnKS5mb3JFYWNoKGZ1bmN0aW9uIChjcml0ZXJpYSkge1xuXHRcdFx0XHRcdF9maW5kKGRyYWdFbCwgY3JpdGVyaWEudHJpbSgpLCBfZGlzYWJsZURyYWdnYWJsZSk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdF9vbihvd25lckRvY3VtZW50LCAnbW91c2V1cCcsIF90aGlzLl9vbkRyb3ApO1xuXHRcdFx0XHRfb24ob3duZXJEb2N1bWVudCwgJ3RvdWNoZW5kJywgX3RoaXMuX29uRHJvcCk7XG5cdFx0XHRcdF9vbihvd25lckRvY3VtZW50LCAndG91Y2hjYW5jZWwnLCBfdGhpcy5fb25Ecm9wKTtcblxuXHRcdFx0XHRpZiAob3B0aW9ucy5kZWxheSkge1xuXHRcdFx0XHRcdC8vIElmIHRoZSB1c2VyIG1vdmVzIHRoZSBwb2ludGVyIG9yIGxldCBnbyB0aGUgY2xpY2sgb3IgdG91Y2hcblx0XHRcdFx0XHQvLyBiZWZvcmUgdGhlIGRlbGF5IGhhcyBiZWVuIHJlYWNoZWQ6XG5cdFx0XHRcdFx0Ly8gZGlzYWJsZSB0aGUgZGVsYXllZCBkcmFnXG5cdFx0XHRcdFx0X29uKG93bmVyRG9jdW1lbnQsICdtb3VzZXVwJywgX3RoaXMuX2Rpc2FibGVEZWxheWVkRHJhZyk7XG5cdFx0XHRcdFx0X29uKG93bmVyRG9jdW1lbnQsICd0b3VjaGVuZCcsIF90aGlzLl9kaXNhYmxlRGVsYXllZERyYWcpO1xuXHRcdFx0XHRcdF9vbihvd25lckRvY3VtZW50LCAndG91Y2hjYW5jZWwnLCBfdGhpcy5fZGlzYWJsZURlbGF5ZWREcmFnKTtcblx0XHRcdFx0XHRfb24ob3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIF90aGlzLl9kaXNhYmxlRGVsYXllZERyYWcpO1xuXHRcdFx0XHRcdF9vbihvd25lckRvY3VtZW50LCAndG91Y2htb3ZlJywgX3RoaXMuX2Rpc2FibGVEZWxheWVkRHJhZyk7XG5cblx0XHRcdFx0XHRfdGhpcy5fZHJhZ1N0YXJ0VGltZXIgPSBzZXRUaW1lb3V0KGRyYWdTdGFydEZuLCBvcHRpb25zLmRlbGF5KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkcmFnU3RhcnRGbigpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdF9kaXNhYmxlRGVsYXllZERyYWc6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBvd25lckRvY3VtZW50ID0gdGhpcy5lbC5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRjbGVhclRpbWVvdXQodGhpcy5fZHJhZ1N0YXJ0VGltZXIpO1xuXHRcdFx0X29mZihvd25lckRvY3VtZW50LCAnbW91c2V1cCcsIHRoaXMuX2Rpc2FibGVEZWxheWVkRHJhZyk7XG5cdFx0XHRfb2ZmKG93bmVyRG9jdW1lbnQsICd0b3VjaGVuZCcsIHRoaXMuX2Rpc2FibGVEZWxheWVkRHJhZyk7XG5cdFx0XHRfb2ZmKG93bmVyRG9jdW1lbnQsICd0b3VjaGNhbmNlbCcsIHRoaXMuX2Rpc2FibGVEZWxheWVkRHJhZyk7XG5cdFx0XHRfb2ZmKG93bmVyRG9jdW1lbnQsICdtb3VzZW1vdmUnLCB0aGlzLl9kaXNhYmxlRGVsYXllZERyYWcpO1xuXHRcdFx0X29mZihvd25lckRvY3VtZW50LCAndG91Y2htb3ZlJywgdGhpcy5fZGlzYWJsZURlbGF5ZWREcmFnKTtcblx0XHR9LFxuXG5cdFx0X3RyaWdnZXJEcmFnU3RhcnQ6IGZ1bmN0aW9uICgvKiogVG91Y2ggKi90b3VjaCkge1xuXHRcdFx0aWYgKHRvdWNoKSB7XG5cdFx0XHRcdC8vIFRvdWNoIGRldmljZSBzdXBwb3J0XG5cdFx0XHRcdHRhcEV2dCA9IHtcblx0XHRcdFx0XHR0YXJnZXQ6IGRyYWdFbCxcblx0XHRcdFx0XHRjbGllbnRYOiB0b3VjaC5jbGllbnRYLFxuXHRcdFx0XHRcdGNsaWVudFk6IHRvdWNoLmNsaWVudFlcblx0XHRcdFx0fTtcblxuXHRcdFx0XHR0aGlzLl9vbkRyYWdTdGFydCh0YXBFdnQsICd0b3VjaCcpO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAoIXRoaXMubmF0aXZlRHJhZ2dhYmxlKSB7XG5cdFx0XHRcdHRoaXMuX29uRHJhZ1N0YXJ0KHRhcEV2dCwgdHJ1ZSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0X29uKGRyYWdFbCwgJ2RyYWdlbmQnLCB0aGlzKTtcblx0XHRcdFx0X29uKHJvb3RFbCwgJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ1N0YXJ0KTtcblx0XHRcdH1cblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0aWYgKGRvY3VtZW50LnNlbGVjdGlvbikge1xuXHRcdFx0XHRcdGRvY3VtZW50LnNlbGVjdGlvbi5lbXB0eSgpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5yZW1vdmVBbGxSYW5nZXMoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdF9kcmFnU3RhcnRlZDogZnVuY3Rpb24gKCkge1xuXHRcdFx0aWYgKHJvb3RFbCAmJiBkcmFnRWwpIHtcblx0XHRcdFx0Ly8gQXBwbHkgZWZmZWN0XG5cdFx0XHRcdF90b2dnbGVDbGFzcyhkcmFnRWwsIHRoaXMub3B0aW9ucy5naG9zdENsYXNzLCB0cnVlKTtcblxuXHRcdFx0XHRTb3J0YWJsZS5hY3RpdmUgPSB0aGlzO1xuXG5cdFx0XHRcdC8vIERyYWcgc3RhcnQgZXZlbnRcblx0XHRcdFx0X2Rpc3BhdGNoRXZlbnQodGhpcywgcm9vdEVsLCAnc3RhcnQnLCBkcmFnRWwsIHJvb3RFbCwgb2xkSW5kZXgpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRfZW11bGF0ZURyYWdPdmVyOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRpZiAodG91Y2hFdnQpIHtcblx0XHRcdFx0aWYgKHRoaXMuX2xhc3RYID09PSB0b3VjaEV2dC5jbGllbnRYICYmIHRoaXMuX2xhc3RZID09PSB0b3VjaEV2dC5jbGllbnRZKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5fbGFzdFggPSB0b3VjaEV2dC5jbGllbnRYO1xuXHRcdFx0XHR0aGlzLl9sYXN0WSA9IHRvdWNoRXZ0LmNsaWVudFk7XG5cblx0XHRcdFx0aWYgKCFzdXBwb3J0Q3NzUG9pbnRlckV2ZW50cykge1xuXHRcdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ2Rpc3BsYXknLCAnbm9uZScpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIHRhcmdldCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQodG91Y2hFdnQuY2xpZW50WCwgdG91Y2hFdnQuY2xpZW50WSksXG5cdFx0XHRcdFx0cGFyZW50ID0gdGFyZ2V0LFxuXHRcdFx0XHRcdGdyb3VwTmFtZSA9ICcgJyArIHRoaXMub3B0aW9ucy5ncm91cC5uYW1lICsgJycsXG5cdFx0XHRcdFx0aSA9IHRvdWNoRHJhZ092ZXJMaXN0ZW5lcnMubGVuZ3RoO1xuXG5cdFx0XHRcdGlmIChwYXJlbnQpIHtcblx0XHRcdFx0XHRkbyB7XG5cdFx0XHRcdFx0XHRpZiAocGFyZW50W2V4cGFuZG9dICYmIHBhcmVudFtleHBhbmRvXS5vcHRpb25zLmdyb3Vwcy5pbmRleE9mKGdyb3VwTmFtZSkgPiAtMSkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoaS0tKSB7XG5cdFx0XHRcdFx0XHRcdFx0dG91Y2hEcmFnT3Zlckxpc3RlbmVyc1tpXSh7XG5cdFx0XHRcdFx0XHRcdFx0XHRjbGllbnRYOiB0b3VjaEV2dC5jbGllbnRYLFxuXHRcdFx0XHRcdFx0XHRcdFx0Y2xpZW50WTogdG91Y2hFdnQuY2xpZW50WSxcblx0XHRcdFx0XHRcdFx0XHRcdHRhcmdldDogdGFyZ2V0LFxuXHRcdFx0XHRcdFx0XHRcdFx0cm9vdEVsOiBwYXJlbnRcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR0YXJnZXQgPSBwYXJlbnQ7IC8vIHN0b3JlIGxhc3QgZWxlbWVudFxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvKiBqc2hpbnQgYm9zczp0cnVlICovXG5cdFx0XHRcdFx0d2hpbGUgKHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghc3VwcG9ydENzc1BvaW50ZXJFdmVudHMpIHtcblx0XHRcdFx0XHRfY3NzKGdob3N0RWwsICdkaXNwbGF5JywgJycpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXG5cdFx0X29uVG91Y2hNb3ZlOiBmdW5jdGlvbiAoLyoqVG91Y2hFdmVudCovZXZ0KSB7XG5cdFx0XHRpZiAodGFwRXZ0KSB7XG5cdFx0XHRcdC8vIG9ubHkgc2V0IHRoZSBzdGF0dXMgdG8gZHJhZ2dpbmcsIHdoZW4gd2UgYXJlIGFjdHVhbGx5IGRyYWdnaW5nXG5cdFx0XHRcdGlmICghU29ydGFibGUuYWN0aXZlKSB7XG5cdFx0XHRcdFx0dGhpcy5fZHJhZ1N0YXJ0ZWQoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGFzIHdlbGwgYXMgY3JlYXRpbmcgdGhlIGdob3N0IGVsZW1lbnQgb24gdGhlIGRvY3VtZW50IGJvZHlcblx0XHRcdFx0dGhpcy5fYXBwZW5kR2hvc3QoKTtcblxuXHRcdFx0XHR2YXIgdG91Y2ggPSBldnQudG91Y2hlcyA/IGV2dC50b3VjaGVzWzBdIDogZXZ0LFxuXHRcdFx0XHRcdGR4ID0gdG91Y2guY2xpZW50WCAtIHRhcEV2dC5jbGllbnRYLFxuXHRcdFx0XHRcdGR5ID0gdG91Y2guY2xpZW50WSAtIHRhcEV2dC5jbGllbnRZLFxuXHRcdFx0XHRcdHRyYW5zbGF0ZTNkID0gZXZ0LnRvdWNoZXMgPyAndHJhbnNsYXRlM2QoJyArIGR4ICsgJ3B4LCcgKyBkeSArICdweCwwKScgOiAndHJhbnNsYXRlKCcgKyBkeCArICdweCwnICsgZHkgKyAncHgpJztcblxuXHRcdFx0XHRtb3ZlZCA9IHRydWU7XG5cdFx0XHRcdHRvdWNoRXZ0ID0gdG91Y2g7XG5cblx0XHRcdFx0X2NzcyhnaG9zdEVsLCAnd2Via2l0VHJhbnNmb3JtJywgdHJhbnNsYXRlM2QpO1xuXHRcdFx0XHRfY3NzKGdob3N0RWwsICdtb3pUcmFuc2Zvcm0nLCB0cmFuc2xhdGUzZCk7XG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ21zVHJhbnNmb3JtJywgdHJhbnNsYXRlM2QpO1xuXHRcdFx0XHRfY3NzKGdob3N0RWwsICd0cmFuc2Zvcm0nLCB0cmFuc2xhdGUzZCk7XG5cblx0XHRcdFx0ZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdF9hcHBlbmRHaG9zdDogZnVuY3Rpb24gKCkge1xuXHRcdFx0aWYgKCFnaG9zdEVsKSB7XG5cdFx0XHRcdHZhciByZWN0ID0gZHJhZ0VsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuXHRcdFx0XHRcdGNzcyA9IF9jc3MoZHJhZ0VsKSxcblx0XHRcdFx0XHRvcHRpb25zID0gdGhpcy5vcHRpb25zLFxuXHRcdFx0XHRcdGdob3N0UmVjdDtcblxuXHRcdFx0XHRnaG9zdEVsID0gZHJhZ0VsLmNsb25lTm9kZSh0cnVlKTtcblxuXHRcdFx0XHRfdG9nZ2xlQ2xhc3MoZ2hvc3RFbCwgb3B0aW9ucy5naG9zdENsYXNzLCBmYWxzZSk7XG5cdFx0XHRcdF90b2dnbGVDbGFzcyhnaG9zdEVsLCBvcHRpb25zLmZhbGxiYWNrQ2xhc3MsIHRydWUpO1xuXG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ3RvcCcsIHJlY3QudG9wIC0gcGFyc2VJbnQoY3NzLm1hcmdpblRvcCwgMTApKTtcblx0XHRcdFx0X2NzcyhnaG9zdEVsLCAnbGVmdCcsIHJlY3QubGVmdCAtIHBhcnNlSW50KGNzcy5tYXJnaW5MZWZ0LCAxMCkpO1xuXHRcdFx0XHRfY3NzKGdob3N0RWwsICd3aWR0aCcsIHJlY3Qud2lkdGgpO1xuXHRcdFx0XHRfY3NzKGdob3N0RWwsICdoZWlnaHQnLCByZWN0LmhlaWdodCk7XG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ29wYWNpdHknLCAnMC44Jyk7XG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ3Bvc2l0aW9uJywgJ2ZpeGVkJyk7XG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ3pJbmRleCcsICcxMDAwMDAnKTtcblx0XHRcdFx0X2NzcyhnaG9zdEVsLCAncG9pbnRlckV2ZW50cycsICdub25lJyk7XG5cblx0XHRcdFx0b3B0aW9ucy5mYWxsYmFja09uQm9keSAmJiBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGdob3N0RWwpIHx8IHJvb3RFbC5hcHBlbmRDaGlsZChnaG9zdEVsKTtcblxuXHRcdFx0XHQvLyBGaXhpbmcgZGltZW5zaW9ucy5cblx0XHRcdFx0Z2hvc3RSZWN0ID0gZ2hvc3RFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHRcdFx0X2NzcyhnaG9zdEVsLCAnd2lkdGgnLCByZWN0LndpZHRoICogMiAtIGdob3N0UmVjdC53aWR0aCk7XG5cdFx0XHRcdF9jc3MoZ2hvc3RFbCwgJ2hlaWdodCcsIHJlY3QuaGVpZ2h0ICogMiAtIGdob3N0UmVjdC5oZWlnaHQpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRfb25EcmFnU3RhcnQ6IGZ1bmN0aW9uICgvKipFdmVudCovZXZ0LCAvKipib29sZWFuKi91c2VGYWxsYmFjaykge1xuXHRcdFx0dmFyIGRhdGFUcmFuc2ZlciA9IGV2dC5kYXRhVHJhbnNmZXIsXG5cdFx0XHRcdG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cblx0XHRcdHRoaXMuX29mZlVwRXZlbnRzKCk7XG5cblx0XHRcdGlmIChhY3RpdmVHcm91cC5wdWxsID09ICdjbG9uZScpIHtcblx0XHRcdFx0Y2xvbmVFbCA9IGRyYWdFbC5jbG9uZU5vZGUodHJ1ZSk7XG5cdFx0XHRcdF9jc3MoY2xvbmVFbCwgJ2Rpc3BsYXknLCAnbm9uZScpO1xuXHRcdFx0XHRyb290RWwuaW5zZXJ0QmVmb3JlKGNsb25lRWwsIGRyYWdFbCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICh1c2VGYWxsYmFjaykge1xuXG5cdFx0XHRcdGlmICh1c2VGYWxsYmFjayA9PT0gJ3RvdWNoJykge1xuXHRcdFx0XHRcdC8vIEJpbmQgdG91Y2ggZXZlbnRzXG5cdFx0XHRcdFx0X29uKGRvY3VtZW50LCAndG91Y2htb3ZlJywgdGhpcy5fb25Ub3VjaE1vdmUpO1xuXHRcdFx0XHRcdF9vbihkb2N1bWVudCwgJ3RvdWNoZW5kJywgdGhpcy5fb25Ecm9wKTtcblx0XHRcdFx0XHRfb24oZG9jdW1lbnQsICd0b3VjaGNhbmNlbCcsIHRoaXMuX29uRHJvcCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Ly8gT2xkIGJyd29zZXJcblx0XHRcdFx0XHRfb24oZG9jdW1lbnQsICdtb3VzZW1vdmUnLCB0aGlzLl9vblRvdWNoTW92ZSk7XG5cdFx0XHRcdFx0X29uKGRvY3VtZW50LCAnbW91c2V1cCcsIHRoaXMuX29uRHJvcCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0aGlzLl9sb29wSWQgPSBzZXRJbnRlcnZhbCh0aGlzLl9lbXVsYXRlRHJhZ092ZXIsIDUwKTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRpZiAoZGF0YVRyYW5zZmVyKSB7XG5cdFx0XHRcdFx0ZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSAnbW92ZSc7XG5cdFx0XHRcdFx0b3B0aW9ucy5zZXREYXRhICYmIG9wdGlvbnMuc2V0RGF0YS5jYWxsKHRoaXMsIGRhdGFUcmFuc2ZlciwgZHJhZ0VsKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdF9vbihkb2N1bWVudCwgJ2Ryb3AnLCB0aGlzKTtcblx0XHRcdFx0c2V0VGltZW91dCh0aGlzLl9kcmFnU3RhcnRlZCwgMCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdF9vbkRyYWdPdmVyOiBmdW5jdGlvbiAoLyoqRXZlbnQqL2V2dCkge1xuXHRcdFx0dmFyIGVsID0gdGhpcy5lbCxcblx0XHRcdFx0dGFyZ2V0LFxuXHRcdFx0XHRkcmFnUmVjdCxcblx0XHRcdFx0cmV2ZXJ0LFxuXHRcdFx0XHRvcHRpb25zID0gdGhpcy5vcHRpb25zLFxuXHRcdFx0XHRncm91cCA9IG9wdGlvbnMuZ3JvdXAsXG5cdFx0XHRcdGdyb3VwUHV0ID0gZ3JvdXAucHV0LFxuXHRcdFx0XHRpc093bmVyID0gKGFjdGl2ZUdyb3VwID09PSBncm91cCksXG5cdFx0XHRcdGNhblNvcnQgPSBvcHRpb25zLnNvcnQ7XG5cblx0XHRcdGlmIChldnQucHJldmVudERlZmF1bHQgIT09IHZvaWQgMCkge1xuXHRcdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0IW9wdGlvbnMuZHJhZ292ZXJCdWJibGUgJiYgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXG5cdFx0XHRtb3ZlZCA9IHRydWU7XG5cblx0XHRcdGlmIChhY3RpdmVHcm91cCAmJiAhb3B0aW9ucy5kaXNhYmxlZCAmJlxuXHRcdFx0XHQoaXNPd25lclxuXHRcdFx0XHRcdD8gY2FuU29ydCB8fCAocmV2ZXJ0ID0gIXJvb3RFbC5jb250YWlucyhkcmFnRWwpKSAvLyBSZXZlcnRpbmcgaXRlbSBpbnRvIHRoZSBvcmlnaW5hbCBsaXN0XG5cdFx0XHRcdFx0OiBhY3RpdmVHcm91cC5wdWxsICYmIGdyb3VwUHV0ICYmIChcblx0XHRcdFx0XHRcdChhY3RpdmVHcm91cC5uYW1lID09PSBncm91cC5uYW1lKSB8fCAvLyBieSBOYW1lXG5cdFx0XHRcdFx0XHQoZ3JvdXBQdXQuaW5kZXhPZiAmJiB+Z3JvdXBQdXQuaW5kZXhPZihhY3RpdmVHcm91cC5uYW1lKSkgLy8gYnkgQXJyYXlcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkgJiZcblx0XHRcdFx0KGV2dC5yb290RWwgPT09IHZvaWQgMCB8fCBldnQucm9vdEVsID09PSB0aGlzLmVsKSAvLyB0b3VjaCBmYWxsYmFja1xuXHRcdFx0KSB7XG5cdFx0XHRcdC8vIFNtYXJ0IGF1dG8tc2Nyb2xsaW5nXG5cdFx0XHRcdF9hdXRvU2Nyb2xsKGV2dCwgb3B0aW9ucywgdGhpcy5lbCk7XG5cblx0XHRcdFx0aWYgKF9zaWxlbnQpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0YXJnZXQgPSBfY2xvc2VzdChldnQudGFyZ2V0LCBvcHRpb25zLmRyYWdnYWJsZSwgZWwpO1xuXHRcdFx0XHRkcmFnUmVjdCA9IGRyYWdFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdFx0XHRpZiAocmV2ZXJ0KSB7XG5cdFx0XHRcdFx0X2Nsb25lSGlkZSh0cnVlKTtcblxuXHRcdFx0XHRcdGlmIChjbG9uZUVsIHx8IG5leHRFbCkge1xuXHRcdFx0XHRcdFx0cm9vdEVsLmluc2VydEJlZm9yZShkcmFnRWwsIGNsb25lRWwgfHwgbmV4dEVsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAoIWNhblNvcnQpIHtcblx0XHRcdFx0XHRcdHJvb3RFbC5hcHBlbmRDaGlsZChkcmFnRWwpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cblx0XHRcdFx0aWYgKChlbC5jaGlsZHJlbi5sZW5ndGggPT09IDApIHx8IChlbC5jaGlsZHJlblswXSA9PT0gZ2hvc3RFbCkgfHxcblx0XHRcdFx0XHQoZWwgPT09IGV2dC50YXJnZXQpICYmICh0YXJnZXQgPSBfZ2hvc3RJc0xhc3QoZWwsIGV2dCkpXG5cdFx0XHRcdCkge1xuXG5cdFx0XHRcdFx0aWYgKHRhcmdldCkge1xuXHRcdFx0XHRcdFx0aWYgKHRhcmdldC5hbmltYXRlZCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHRhcmdldFJlY3QgPSB0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0X2Nsb25lSGlkZShpc093bmVyKTtcblxuXHRcdFx0XHRcdGlmIChfb25Nb3ZlKHJvb3RFbCwgZWwsIGRyYWdFbCwgZHJhZ1JlY3QsIHRhcmdldCwgdGFyZ2V0UmVjdCkgIT09IGZhbHNlKSB7XG5cdFx0XHRcdFx0XHRpZiAoIWRyYWdFbC5jb250YWlucyhlbCkpIHtcblx0XHRcdFx0XHRcdFx0ZWwuYXBwZW5kQ2hpbGQoZHJhZ0VsKTtcblx0XHRcdFx0XHRcdFx0cGFyZW50RWwgPSBlbDsgLy8gYWN0dWFsaXphdGlvblxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR0aGlzLl9hbmltYXRlKGRyYWdSZWN0LCBkcmFnRWwpO1xuXHRcdFx0XHRcdFx0dGFyZ2V0ICYmIHRoaXMuX2FuaW1hdGUodGFyZ2V0UmVjdCwgdGFyZ2V0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZiAodGFyZ2V0ICYmICF0YXJnZXQuYW5pbWF0ZWQgJiYgdGFyZ2V0ICE9PSBkcmFnRWwgJiYgKHRhcmdldC5wYXJlbnROb2RlW2V4cGFuZG9dICE9PSB2b2lkIDApKSB7XG5cdFx0XHRcdFx0aWYgKGxhc3RFbCAhPT0gdGFyZ2V0KSB7XG5cdFx0XHRcdFx0XHRsYXN0RWwgPSB0YXJnZXQ7XG5cdFx0XHRcdFx0XHRsYXN0Q1NTID0gX2Nzcyh0YXJnZXQpO1xuXHRcdFx0XHRcdFx0bGFzdFBhcmVudENTUyA9IF9jc3ModGFyZ2V0LnBhcmVudE5vZGUpO1xuXHRcdFx0XHRcdH1cblxuXG5cdFx0XHRcdFx0dmFyIHRhcmdldFJlY3QgPSB0YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG5cdFx0XHRcdFx0XHR3aWR0aCA9IHRhcmdldFJlY3QucmlnaHQgLSB0YXJnZXRSZWN0LmxlZnQsXG5cdFx0XHRcdFx0XHRoZWlnaHQgPSB0YXJnZXRSZWN0LmJvdHRvbSAtIHRhcmdldFJlY3QudG9wLFxuXHRcdFx0XHRcdFx0ZmxvYXRpbmcgPSAvbGVmdHxyaWdodHxpbmxpbmUvLnRlc3QobGFzdENTUy5jc3NGbG9hdCArIGxhc3RDU1MuZGlzcGxheSlcblx0XHRcdFx0XHRcdFx0fHwgKGxhc3RQYXJlbnRDU1MuZGlzcGxheSA9PSAnZmxleCcgJiYgbGFzdFBhcmVudENTU1snZmxleC1kaXJlY3Rpb24nXS5pbmRleE9mKCdyb3cnKSA9PT0gMCksXG5cdFx0XHRcdFx0XHRpc1dpZGUgPSAodGFyZ2V0Lm9mZnNldFdpZHRoID4gZHJhZ0VsLm9mZnNldFdpZHRoKSxcblx0XHRcdFx0XHRcdGlzTG9uZyA9ICh0YXJnZXQub2Zmc2V0SGVpZ2h0ID4gZHJhZ0VsLm9mZnNldEhlaWdodCksXG5cdFx0XHRcdFx0XHRoYWxmd2F5ID0gKGZsb2F0aW5nID8gKGV2dC5jbGllbnRYIC0gdGFyZ2V0UmVjdC5sZWZ0KSAvIHdpZHRoIDogKGV2dC5jbGllbnRZIC0gdGFyZ2V0UmVjdC50b3ApIC8gaGVpZ2h0KSA+IDAuNSxcblx0XHRcdFx0XHRcdG5leHRTaWJsaW5nID0gdGFyZ2V0Lm5leHRFbGVtZW50U2libGluZyxcblx0XHRcdFx0XHRcdG1vdmVWZWN0b3IgPSBfb25Nb3ZlKHJvb3RFbCwgZWwsIGRyYWdFbCwgZHJhZ1JlY3QsIHRhcmdldCwgdGFyZ2V0UmVjdCksXG5cdFx0XHRcdFx0XHRhZnRlclxuXHRcdFx0XHRcdDtcblxuXHRcdFx0XHRcdGlmIChtb3ZlVmVjdG9yICE9PSBmYWxzZSkge1xuXHRcdFx0XHRcdFx0X3NpbGVudCA9IHRydWU7XG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KF91bnNpbGVudCwgMzApO1xuXG5cdFx0XHRcdFx0XHRfY2xvbmVIaWRlKGlzT3duZXIpO1xuXG5cdFx0XHRcdFx0XHRpZiAobW92ZVZlY3RvciA9PT0gMSB8fCBtb3ZlVmVjdG9yID09PSAtMSkge1xuXHRcdFx0XHRcdFx0XHRhZnRlciA9IChtb3ZlVmVjdG9yID09PSAxKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGVsc2UgaWYgKGZsb2F0aW5nKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBlbFRvcCA9IGRyYWdFbC5vZmZzZXRUb3AsXG5cdFx0XHRcdFx0XHRcdFx0dGdUb3AgPSB0YXJnZXQub2Zmc2V0VG9wO1xuXG5cdFx0XHRcdFx0XHRcdGlmIChlbFRvcCA9PT0gdGdUb3ApIHtcblx0XHRcdFx0XHRcdFx0XHRhZnRlciA9ICh0YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZyA9PT0gZHJhZ0VsKSAmJiAhaXNXaWRlIHx8IGhhbGZ3YXkgJiYgaXNXaWRlO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGFmdGVyID0gdGdUb3AgPiBlbFRvcDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0YWZ0ZXIgPSAobmV4dFNpYmxpbmcgIT09IGRyYWdFbCkgJiYgIWlzTG9uZyB8fCBoYWxmd2F5ICYmIGlzTG9uZztcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aWYgKCFkcmFnRWwuY29udGFpbnMoZWwpKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChhZnRlciAmJiAhbmV4dFNpYmxpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHRlbC5hcHBlbmRDaGlsZChkcmFnRWwpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRhcmdldC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkcmFnRWwsIGFmdGVyID8gbmV4dFNpYmxpbmcgOiB0YXJnZXQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHBhcmVudEVsID0gZHJhZ0VsLnBhcmVudE5vZGU7IC8vIGFjdHVhbGl6YXRpb25cblxuXHRcdFx0XHRcdFx0dGhpcy5fYW5pbWF0ZShkcmFnUmVjdCwgZHJhZ0VsKTtcblx0XHRcdFx0XHRcdHRoaXMuX2FuaW1hdGUodGFyZ2V0UmVjdCwgdGFyZ2V0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0X2FuaW1hdGU6IGZ1bmN0aW9uIChwcmV2UmVjdCwgdGFyZ2V0KSB7XG5cdFx0XHR2YXIgbXMgPSB0aGlzLm9wdGlvbnMuYW5pbWF0aW9uO1xuXG5cdFx0XHRpZiAobXMpIHtcblx0XHRcdFx0dmFyIGN1cnJlbnRSZWN0ID0gdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG5cdFx0XHRcdF9jc3ModGFyZ2V0LCAndHJhbnNpdGlvbicsICdub25lJyk7XG5cdFx0XHRcdF9jc3ModGFyZ2V0LCAndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZTNkKCdcblx0XHRcdFx0XHQrIChwcmV2UmVjdC5sZWZ0IC0gY3VycmVudFJlY3QubGVmdCkgKyAncHgsJ1xuXHRcdFx0XHRcdCsgKHByZXZSZWN0LnRvcCAtIGN1cnJlbnRSZWN0LnRvcCkgKyAncHgsMCknXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0dGFyZ2V0Lm9mZnNldFdpZHRoOyAvLyByZXBhaW50XG5cblx0XHRcdFx0X2Nzcyh0YXJnZXQsICd0cmFuc2l0aW9uJywgJ2FsbCAnICsgbXMgKyAnbXMnKTtcblx0XHRcdFx0X2Nzcyh0YXJnZXQsICd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlM2QoMCwwLDApJyk7XG5cblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRhcmdldC5hbmltYXRlZCk7XG5cdFx0XHRcdHRhcmdldC5hbmltYXRlZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdF9jc3ModGFyZ2V0LCAndHJhbnNpdGlvbicsICcnKTtcblx0XHRcdFx0XHRfY3NzKHRhcmdldCwgJ3RyYW5zZm9ybScsICcnKTtcblx0XHRcdFx0XHR0YXJnZXQuYW5pbWF0ZWQgPSBmYWxzZTtcblx0XHRcdFx0fSwgbXMpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRfb2ZmVXBFdmVudHM6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBvd25lckRvY3VtZW50ID0gdGhpcy5lbC5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRfb2ZmKGRvY3VtZW50LCAndG91Y2htb3ZlJywgdGhpcy5fb25Ub3VjaE1vdmUpO1xuXHRcdFx0X29mZihvd25lckRvY3VtZW50LCAnbW91c2V1cCcsIHRoaXMuX29uRHJvcCk7XG5cdFx0XHRfb2ZmKG93bmVyRG9jdW1lbnQsICd0b3VjaGVuZCcsIHRoaXMuX29uRHJvcCk7XG5cdFx0XHRfb2ZmKG93bmVyRG9jdW1lbnQsICd0b3VjaGNhbmNlbCcsIHRoaXMuX29uRHJvcCk7XG5cdFx0fSxcblxuXHRcdF9vbkRyb3A6IGZ1bmN0aW9uICgvKipFdmVudCovZXZ0KSB7XG5cdFx0XHR2YXIgZWwgPSB0aGlzLmVsLFxuXHRcdFx0XHRvcHRpb25zID0gdGhpcy5vcHRpb25zO1xuXG5cdFx0XHRjbGVhckludGVydmFsKHRoaXMuX2xvb3BJZCk7XG5cdFx0XHRjbGVhckludGVydmFsKGF1dG9TY3JvbGwucGlkKTtcblx0XHRcdGNsZWFyVGltZW91dCh0aGlzLl9kcmFnU3RhcnRUaW1lcik7XG5cblx0XHRcdC8vIFVuYmluZCBldmVudHNcblx0XHRcdF9vZmYoZG9jdW1lbnQsICdtb3VzZW1vdmUnLCB0aGlzLl9vblRvdWNoTW92ZSk7XG5cblx0XHRcdGlmICh0aGlzLm5hdGl2ZURyYWdnYWJsZSkge1xuXHRcdFx0XHRfb2ZmKGRvY3VtZW50LCAnZHJvcCcsIHRoaXMpO1xuXHRcdFx0XHRfb2ZmKGVsLCAnZHJhZ3N0YXJ0JywgdGhpcy5fb25EcmFnU3RhcnQpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLl9vZmZVcEV2ZW50cygpO1xuXG5cdFx0XHRpZiAoZXZ0KSB7XG5cdFx0XHRcdGlmIChtb3ZlZCkge1xuXHRcdFx0XHRcdGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdCFvcHRpb25zLmRyb3BCdWJibGUgJiYgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Z2hvc3RFbCAmJiBnaG9zdEVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZ2hvc3RFbCk7XG5cblx0XHRcdFx0aWYgKGRyYWdFbCkge1xuXHRcdFx0XHRcdGlmICh0aGlzLm5hdGl2ZURyYWdnYWJsZSkge1xuXHRcdFx0XHRcdFx0X29mZihkcmFnRWwsICdkcmFnZW5kJywgdGhpcyk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0X2Rpc2FibGVEcmFnZ2FibGUoZHJhZ0VsKTtcblxuXHRcdFx0XHRcdC8vIFJlbW92ZSBjbGFzcydzXG5cdFx0XHRcdFx0X3RvZ2dsZUNsYXNzKGRyYWdFbCwgdGhpcy5vcHRpb25zLmdob3N0Q2xhc3MsIGZhbHNlKTtcblx0XHRcdFx0XHRfdG9nZ2xlQ2xhc3MoZHJhZ0VsLCB0aGlzLm9wdGlvbnMuY2hvc2VuQ2xhc3MsIGZhbHNlKTtcblxuXHRcdFx0XHRcdGlmIChyb290RWwgIT09IHBhcmVudEVsKSB7XG5cdFx0XHRcdFx0XHRuZXdJbmRleCA9IF9pbmRleChkcmFnRWwsIG9wdGlvbnMuZHJhZ2dhYmxlKTtcblxuXHRcdFx0XHRcdFx0aWYgKG5ld0luZGV4ID49IDApIHtcblx0XHRcdFx0XHRcdFx0Ly8gZHJhZyBmcm9tIG9uZSBsaXN0IGFuZCBkcm9wIGludG8gYW5vdGhlclxuXHRcdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudChudWxsLCBwYXJlbnRFbCwgJ3NvcnQnLCBkcmFnRWwsIHJvb3RFbCwgb2xkSW5kZXgsIG5ld0luZGV4KTtcblx0XHRcdFx0XHRcdFx0X2Rpc3BhdGNoRXZlbnQodGhpcywgcm9vdEVsLCAnc29ydCcsIGRyYWdFbCwgcm9vdEVsLCBvbGRJbmRleCwgbmV3SW5kZXgpO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFkZCBldmVudFxuXHRcdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudChudWxsLCBwYXJlbnRFbCwgJ2FkZCcsIGRyYWdFbCwgcm9vdEVsLCBvbGRJbmRleCwgbmV3SW5kZXgpO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFJlbW92ZSBldmVudFxuXHRcdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudCh0aGlzLCByb290RWwsICdyZW1vdmUnLCBkcmFnRWwsIHJvb3RFbCwgb2xkSW5kZXgsIG5ld0luZGV4KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgY2xvbmVcblx0XHRcdFx0XHRcdGNsb25lRWwgJiYgY2xvbmVFbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGNsb25lRWwpO1xuXG5cdFx0XHRcdFx0XHRpZiAoZHJhZ0VsLm5leHRTaWJsaW5nICE9PSBuZXh0RWwpIHtcblx0XHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBpbmRleCBvZiB0aGUgZHJhZ2dlZCBlbGVtZW50IHdpdGhpbiBpdHMgcGFyZW50XG5cdFx0XHRcdFx0XHRcdG5ld0luZGV4ID0gX2luZGV4KGRyYWdFbCwgb3B0aW9ucy5kcmFnZ2FibGUpO1xuXG5cdFx0XHRcdFx0XHRcdGlmIChuZXdJbmRleCA+PSAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gZHJhZyAmIGRyb3Agd2l0aGluIHRoZSBzYW1lIGxpc3Rcblx0XHRcdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudCh0aGlzLCByb290RWwsICd1cGRhdGUnLCBkcmFnRWwsIHJvb3RFbCwgb2xkSW5kZXgsIG5ld0luZGV4KTtcblx0XHRcdFx0XHRcdFx0XHRfZGlzcGF0Y2hFdmVudCh0aGlzLCByb290RWwsICdzb3J0JywgZHJhZ0VsLCByb290RWwsIG9sZEluZGV4LCBuZXdJbmRleCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoU29ydGFibGUuYWN0aXZlKSB7XG5cdFx0XHRcdFx0XHRpZiAobmV3SW5kZXggPT09IG51bGwgfHwgbmV3SW5kZXggPT09IC0xKSB7XG5cdFx0XHRcdFx0XHRcdG5ld0luZGV4ID0gb2xkSW5kZXg7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdF9kaXNwYXRjaEV2ZW50KHRoaXMsIHJvb3RFbCwgJ2VuZCcsIGRyYWdFbCwgcm9vdEVsLCBvbGRJbmRleCwgbmV3SW5kZXgpO1xuXG5cdFx0XHRcdFx0XHQvLyBTYXZlIHNvcnRpbmdcblx0XHRcdFx0XHRcdHRoaXMuc2F2ZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cdFx0XHR0aGlzLl9udWxsaW5nKCk7XG5cdFx0fSxcblxuXHRcdF9udWxsaW5nOiBmdW5jdGlvbigpIHtcblx0XHRcdC8vIE51bGxpbmdcblx0XHRcdHJvb3RFbCA9XG5cdFx0XHRkcmFnRWwgPVxuXHRcdFx0cGFyZW50RWwgPVxuXHRcdFx0Z2hvc3RFbCA9XG5cdFx0XHRuZXh0RWwgPVxuXHRcdFx0Y2xvbmVFbCA9XG5cblx0XHRcdHNjcm9sbEVsID1cblx0XHRcdHNjcm9sbFBhcmVudEVsID1cblxuXHRcdFx0dGFwRXZ0ID1cblx0XHRcdHRvdWNoRXZ0ID1cblxuXHRcdFx0bW92ZWQgPVxuXHRcdFx0bmV3SW5kZXggPVxuXG5cdFx0XHRsYXN0RWwgPVxuXHRcdFx0bGFzdENTUyA9XG5cblx0XHRcdGFjdGl2ZUdyb3VwID1cblx0XHRcdFNvcnRhYmxlLmFjdGl2ZSA9IG51bGw7XG5cdFx0fSxcblxuXHRcdGhhbmRsZUV2ZW50OiBmdW5jdGlvbiAoLyoqRXZlbnQqL2V2dCkge1xuXHRcdFx0dmFyIHR5cGUgPSBldnQudHlwZTtcblxuXHRcdFx0aWYgKHR5cGUgPT09ICdkcmFnb3ZlcicgfHwgdHlwZSA9PT0gJ2RyYWdlbnRlcicpIHtcblx0XHRcdFx0aWYgKGRyYWdFbCkge1xuXHRcdFx0XHRcdHRoaXMuX29uRHJhZ092ZXIoZXZ0KTtcblx0XHRcdFx0XHRfZ2xvYmFsRHJhZ092ZXIoZXZ0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAodHlwZSA9PT0gJ2Ryb3AnIHx8IHR5cGUgPT09ICdkcmFnZW5kJykge1xuXHRcdFx0XHR0aGlzLl9vbkRyb3AoZXZ0KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cblx0XHQvKipcblx0XHQgKiBTZXJpYWxpemVzIHRoZSBpdGVtIGludG8gYW4gYXJyYXkgb2Ygc3RyaW5nLlxuXHRcdCAqIEByZXR1cm5zIHtTdHJpbmdbXX1cblx0XHQgKi9cblx0XHR0b0FycmF5OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgb3JkZXIgPSBbXSxcblx0XHRcdFx0ZWwsXG5cdFx0XHRcdGNoaWxkcmVuID0gdGhpcy5lbC5jaGlsZHJlbixcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdG4gPSBjaGlsZHJlbi5sZW5ndGgsXG5cdFx0XHRcdG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cblx0XHRcdGZvciAoOyBpIDwgbjsgaSsrKSB7XG5cdFx0XHRcdGVsID0gY2hpbGRyZW5baV07XG5cdFx0XHRcdGlmIChfY2xvc2VzdChlbCwgb3B0aW9ucy5kcmFnZ2FibGUsIHRoaXMuZWwpKSB7XG5cdFx0XHRcdFx0b3JkZXIucHVzaChlbC5nZXRBdHRyaWJ1dGUob3B0aW9ucy5kYXRhSWRBdHRyKSB8fCBfZ2VuZXJhdGVJZChlbCkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvcmRlcjtcblx0XHR9LFxuXG5cblx0XHQvKipcblx0XHQgKiBTb3J0cyB0aGUgZWxlbWVudHMgYWNjb3JkaW5nIHRvIHRoZSBhcnJheS5cblx0XHQgKiBAcGFyYW0gIHtTdHJpbmdbXX0gIG9yZGVyICBvcmRlciBvZiB0aGUgaXRlbXNcblx0XHQgKi9cblx0XHRzb3J0OiBmdW5jdGlvbiAob3JkZXIpIHtcblx0XHRcdHZhciBpdGVtcyA9IHt9LCByb290RWwgPSB0aGlzLmVsO1xuXG5cdFx0XHR0aGlzLnRvQXJyYXkoKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCwgaSkge1xuXHRcdFx0XHR2YXIgZWwgPSByb290RWwuY2hpbGRyZW5baV07XG5cblx0XHRcdFx0aWYgKF9jbG9zZXN0KGVsLCB0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlLCByb290RWwpKSB7XG5cdFx0XHRcdFx0aXRlbXNbaWRdID0gZWw7XG5cdFx0XHRcdH1cblx0XHRcdH0sIHRoaXMpO1xuXG5cdFx0XHRvcmRlci5mb3JFYWNoKGZ1bmN0aW9uIChpZCkge1xuXHRcdFx0XHRpZiAoaXRlbXNbaWRdKSB7XG5cdFx0XHRcdFx0cm9vdEVsLnJlbW92ZUNoaWxkKGl0ZW1zW2lkXSk7XG5cdFx0XHRcdFx0cm9vdEVsLmFwcGVuZENoaWxkKGl0ZW1zW2lkXSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cblxuXHRcdC8qKlxuXHRcdCAqIFNhdmUgdGhlIGN1cnJlbnQgc29ydGluZ1xuXHRcdCAqL1xuXHRcdHNhdmU6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzdG9yZSA9IHRoaXMub3B0aW9ucy5zdG9yZTtcblx0XHRcdHN0b3JlICYmIHN0b3JlLnNldCh0aGlzKTtcblx0XHR9LFxuXG5cblx0XHQvKipcblx0XHQgKiBGb3IgZWFjaCBlbGVtZW50IGluIHRoZSBzZXQsIGdldCB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IG1hdGNoZXMgdGhlIHNlbGVjdG9yIGJ5IHRlc3RpbmcgdGhlIGVsZW1lbnQgaXRzZWxmIGFuZCB0cmF2ZXJzaW5nIHVwIHRocm91Z2ggaXRzIGFuY2VzdG9ycyBpbiB0aGUgRE9NIHRyZWUuXG5cdFx0ICogQHBhcmFtICAge0hUTUxFbGVtZW50fSAgZWxcblx0XHQgKiBAcGFyYW0gICB7U3RyaW5nfSAgICAgICBbc2VsZWN0b3JdICBkZWZhdWx0OiBgb3B0aW9ucy5kcmFnZ2FibGVgXG5cdFx0ICogQHJldHVybnMge0hUTUxFbGVtZW50fG51bGx9XG5cdFx0ICovXG5cdFx0Y2xvc2VzdDogZnVuY3Rpb24gKGVsLCBzZWxlY3Rvcikge1xuXHRcdFx0cmV0dXJuIF9jbG9zZXN0KGVsLCBzZWxlY3RvciB8fCB0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlLCB0aGlzLmVsKTtcblx0XHR9LFxuXG5cblx0XHQvKipcblx0XHQgKiBTZXQvZ2V0IG9wdGlvblxuXHRcdCAqIEBwYXJhbSAgIHtzdHJpbmd9IG5hbWVcblx0XHQgKiBAcGFyYW0gICB7Kn0gICAgICBbdmFsdWVdXG5cdFx0ICogQHJldHVybnMgeyp9XG5cdFx0ICovXG5cdFx0b3B0aW9uOiBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcblx0XHRcdHZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zO1xuXG5cdFx0XHRpZiAodmFsdWUgPT09IHZvaWQgMCkge1xuXHRcdFx0XHRyZXR1cm4gb3B0aW9uc1tuYW1lXTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdGlvbnNbbmFtZV0gPSB2YWx1ZTtcblxuXHRcdFx0XHRpZiAobmFtZSA9PT0gJ2dyb3VwJykge1xuXHRcdFx0XHRcdF9wcmVwYXJlR3JvdXAob3B0aW9ucyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cblx0XHQvKipcblx0XHQgKiBEZXN0cm95XG5cdFx0ICovXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGVsID0gdGhpcy5lbDtcblxuXHRcdFx0ZWxbZXhwYW5kb10gPSBudWxsO1xuXG5cdFx0XHRfb2ZmKGVsLCAnbW91c2Vkb3duJywgdGhpcy5fb25UYXBTdGFydCk7XG5cdFx0XHRfb2ZmKGVsLCAndG91Y2hzdGFydCcsIHRoaXMuX29uVGFwU3RhcnQpO1xuXG5cdFx0XHRpZiAodGhpcy5uYXRpdmVEcmFnZ2FibGUpIHtcblx0XHRcdFx0X29mZihlbCwgJ2RyYWdvdmVyJywgdGhpcyk7XG5cdFx0XHRcdF9vZmYoZWwsICdkcmFnZW50ZXInLCB0aGlzKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGRyYWdnYWJsZSBhdHRyaWJ1dGVzXG5cdFx0XHRBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkcmFnZ2FibGVdJyksIGZ1bmN0aW9uIChlbCkge1xuXHRcdFx0XHRlbC5yZW1vdmVBdHRyaWJ1dGUoJ2RyYWdnYWJsZScpO1xuXHRcdFx0fSk7XG5cblx0XHRcdHRvdWNoRHJhZ092ZXJMaXN0ZW5lcnMuc3BsaWNlKHRvdWNoRHJhZ092ZXJMaXN0ZW5lcnMuaW5kZXhPZih0aGlzLl9vbkRyYWdPdmVyKSwgMSk7XG5cblx0XHRcdHRoaXMuX29uRHJvcCgpO1xuXG5cdFx0XHR0aGlzLmVsID0gZWwgPSBudWxsO1xuXHRcdH1cblx0fTtcblxuXG5cdGZ1bmN0aW9uIF9jbG9uZUhpZGUoc3RhdGUpIHtcblx0XHRpZiAoY2xvbmVFbCAmJiAoY2xvbmVFbC5zdGF0ZSAhPT0gc3RhdGUpKSB7XG5cdFx0XHRfY3NzKGNsb25lRWwsICdkaXNwbGF5Jywgc3RhdGUgPyAnbm9uZScgOiAnJyk7XG5cdFx0XHQhc3RhdGUgJiYgY2xvbmVFbC5zdGF0ZSAmJiByb290RWwuaW5zZXJ0QmVmb3JlKGNsb25lRWwsIGRyYWdFbCk7XG5cdFx0XHRjbG9uZUVsLnN0YXRlID0gc3RhdGU7XG5cdFx0fVxuXHR9XG5cblxuXHRmdW5jdGlvbiBfY2xvc2VzdCgvKipIVE1MRWxlbWVudCovZWwsIC8qKlN0cmluZyovc2VsZWN0b3IsIC8qKkhUTUxFbGVtZW50Ki9jdHgpIHtcblx0XHRpZiAoZWwpIHtcblx0XHRcdGN0eCA9IGN0eCB8fCBkb2N1bWVudDtcblxuXHRcdFx0ZG8ge1xuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0KHNlbGVjdG9yID09PSAnPionICYmIGVsLnBhcmVudE5vZGUgPT09IGN0eClcblx0XHRcdFx0XHR8fCBfbWF0Y2hlcyhlbCwgc2VsZWN0b3IpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiBlbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0d2hpbGUgKGVsICE9PSBjdHggJiYgKGVsID0gZWwucGFyZW50Tm9kZSkpO1xuXHRcdH1cblxuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblxuXHRmdW5jdGlvbiBfZ2xvYmFsRHJhZ092ZXIoLyoqRXZlbnQqL2V2dCkge1xuXHRcdGlmIChldnQuZGF0YVRyYW5zZmVyKSB7XG5cdFx0XHRldnQuZGF0YVRyYW5zZmVyLmRyb3BFZmZlY3QgPSAnbW92ZSc7XG5cdFx0fVxuXHRcdGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXHR9XG5cblxuXHRmdW5jdGlvbiBfb24oZWwsIGV2ZW50LCBmbikge1xuXHRcdGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGZuLCBmYWxzZSk7XG5cdH1cblxuXG5cdGZ1bmN0aW9uIF9vZmYoZWwsIGV2ZW50LCBmbikge1xuXHRcdGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGZuLCBmYWxzZSk7XG5cdH1cblxuXG5cdGZ1bmN0aW9uIF90b2dnbGVDbGFzcyhlbCwgbmFtZSwgc3RhdGUpIHtcblx0XHRpZiAoZWwpIHtcblx0XHRcdGlmIChlbC5jbGFzc0xpc3QpIHtcblx0XHRcdFx0ZWwuY2xhc3NMaXN0W3N0YXRlID8gJ2FkZCcgOiAncmVtb3ZlJ10obmFtZSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0dmFyIGNsYXNzTmFtZSA9ICgnICcgKyBlbC5jbGFzc05hbWUgKyAnICcpLnJlcGxhY2UoUlNQQUNFLCAnICcpLnJlcGxhY2UoJyAnICsgbmFtZSArICcgJywgJyAnKTtcblx0XHRcdFx0ZWwuY2xhc3NOYW1lID0gKGNsYXNzTmFtZSArIChzdGF0ZSA/ICcgJyArIG5hbWUgOiAnJykpLnJlcGxhY2UoUlNQQUNFLCAnICcpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cblx0ZnVuY3Rpb24gX2NzcyhlbCwgcHJvcCwgdmFsKSB7XG5cdFx0dmFyIHN0eWxlID0gZWwgJiYgZWwuc3R5bGU7XG5cblx0XHRpZiAoc3R5bGUpIHtcblx0XHRcdGlmICh2YWwgPT09IHZvaWQgMCkge1xuXHRcdFx0XHRpZiAoZG9jdW1lbnQuZGVmYXVsdFZpZXcgJiYgZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSkge1xuXHRcdFx0XHRcdHZhbCA9IGRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoZWwsICcnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmIChlbC5jdXJyZW50U3R5bGUpIHtcblx0XHRcdFx0XHR2YWwgPSBlbC5jdXJyZW50U3R5bGU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gcHJvcCA9PT0gdm9pZCAwID8gdmFsIDogdmFsW3Byb3BdO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGlmICghKHByb3AgaW4gc3R5bGUpKSB7XG5cdFx0XHRcdFx0cHJvcCA9ICctd2Via2l0LScgKyBwcm9wO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0c3R5bGVbcHJvcF0gPSB2YWwgKyAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgPyAnJyA6ICdweCcpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cblx0ZnVuY3Rpb24gX2ZpbmQoY3R4LCB0YWdOYW1lLCBpdGVyYXRvcikge1xuXHRcdGlmIChjdHgpIHtcblx0XHRcdHZhciBsaXN0ID0gY3R4LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ05hbWUpLCBpID0gMCwgbiA9IGxpc3QubGVuZ3RoO1xuXG5cdFx0XHRpZiAoaXRlcmF0b3IpIHtcblx0XHRcdFx0Zm9yICg7IGkgPCBuOyBpKyspIHtcblx0XHRcdFx0XHRpdGVyYXRvcihsaXN0W2ldLCBpKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbGlzdDtcblx0XHR9XG5cblx0XHRyZXR1cm4gW107XG5cdH1cblxuXG5cblx0ZnVuY3Rpb24gX2Rpc3BhdGNoRXZlbnQoc29ydGFibGUsIHJvb3RFbCwgbmFtZSwgdGFyZ2V0RWwsIGZyb21FbCwgc3RhcnRJbmRleCwgbmV3SW5kZXgpIHtcblx0XHR2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JyksXG5cdFx0XHRvcHRpb25zID0gKHNvcnRhYmxlIHx8IHJvb3RFbFtleHBhbmRvXSkub3B0aW9ucyxcblx0XHRcdG9uTmFtZSA9ICdvbicgKyBuYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zdWJzdHIoMSk7XG5cblx0XHRldnQuaW5pdEV2ZW50KG5hbWUsIHRydWUsIHRydWUpO1xuXG5cdFx0ZXZ0LnRvID0gcm9vdEVsO1xuXHRcdGV2dC5mcm9tID0gZnJvbUVsIHx8IHJvb3RFbDtcblx0XHRldnQuaXRlbSA9IHRhcmdldEVsIHx8IHJvb3RFbDtcblx0XHRldnQuY2xvbmUgPSBjbG9uZUVsO1xuXG5cdFx0ZXZ0Lm9sZEluZGV4ID0gc3RhcnRJbmRleDtcblx0XHRldnQubmV3SW5kZXggPSBuZXdJbmRleDtcblxuXHRcdHJvb3RFbC5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cblx0XHRpZiAob3B0aW9uc1tvbk5hbWVdKSB7XG5cdFx0XHRvcHRpb25zW29uTmFtZV0uY2FsbChzb3J0YWJsZSwgZXZ0KTtcblx0XHR9XG5cdH1cblxuXG5cdGZ1bmN0aW9uIF9vbk1vdmUoZnJvbUVsLCB0b0VsLCBkcmFnRWwsIGRyYWdSZWN0LCB0YXJnZXRFbCwgdGFyZ2V0UmVjdCkge1xuXHRcdHZhciBldnQsXG5cdFx0XHRzb3J0YWJsZSA9IGZyb21FbFtleHBhbmRvXSxcblx0XHRcdG9uTW92ZUZuID0gc29ydGFibGUub3B0aW9ucy5vbk1vdmUsXG5cdFx0XHRyZXRWYWw7XG5cblx0XHRldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcblx0XHRldnQuaW5pdEV2ZW50KCdtb3ZlJywgdHJ1ZSwgdHJ1ZSk7XG5cblx0XHRldnQudG8gPSB0b0VsO1xuXHRcdGV2dC5mcm9tID0gZnJvbUVsO1xuXHRcdGV2dC5kcmFnZ2VkID0gZHJhZ0VsO1xuXHRcdGV2dC5kcmFnZ2VkUmVjdCA9IGRyYWdSZWN0O1xuXHRcdGV2dC5yZWxhdGVkID0gdGFyZ2V0RWwgfHwgdG9FbDtcblx0XHRldnQucmVsYXRlZFJlY3QgPSB0YXJnZXRSZWN0IHx8IHRvRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHRmcm9tRWwuZGlzcGF0Y2hFdmVudChldnQpO1xuXG5cdFx0aWYgKG9uTW92ZUZuKSB7XG5cdFx0XHRyZXRWYWwgPSBvbk1vdmVGbi5jYWxsKHNvcnRhYmxlLCBldnQpO1xuXHRcdH1cblxuXHRcdHJldHVybiByZXRWYWw7XG5cdH1cblxuXG5cdGZ1bmN0aW9uIF9kaXNhYmxlRHJhZ2dhYmxlKGVsKSB7XG5cdFx0ZWwuZHJhZ2dhYmxlID0gZmFsc2U7XG5cdH1cblxuXG5cdGZ1bmN0aW9uIF91bnNpbGVudCgpIHtcblx0XHRfc2lsZW50ID0gZmFsc2U7XG5cdH1cblxuXG5cdC8qKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR8ZmFsc2V9ICovXG5cdGZ1bmN0aW9uIF9naG9zdElzTGFzdChlbCwgZXZ0KSB7XG5cdFx0dmFyIGxhc3RFbCA9IGVsLmxhc3RFbGVtZW50Q2hpbGQsXG5cdFx0XHRcdHJlY3QgPSBsYXN0RWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHRyZXR1cm4gKChldnQuY2xpZW50WSAtIChyZWN0LnRvcCArIHJlY3QuaGVpZ2h0KSA+IDUpIHx8IChldnQuY2xpZW50WCAtIChyZWN0LnJpZ2h0ICsgcmVjdC53aWR0aCkgPiA1KSkgJiYgbGFzdEVsOyAvLyBtaW4gZGVsdGFcblx0fVxuXG5cblx0LyoqXG5cdCAqIEdlbmVyYXRlIGlkXG5cdCAqIEBwYXJhbSAgIHtIVE1MRWxlbWVudH0gZWxcblx0ICogQHJldHVybnMge1N0cmluZ31cblx0ICogQHByaXZhdGVcblx0ICovXG5cdGZ1bmN0aW9uIF9nZW5lcmF0ZUlkKGVsKSB7XG5cdFx0dmFyIHN0ciA9IGVsLnRhZ05hbWUgKyBlbC5jbGFzc05hbWUgKyBlbC5zcmMgKyBlbC5ocmVmICsgZWwudGV4dENvbnRlbnQsXG5cdFx0XHRpID0gc3RyLmxlbmd0aCxcblx0XHRcdHN1bSA9IDA7XG5cblx0XHR3aGlsZSAoaS0tKSB7XG5cdFx0XHRzdW0gKz0gc3RyLmNoYXJDb2RlQXQoaSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN1bS50b1N0cmluZygzNik7XG5cdH1cblxuXHQvKipcblx0ICogUmV0dXJucyB0aGUgaW5kZXggb2YgYW4gZWxlbWVudCB3aXRoaW4gaXRzIHBhcmVudCBmb3IgYSBzZWxlY3RlZCBzZXQgb2Zcblx0ICogZWxlbWVudHNcblx0ICogQHBhcmFtICB7SFRNTEVsZW1lbnR9IGVsXG5cdCAqIEBwYXJhbSAge3NlbGVjdG9yfSBzZWxlY3RvclxuXHQgKiBAcmV0dXJuIHtudW1iZXJ9XG5cdCAqL1xuXHRmdW5jdGlvbiBfaW5kZXgoZWwsIHNlbGVjdG9yKSB7XG5cdFx0dmFyIGluZGV4ID0gMDtcblxuXHRcdGlmICghZWwgfHwgIWVsLnBhcmVudE5vZGUpIHtcblx0XHRcdHJldHVybiAtMTtcblx0XHR9XG5cblx0XHR3aGlsZSAoZWwgJiYgKGVsID0gZWwucHJldmlvdXNFbGVtZW50U2libGluZykpIHtcblx0XHRcdGlmIChlbC5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpICE9PSAnVEVNUExBVEUnXG5cdFx0XHRcdFx0JiYgX21hdGNoZXMoZWwsIHNlbGVjdG9yKSkge1xuXHRcdFx0XHRpbmRleCsrO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBpbmRleDtcblx0fVxuXG5cdGZ1bmN0aW9uIF9tYXRjaGVzKC8qKkhUTUxFbGVtZW50Ki9lbCwgLyoqU3RyaW5nKi9zZWxlY3Rvcikge1xuXHRcdGlmIChlbCkge1xuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zcGxpdCgnLicpO1xuXG5cdFx0XHR2YXIgdGFnID0gc2VsZWN0b3Iuc2hpZnQoKS50b1VwcGVyQ2FzZSgpLFxuXHRcdFx0XHRyZSA9IG5ldyBSZWdFeHAoJ1xcXFxzKCcgKyBzZWxlY3Rvci5qb2luKCd8JykgKyAnKSg/PVxcXFxzKScsICdnJyk7XG5cblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdCh0YWcgPT09ICcnIHx8IGVsLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT0gdGFnKSAmJlxuXHRcdFx0XHQoIXNlbGVjdG9yLmxlbmd0aCB8fCAoKCcgJyArIGVsLmNsYXNzTmFtZSArICcgJykubWF0Y2gocmUpIHx8IFtdKS5sZW5ndGggPT0gc2VsZWN0b3IubGVuZ3RoKVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRmdW5jdGlvbiBfdGhyb3R0bGUoY2FsbGJhY2ssIG1zKSB7XG5cdFx0dmFyIGFyZ3MsIF90aGlzO1xuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmIChhcmdzID09PSB2b2lkIDApIHtcblx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cztcblx0XHRcdFx0X3RoaXMgPSB0aGlzO1xuXG5cdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdGlmIChhcmdzLmxlbmd0aCA9PT0gMSkge1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2suY2FsbChfdGhpcywgYXJnc1swXSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNhbGxiYWNrLmFwcGx5KF90aGlzLCBhcmdzKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRhcmdzID0gdm9pZCAwO1xuXHRcdFx0XHR9LCBtcyk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdGZ1bmN0aW9uIF9leHRlbmQoZHN0LCBzcmMpIHtcblx0XHRpZiAoZHN0ICYmIHNyYykge1xuXHRcdFx0Zm9yICh2YXIga2V5IGluIHNyYykge1xuXHRcdFx0XHRpZiAoc3JjLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHRcdFx0XHRkc3Rba2V5XSA9IHNyY1trZXldO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRzdDtcblx0fVxuXG5cblx0Ly8gRXhwb3J0IHV0aWxzXG5cdFNvcnRhYmxlLnV0aWxzID0ge1xuXHRcdG9uOiBfb24sXG5cdFx0b2ZmOiBfb2ZmLFxuXHRcdGNzczogX2Nzcyxcblx0XHRmaW5kOiBfZmluZCxcblx0XHRpczogZnVuY3Rpb24gKGVsLCBzZWxlY3Rvcikge1xuXHRcdFx0cmV0dXJuICEhX2Nsb3Nlc3QoZWwsIHNlbGVjdG9yLCBlbCk7XG5cdFx0fSxcblx0XHRleHRlbmQ6IF9leHRlbmQsXG5cdFx0dGhyb3R0bGU6IF90aHJvdHRsZSxcblx0XHRjbG9zZXN0OiBfY2xvc2VzdCxcblx0XHR0b2dnbGVDbGFzczogX3RvZ2dsZUNsYXNzLFxuXHRcdGluZGV4OiBfaW5kZXhcblx0fTtcblxuXG5cdC8qKlxuXHQgKiBDcmVhdGUgc29ydGFibGUgaW5zdGFuY2Vcblx0ICogQHBhcmFtIHtIVE1MRWxlbWVudH0gIGVsXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSAgICAgIFtvcHRpb25zXVxuXHQgKi9cblx0U29ydGFibGUuY3JlYXRlID0gZnVuY3Rpb24gKGVsLCBvcHRpb25zKSB7XG5cdFx0cmV0dXJuIG5ldyBTb3J0YWJsZShlbCwgb3B0aW9ucyk7XG5cdH07XG5cblxuXHQvLyBFeHBvcnRcblx0U29ydGFibGUudmVyc2lvbiA9ICcxLjQuMic7XG5cdHJldHVybiBTb3J0YWJsZTtcbn0pO1xuIiwiLyoqXG4gKiBqUXVlcnkgcGx1Z2luIGZvciBTb3J0YWJsZVxuICogQGF1dGhvclx0UnViYVhhICAgPHRyYXNoQHJ1YmF4YS5vcmc+XG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuKGZ1bmN0aW9uIChmYWN0b3J5KSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuXHRcdGRlZmluZShbXCJqcXVlcnlcIl0sIGZhY3RvcnkpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdC8qIGpzaGludCBzdWI6dHJ1ZSAqL1xuXHRcdGZhY3RvcnkoalF1ZXJ5KTtcblx0fVxufSkoZnVuY3Rpb24gKCQpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblxuXHQvKiBDT0RFICovXG5cblxuXHQvKipcblx0ICogalF1ZXJ5IHBsdWdpbiBmb3IgU29ydGFibGVcblx0ICogQHBhcmFtICAge09iamVjdHxTdHJpbmd9IG9wdGlvbnNcblx0ICogQHBhcmFtICAgey4uKn0gICAgICAgICAgIFthcmdzXVxuXHQgKiBAcmV0dXJucyB7alF1ZXJ5fCp9XG5cdCAqL1xuXHQkLmZuLnNvcnRhYmxlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0XHR2YXIgcmV0VmFsLFxuXHRcdFx0YXJncyA9IGFyZ3VtZW50cztcblxuXHRcdHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgJGVsID0gJCh0aGlzKSxcblx0XHRcdFx0c29ydGFibGUgPSAkZWwuZGF0YSgnc29ydGFibGUnKTtcblxuXHRcdFx0aWYgKCFzb3J0YWJsZSAmJiAob3B0aW9ucyBpbnN0YW5jZW9mIE9iamVjdCB8fCAhb3B0aW9ucykpIHtcblx0XHRcdFx0c29ydGFibGUgPSBuZXcgU29ydGFibGUodGhpcywgb3B0aW9ucyk7XG5cdFx0XHRcdCRlbC5kYXRhKCdzb3J0YWJsZScsIHNvcnRhYmxlKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHNvcnRhYmxlKSB7XG5cdFx0XHRcdGlmIChvcHRpb25zID09PSAnd2lkZ2V0Jykge1xuXHRcdFx0XHRcdHJldHVybiBzb3J0YWJsZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmIChvcHRpb25zID09PSAnZGVzdHJveScpIHtcblx0XHRcdFx0XHRzb3J0YWJsZS5kZXN0cm95KCk7XG5cdFx0XHRcdFx0JGVsLnJlbW92ZURhdGEoJ3NvcnRhYmxlJyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZiAodHlwZW9mIHNvcnRhYmxlW29wdGlvbnNdID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRcdFx0cmV0VmFsID0gc29ydGFibGVbb3B0aW9uc10uYXBwbHkoc29ydGFibGUsIFtdLnNsaWNlLmNhbGwoYXJncywgMSkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYgKG9wdGlvbnMgaW4gc29ydGFibGUub3B0aW9ucykge1xuXHRcdFx0XHRcdHJldFZhbCA9IHNvcnRhYmxlLm9wdGlvbi5hcHBseShzb3J0YWJsZSwgYXJncyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHJldHVybiAocmV0VmFsID09PSB2b2lkIDApID8gdGhpcyA6IHJldFZhbDtcblx0fTtcbn0pO1xuIiwiKGZ1bmN0aW9uKCQsZXhwb3J0cyl7XG5cdFN0cmluZy5wcm90b3R5cGUucmVtb3ZlQWNjZW50cyA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIHJlbW92YWxNYXAgPSB7XG5cdFx0XHQnQScgIDogL1tB4pK277yhw4DDgcOC4bqm4bqk4bqq4bqow4PEgMSC4bqw4bqu4bq04bqyyKbHoMOEx57huqLDhce6x43IgMiC4bqg4bqs4bq24biAxIRdL2csXG5cdFx0XHQnQUEnIDogL1vqnLJdL2csXG5cdFx0XHQnQUUnIDogL1vDhse8x6JdL2csXG5cdFx0XHQnQU8nIDogL1vqnLRdL2csXG5cdFx0XHQnQVUnIDogL1vqnLZdL2csXG5cdFx0XHQnQVYnIDogL1vqnLjqnLpdL2csXG5cdFx0XHQnQVknIDogL1vqnLxdL2csXG5cdFx0XHQnQicgIDogL1tC4pK377yi4biC4biE4biGyYPGgsaBXS9nLFxuXHRcdFx0J0MnICA6IC9bQ+KSuO+8o8SGxIjEisSMw4fhuIjGh8i76py+XS9nLFxuXHRcdFx0J0QnICA6IC9bROKSue+8pOG4isSO4biM4biQ4biS4biOxJDGi8aKxonqnbldL2csXG5cdFx0XHQnRFonIDogL1vHsceEXS9nLFxuXHRcdFx0J0R6JyA6IC9bx7LHhV0vZyxcblx0XHRcdCdFJyAgOiAvW0XikrrvvKXDiMOJw4rhu4Dhur7hu4Thu4LhurzEkuG4lOG4lsSUxJbDi+G6usSayITIhuG6uOG7hsio4bicxJjhuJjhuJrGkMaOXS9nLFxuXHRcdFx0J0YnICA6IC9bRuKSu++8puG4nsaR6p27XS9nLFxuXHRcdFx0J0cnICA6IC9bR+KSvO+8p8e0xJzhuKDEnsSgx6bEosekxpPqnqDqnb3qnb5dL2csXG5cdFx0XHQnSCcgIDogL1tI4pK977yoxKThuKLhuKbInuG4pOG4qOG4qsSm4rGn4rG16p6NXS9nLFxuXHRcdFx0J0knICA6IC9bSeKSvu+8qcOMw43DjsSoxKrErMSww4/huK7hu4jHj8iIyIrhu4rEruG4rMaXXS9nLFxuXHRcdFx0J0onICA6IC9bSuKSv++8qsS0yYhdL2csXG5cdFx0XHQnSycgIDogL1tL4pOA77yr4biwx6jhuLLEtuG4tMaY4rGp6p2A6p2C6p2E6p6iXS9nLFxuXHRcdFx0J0wnICA6IC9bTOKTge+8rMS/xLnEveG4tuG4uMS74bi84bi6xYHIveKxouKxoOqdiOqdhuqegF0vZyxcblx0XHRcdCdMSicgOiAvW8eHXS9nLFxuXHRcdFx0J0xqJyA6IC9bx4hdL2csXG5cdFx0XHQnTScgIDogL1tN4pOC77yt4bi+4bmA4bmC4rGuxpxdL2csXG5cdFx0XHQnTicgIDogL1tO4pOD77yux7jFg8OR4bmExYfhuYbFheG5iuG5iMigxp3qnpDqnqRdL2csXG5cdFx0XHQnTkonIDogL1vHil0vZyxcblx0XHRcdCdOaicgOiAvW8eLXS9nLFxuXHRcdFx0J08nICA6IC9bT+KThO+8r8OSw5PDlOG7kuG7kOG7luG7lMOV4bmMyKzhuY7FjOG5kOG5ksWOyK7IsMOWyKrhu47FkMeRyIzIjsag4buc4bua4bug4bue4bui4buM4buYx6rHrMOYx77Ghsaf6p2K6p2MXS9nLFxuXHRcdFx0J09JJyA6IC9bxqJdL2csXG5cdFx0XHQnT08nIDogL1vqnY5dL2csXG5cdFx0XHQnT1UnIDogL1vIol0vZyxcblx0XHRcdCdQJyAgOiAvW1Dik4XvvLDhuZThuZbGpOKxo+qdkOqdkuqdlF0vZyxcblx0XHRcdCdRJyAgOiAvW1Hik4bvvLHqnZbqnZjJil0vZyxcblx0XHRcdCdSJyAgOiAvW1Lik4fvvLLFlOG5mMWYyJDIkuG5muG5nMWW4bmeyYzisaTqnZrqnqbqnoJdL2csXG5cdFx0XHQnUycgIDogL1tT4pOI77yz4bqexZrhuaTFnOG5oMWg4bmm4bmi4bmoyJjFnuKxvuqeqOqehF0vZyxcblx0XHRcdCdUJyAgOiAvW1Tik4nvvLThuarFpOG5rMiaxaLhubDhua7Fpsasxq7Ivuqehl0vZyxcblx0XHRcdCdUWicgOiAvW+qcqF0vZyxcblx0XHRcdCdVJyAgOiAvW1Xik4rvvLXDmcOaw5vFqOG5uMWq4bm6xazDnMebx5fHlceZ4bumxa7FsMeTyJTIlsav4buq4buo4buu4bus4buw4buk4bmyxbLhubbhubTJhF0vZyxcblx0XHRcdCdWJyAgOiAvW1bik4vvvLbhubzhub7GsuqdnsmFXS9nLFxuXHRcdFx0J1ZZJyA6IC9b6p2gXS9nLFxuXHRcdFx0J1cnICA6IC9bV+KTjO+8t+G6gOG6gsW04bqG4bqE4bqI4rGyXS9nLFxuXHRcdFx0J1gnICA6IC9bWOKTje+8uOG6iuG6jF0vZyxcblx0XHRcdCdZJyAgOiAvW1nik47vvLnhu7LDncW24bu4yLLhuo7FuOG7tuG7tMazyY7hu75dL2csXG5cdFx0XHQnWicgIDogL1ta4pOP77y6xbnhupDFu8W94bqS4bqUxrXIpOKxv+Kxq+qdol0vZyxcblx0XHRcdCdhJyAgOiAvW2Hik5DvvYHhuprDoMOhw6LhuqfhuqXhuqvhuqnDo8SBxIPhurHhuq/hurXhurPIp8ehw6THn+G6o8Olx7vHjsiByIPhuqHhuq3hurfhuIHEheKxpcmQXS9nLFxuXHRcdFx0J2FhJyA6IC9b6pyzXS9nLFxuXHRcdFx0J2FlJyA6IC9bw6bHvcejXS9nLFxuXHRcdFx0J2FvJyA6IC9b6py1XS9nLFxuXHRcdFx0J2F1JyA6IC9b6py3XS9nLFxuXHRcdFx0J2F2JyA6IC9b6py56py7XS9nLFxuXHRcdFx0J2F5JyA6IC9b6py9XS9nLFxuXHRcdFx0J2InICA6IC9bYuKTke+9guG4g+G4heG4h8aAxoPJk10vZyxcblx0XHRcdCdjJyAgOiAvW2Pik5LvvYPEh8SJxIvEjcOn4biJxojIvOqcv+KGhF0vZyxcblx0XHRcdCdkJyAgOiAvW2Tik5PvvYThuIvEj+G4jeG4keG4k+G4j8SRxozJlsmX6p26XS9nLFxuXHRcdFx0J2R6JyA6IC9bx7PHhl0vZyxcblx0XHRcdCdlJyAgOiAvW2Xik5TvvYXDqMOpw6rhu4Hhur/hu4Xhu4Phur3Ek+G4leG4l8SVxJfDq+G6u8SbyIXIh+G6ueG7h8ip4bidxJnhuJnhuJvJh8mbx51dL2csXG5cdFx0XHQnZicgIDogL1tm4pOV772G4bifxpLqnbxdL2csXG5cdFx0XHQnZycgIDogL1tn4pOW772Hx7XEneG4ocSfxKHHp8Sjx6XJoOqeoeG1ueqdv10vZyxcblx0XHRcdCdoJyAgOiAvW2jik5fvvYjEpeG4o+G4p8if4bil4bip4bir4bqWxKfisajisbbJpV0vZyxcblx0XHRcdCdodicgOiAvW8aVXS9nLFxuXHRcdFx0J2knICA6IC9baeKTmO+9icOsw63DrsSpxKvErcOv4biv4buJx5DIiciL4buLxK/huK3JqMSxXS9nLFxuXHRcdFx0J2onICA6IC9bauKTme+9isS1x7DJiV0vZyxcblx0XHRcdCdrJyAgOiAvW2vik5rvvYvhuLHHqeG4s8S34bi1xpnisarqnYHqnYPqnYXqnqNdL2csXG5cdFx0XHQnbCcgIDogL1ts4pOb772MxYDEusS+4bi34bi5xLzhuL3huLvFv8WCxprJq+Kxoeqdieqegeqdh10vZyxcblx0XHRcdCdsaicgOiAvW8eJXS9nLFxuXHRcdFx0J20nICA6IC9bbeKTnO+9jeG4v+G5geG5g8mxya9dL2csXG5cdFx0XHQnbicgIDogL1tu4pOd772Ox7nFhMOx4bmFxYjhuYfFhuG5i+G5icaeybLFieqekeqepV0vZyxcblx0XHRcdCduaicgOiAvW8eMXS9nLFxuXHRcdFx0J28nICA6IC9bb+KTnu+9j8Oyw7PDtOG7k+G7keG7l+G7lcO14bmNyK3huY/FjeG5keG5k8WPyK/IscO2yKvhu4/FkceSyI3Ij8ah4bud4bub4buh4buf4buj4buN4buZx6vHrcO4x7/JlOqdi+qdjcm1XS9nLFxuXHRcdFx0J29pJyA6IC9bxqNdL2csXG5cdFx0XHQnb3UnIDogL1vIo10vZyxcblx0XHRcdCdvbycgOiAvW+qdj10vZyxcblx0XHRcdCdwJyAgOiAvW3Dik5/vvZDhuZXhuZfGpeG1veqdkeqdk+qdlV0vZyxcblx0XHRcdCdxJyAgOiAvW3Hik6DvvZHJi+qdl+qdmV0vZyxcblx0XHRcdCdyJyAgOiAvW3Lik6HvvZLFleG5mcWZyJHIk+G5m+G5ncWX4bmfyY3Jveqdm+qep+qeg10vZyxcblx0XHRcdCdzJyAgOiAvW3Pik6LvvZPDn8Wb4bmlxZ3huaHFoeG5p+G5o+G5qciZxZ/Iv+qeqeqeheG6m10vZyxcblx0XHRcdCd0JyAgOiAvW3Tik6PvvZThuavhupfFpeG5rcibxaPhubHhua/Fp8atyojisabqnoddL2csXG5cdFx0XHQndHonIDogL1vqnKldL2csXG5cdFx0XHQndScgIDogL1t14pOk772Vw7nDusO7xanhubnFq+G5u8Wtw7zHnMeYx5bHmuG7p8WvxbHHlMiVyJfGsOG7q+G7qeG7r+G7reG7seG7peG5s8Wz4bm34bm1yoldL2csXG5cdFx0XHQndicgIDogL1t24pOl772W4bm94bm/yovqnZ/KjF0vZyxcblx0XHRcdCd2eScgOiAvW+qdoV0vZyxcblx0XHRcdCd3JyAgOiAvW3fik6bvvZfhuoHhuoPFteG6h+G6heG6mOG6ieKxs10vZyxcblx0XHRcdCd4JyAgOiAvW3jik6fvvZjhuovhuo1dL2csXG5cdFx0XHQneScgIDogL1t54pOo772Z4buzw73Ft+G7uciz4bqPw7/hu7fhupnhu7XGtMmP4bu/XS9nLFxuXHRcdFx0J3onICA6IC9beuKTqe+9msW64bqRxbzFvuG6k+G6lca2yKXJgOKxrOqdo10vZyxcblx0XHR9O1xuXG5cdFx0dmFyIHN0ciA9IHRoaXM7XG5cblx0XHRmb3IodmFyIGxhdGluIGluIHJlbW92YWxNYXApIHtcblx0XHQgIHZhciBub25MYXRpbiA9IHJlbW92YWxNYXBbbGF0aW5dO1xuXHRcdCAgc3RyID0gc3RyLnJlcGxhY2Uobm9uTGF0aW4gLCBsYXRpbik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN0cjtcblx0fVxuXG5cdHZhciBvcHRpb25zXHRcdD0gZ3JpZGJ1aWxkZXIub3B0aW9ucyxcblx0XHRmZWF0dXJlc1x0PSBncmlkYnVpbGRlci5vcHRpb25zLmZlYXR1cmVzLFxuXHRcdGwxMG5cdFx0PSBncmlkYnVpbGRlci5sMTBuLFxuXHRcdGdyaWRcdFx0PSBleHBvcnRzLmdyaWQgPSB7fTtcblxuXG5cdGV4cG9ydHMuZ3JpZC5tb2RlbFx0XHQ9IHt9O1xuXHRleHBvcnRzLmdyaWQudmlld1x0XHQ9IHtcblx0XHR1aVx0XHQ6IHt9LFxuXHRcdGVsZW1lbnRcdDoge31cblx0fTtcblx0ZXhwb3J0cy5ncmlkLmNvbnRyb2xsZXJcdD0ge307XG5cdGV4cG9ydHMuZ3JpZC50ZW1wbGF0ZXNcdD0ge307XG5cdGV4cG9ydHMuZ3JpZC51dGlsc1x0XHQ9IHtcblx0XHRzYW5pdGl6ZVRpdGxlOiBmdW5jdGlvbiggc3RyICl7XG5cdFx0XHRzdHIgPSBzdHIucmVtb3ZlQWNjZW50cygpLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRzdHIgPSBzdHIucmVwbGFjZSgvW15hLXowLTldL2csJy0nKTtcblx0XHRcdHN0ciA9IHN0ci5yZXBsYWNlKC8tKy9nLCctJyk7XG5cdFx0XHRzdHIgPSBzdHIucmVwbGFjZSgvLSskL2csJycpO1xuXHRcdFx0cmV0dXJuIHN0cjtcblx0XHR9LFxuXHR9XG5cblxuXHRleHBvcnRzLmdyaWQuY29udHJvbGxlci5HcmlkID0gZnVuY3Rpb24oICkge1xuXHRcdHRoaXMuJGlucHV0XHQ9ICQoJ1tuYW1lPVwiX2dyaWRfZGF0YVwiXScpO1xuXHRcdHRoaXMucG9zdElEXHQ9ICQoJ1tuYW1lPVwicG9zdF9JRFwiXScpLnZhbCgpO1xuXHRcdHZhciBzZWxmXHQ9IHRoaXMsXG5cdFx0XHRyYXdcdFx0PSB0aGlzLiRpbnB1dC5hdHRyKCd2YWx1ZScpXG5cdFx0XHRkYXRhXHQ9IEpTT04ucGFyc2UoIHJhdyApLFxuXHRcdFx0dHlwZXNcdD0gWyAnZ3JpZCcsICdjb250YWluZXInLCAncm93JywgJ2NlbGwnLCAnd2lkZ2V0JyBdOy8vIHx8IFtdO1xuXHRcdFxuXHRcdHRoaXMubW9kZWxcdFx0PSBuZXcgZ3JpZC5tb2RlbC5HcmlkT2JqZWN0KCBkYXRhICk7XG5cdFx0Ly8gZml4IGl0ZW0gdHlwZXNcblx0XHR0aGlzLm1vZGVsLnJlY3Vyc2UoIGZ1bmN0aW9uKCBkZXB0aCApIHtcblx0XHRcdHRoaXMuc2V0KCAndHlwZScsIHR5cGVzW2RlcHRoXSApO1xuXHRcdH0pO1xuXHRcdHRoaXMuc3Vidmlld3NcdD0gbmV3IEJhY2tib25lLkNvbGxlY3Rpb24oW10pO1xuXHRcdHRoaXMuc2VsZWN0ZWRcdD0gZmFsc2U7XG5cblx0XHR0aGlzLmxpc3RlblRvKCB0aGlzLm1vZGVsLCAnY2hhbmdlJywgdGhpcy5vbkNoYW5nZU1vZGVsICk7XG5cblx0XHR0aGlzLnZpZXcgPSBuZXcgZXhwb3J0cy5ncmlkLnZpZXcudWkuRWRpdG9yKCB7XG5cdFx0XHRjb250cm9sbGVyOiB0aGlzLFxuXHRcdFx0bW9kZWw6IHRoaXMubW9kZWxcblx0XHR9ICk7XG5cdFx0dGhpcy52aWV3LnNldEFjdGl2ZUVkaXRvcigpO1xuXHRcdHRoaXMudmlldy4kZWwuaW5zZXJ0QWZ0ZXIoICcjd3AtY29udGVudC13cmFwJyApO1xuXHRcdHRoaXMudmlldy5yZW5kZXIoKTtcblx0XHR0aGlzLnZpZXcuJGVsLmZvY3VzKCk7XG5cblx0XHQkKGRvY3VtZW50KS5vbiggJ2NsaWNrJywgJ1t0eXBlPVwic3VibWl0XCJdJywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRzZWxmLm9uQ2hhbmdlTW9kZWwoKTtcblx0XHR9KTtcblxuXHR9O1xuXG5cdF8uZXh0ZW5kKCBleHBvcnRzLmdyaWQuY29udHJvbGxlci5HcmlkLnByb3RvdHlwZSwge1xuXHRcdHdoaWNoVmlldzpcdGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMudmlldy53aGljaFZpZXcoKTtcblx0XHR9LFxuXHRcdGdldFNlbGVjdGVkOlx0ZnVuY3Rpb24oIHdoYXQgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5zZWxlY3RlZDtcblx0XHR9LFxuXHRcdHNldFNlbGVjdGVkOlx0ZnVuY3Rpb24oIHdoYXQgKSB7XG5cdFx0XHR0aGlzLnNlbGVjdGVkID0gd2hhdDtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0b25DaGFuZ2VNb2RlbDpcdGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHZhbCA9IEpTT04uc3RyaW5naWZ5KCB0aGlzLm1vZGVsLnRvSlNPTigpICk7XG5cblx0XHRcdC8vIHB1c2ggdG8gdW5kbyFcblx0XHRcdHRoaXMuJGlucHV0LnZhbCggdmFsICk7XG5cblx0XHRcdGlmICggZmVhdHVyZXMuYXV0b3NhdmUgKSB7XG5cdFx0XHRcdHRoaXMuc2F2ZSggdmFsICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzYXZlOlx0XHRcdGZ1bmN0aW9uKCBkYXRhICkge1xuXHRcdFx0JC5hamF4KHtcblx0XHRcdFx0bWV0aG9kOiBcdCdwb3N0Jyxcblx0XHRcdFx0dXJsOiBcdFx0b3B0aW9ucy5hamF4dXJsLFxuXHRcdFx0XHRjb21wbGV0ZTpcdGZ1bmN0aW9uKHhocixzdGF0dXMpeyB9LFxuXHRcdFx0XHRzdWNjZXNzOiBcdGZ1bmN0aW9uKCBkYXRhLCBzdGF0dXMsIHhociApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGEuc3VjY2VzcyApIHtcblx0XHRcdFx0XHRcdC8vIFllYWghXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdC8vIHNob3cgbWVzc2FnZVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0ZGF0YToge1xuXHRcdFx0XHRcdGFjdGlvbjpcdFx0J2dyaWRidWlsZGVyLWF1dG9zYXZlJyxcblx0XHRcdFx0XHRub25jZTpcdFx0b3B0aW9ucy5hdXRvc2F2ZV9ub25jZSxcblx0XHRcdFx0XHRncmlkX2RhdGE6XHRkYXRhLFxuXHRcdFx0XHRcdHBvc3RfaWQ6XHR0aGlzLnBvc3RJRFxuXHRcdFx0XHR9LFxuXHRcdFx0fSk7XG5cdFx0XG5cdFx0fVxuXHR9LCBCYWNrYm9uZS5FdmVudHMpO1xuXG5cdF8uZXh0ZW5kKCBleHBvcnRzLmdyaWQuY29udHJvbGxlci5HcmlkLCBCYWNrYm9uZS5FdmVudHMpO1xuXG59KShqUXVlcnksd2luZG93KTsiLCIoZnVuY3Rpb24oICQsIGdyaWQgKXtcblx0dmFyIEdyaWRPYmplY3QsIEdyaWRDb2xsZWN0aW9uLFxuXHRcdG9wdGlvbnNcdD0gZ3JpZGJ1aWxkZXIub3B0aW9ucyxcblx0XHRsMTBuXHQ9IGdyaWRidWlsZGVyLmwxMG4sXG5cdFx0aWRcdFx0PSAwO1xuXHRcblx0R3JpZE9iamVjdCA9IGdyaWQubW9kZWwuR3JpZE9iamVjdCA9IEJhY2tib25lLk1vZGVsLmV4dGVuZCh7XG5cdFx0cGFyZW50OmZhbHNlLFxuXHRcdGxvY2tzOnt9LFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBkYXRhICkge1xuXHRcdFx0Xy5kZWZhdWx0cyggZGF0YSwgeyBpdGVtczogW10gfSApO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0dGhpcy5pdGVtcyA9IG5ldyBHcmlkQ29sbGVjdGlvbiggW10gKTtcblx0XHRcdHRoaXMuaXRlbXMucGFyZW50ID0gdGhpcztcblx0XHRcdHRoaXMucGFyZW50ID0gZmFsc2U7XG5cdFx0XHR0aGlzLmlkID0gJ29iaicgKyBpZCsrO1xuXG4vL1x0XHRcdHRoaXMuaXRlbXMub24oICdhZGQnLCB0aGlzLnNldEl0ZW1QYXJlbnQsIHRoaXMgKTtcblxuXHRcdFx0Xy5lYWNoKCBkYXRhLml0ZW1zLCBmdW5jdGlvbiggaXRlbSwgaSApIHtcblx0XHRcdFx0c2VsZi5pdGVtcy5hZGQoaXRlbSk7XG5cdFx0XHR9KTtcblx0XHRcdGRlbGV0ZShkYXRhLml0ZW1zKTtcblx0XHRcdEJhY2tib25lLk1vZGVsLnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9LFxuXHRcdHNldEl0ZW1QYXJlbnQ6IGZ1bmN0aW9uKGl0ZW0pIHtcblx0XHRcdGl0ZW0ucGFyZW50ID0gdGhpcztcblx0XHR9LFxuXHRcdHRvSlNPTjogZnVuY3Rpb24ob3B0aW9ucykge1xuXHRcdFx0dmFyIHJldCA9IEJhY2tib25lLk1vZGVsLnByb3RvdHlwZS50b0pTT04uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0cmV0Lml0ZW1zID0gdGhpcy5pdGVtcy50b0pTT04ob3B0aW9ucylcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fSxcblx0XHRcblx0XHRyZWN1cnNlOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBjYiA9IGFyZ3VtZW50c1swXSxcblx0XHRcdFx0ZCA9IGFyZ3VtZW50c1sxXSB8fCAwO1xuXG5cdFx0XHRjYi5hcHBseSggdGhpcywgWyBkIF0gKTtcblxuXHRcdFx0dGhpcy5pdGVtcy5lYWNoKCBmdW5jdGlvbiggaXRlbSApIHtcbi8vXHRcdFx0XHRjb25zb2xlLmxvZyhhcmd1bWVudHMpO1xuXHRcdFx0XHRpdGVtLnJlY3Vyc2UoIGNiLCBkICsgMSApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9KTtcblxuXHRHcmlkQ29sbGVjdGlvbiA9IGdyaWQubW9kZWwuR3JpZENvbGxlY3Rpb24gPSBCYWNrYm9uZS5Db2xsZWN0aW9uLmV4dGVuZCh7XG5cdFx0bW9kZWw6R3JpZE9iamVjdCxcblx0XHRjb21wYXJhdG9yOiBmdW5jdGlvbihtb2RlbCkge1xuXHRcdFx0cmV0dXJuIG1vZGVsLmdldCgnaWR4Jyk7XG5cdFx0fSxcblx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG1vZGVscyA9IEJhY2tib25lLkNvbGxlY3Rpb24ucHJvdG90eXBlLmFkZC5hcHBseSggdGhpcywgYXJndW1lbnRzICksXG5cdFx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0bW9kZWxzQXJyID0gbW9kZWxzLmNvbnN0cnVjdG9yID09IEFycmF5ID8gbW9kZWxzIDogWyBtb2RlbHMgXTtcblx0XHRcdF8uZWFjaCggbW9kZWxzQXJyLCBmdW5jdGlvbiggbW9kZWwsIGkgKSB7XG5cdFx0XHRcdG1vZGVsLnBhcmVudCA9IHNlbGYucGFyZW50O1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gbW9kZWxzO1xuXHRcdH1cblx0fSk7XG5cdFxuXG5cblx0XG5cdEdyaWRUZW1wbGF0ZSA9IGdyaWQubW9kZWwuR3JpZFRlbXBsYXRlID0gQmFja2JvbmUuTW9kZWwuZXh0ZW5kKHtcblx0XHRzYXZlOiBmdW5jdGlvbiggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHQkLmFqYXgoe1xuXHRcdFx0XHRtZXRob2Q6IFx0J3Bvc3QnLFxuXHRcdFx0XHR1cmw6IFx0XHRvcHRpb25zLmFqYXh1cmwsXG5cdFx0XHRcdGNvbXBsZXRlOlx0ZnVuY3Rpb24oeGhyLHN0YXR1cyl7fSxcblx0XHRcdFx0c3VjY2VzczpcdGZ1bmN0aW9uKCBkYXRhLCBzdGF0dXMsIHhociApIHtcblx0XHRcdFx0XHRfLmVhY2goIGRhdGEsIGZ1bmN0aW9uKCB2YWx1ZSwgcHJvcCApeyBzZWxmLnNldCggcHJvcCwgdmFsdWUgKSB9ICk7XG5cdFx0XHRcdFx0c2VsZi50cmlnZ2VyKCdzeW5jJyk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGRhdGE6XHR7XG5cdFx0XHRcdFx0YWN0aW9uIDogdGhpcy5pc05ldygpID8gJ2dyaWRidWlsZGVyLWNyZWF0ZS10ZW1wbGF0ZScgOiAnZ3JpZGJ1aWxkZXItdXBkYXRlLXRlbXBsYXRlJyxcblx0XHRcdFx0XHRub25jZSAgOiB0aGlzLmlzTmV3KCkgPyBvcHRpb25zLmNyZWF0ZV90ZW1wbGF0ZV9ub25jZSA6IG9wdGlvbnMudXBkYXRlX3RlbXBsYXRlX25vbmNlLFxuXHRcdFx0XHRcdHRlbXBsYXRlOiBKU09OLnN0cmluZ2lmeSggdGhpcy50b0pTT04oKSApXG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCApIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdCQuYWpheCh7XG5cdFx0XHRcdG1ldGhvZDogXHQncG9zdCcsXG5cdFx0XHRcdHVybDogXHRcdG9wdGlvbnMuYWpheHVybCxcblx0XHRcdFx0Y29tcGxldGU6XHRmdW5jdGlvbih4aHIsc3RhdHVzKXt9LFxuXHRcdFx0XHRzdWNjZXNzOlx0ZnVuY3Rpb24oIGRhdGEsIHN0YXR1cywgeGhyICkge1xuXHRcdFx0XHRcdHNlbGYudHJpZ2dlcignZGVzdHJveScsIHNlbGYsIHNlbGYuY29sbGVjdGlvbiApO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRkYXRhOiB7XG5cdFx0XHRcdFx0YWN0aW9uIDogJ2dyaWRidWlsZGVyLWRlbGV0ZS10ZW1wbGF0ZScsXG5cdFx0XHRcdFx0bm9uY2UgIDogb3B0aW9ucy5kZWxldGVfdGVtcGxhdGVfbm9uY2UsXG5cdFx0XHRcdFx0dGVtcGxhdGU6IEpTT04uc3RyaW5naWZ5KCB0aGlzLnRvSlNPTigpIClcblx0XHRcdFx0fSxcblx0XHRcdH0pO1xuXHRcdH1cblx0fSk7XG5cblx0Xy5leHRlbmQoIGdyaWQudGVtcGxhdGVzLCB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHlwZSwgc2x1ZyApIHtcblx0XHRcdHR5cGUgPSB0eXBlLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZ3JpZC50ZW1wbGF0ZXNbdHlwZV0uX2J5SWRbIHNsdWcgXTtcblx0XHR9XG5cdH0pO1xuXHRcblx0Xy5lYWNoKCBvcHRpb25zLnRlbXBsYXRlcywgZnVuY3Rpb24oIHRlbXBsYXRlTGlzdCwgdHlwZSApIHtcblx0XHRncmlkLnRlbXBsYXRlc1t0eXBlXSA9IG5ldyBCYWNrYm9uZS5Db2xsZWN0aW9uKCk7XG5cdFx0Xy5lYWNoKCB0ZW1wbGF0ZUxpc3QsIGZ1bmN0aW9uKCB0cGwsIGtleSApIHtcblx0XHRcdHZhciB0ZW1wbGF0ZSA9IG5ldyBncmlkLm1vZGVsLkdyaWRUZW1wbGF0ZSggeyBcblx0XHRcdFx0bmFtZTogdHBsLm5hbWUsXG5cdFx0XHRcdHNsdWc6IHRwbC5zbHVnLFxuXHRcdFx0XHRkYXRhOiB0cGwuZGF0YSxcblx0XHRcdFx0dHlwZTogdHlwZVxuXHRcdFx0fSApO1xuXHRcdFx0dGVtcGxhdGUuc2V0KCAnaWQnLCB0cGwuc2x1ZyApO1xuXHRcdFx0Z3JpZC50ZW1wbGF0ZXNbdHlwZV0uYWRkKCB0ZW1wbGF0ZSApO1xuXHRcdH0pO1xuXHR9KTtcblxuXG59KShqUXVlcnksIHdpbmRvdy5ncmlkICk7IiwiKGZ1bmN0aW9uKCAkLCBncmlkICkge1xuXG5cdHZhciBQcm9tcHQsIERpYWxvZywgTW9kYWwsIFRvb2xiYXIsXG5cdFx0XG5cdFx0bDEwblx0XHQ9IGdyaWRidWlsZGVyLmwxMG4sXG5cdFx0b3B0aW9uc1x0XHQ9IGdyaWRidWlsZGVyLm9wdGlvbnMsXG5cdFx0ZmVhdHVyZXNcdD0gZ3JpZGJ1aWxkZXIub3B0aW9ucy5mZWF0dXJlcztcblxuXHRQcm9tcHQgPSBncmlkLnZpZXcudWkuUHJvbXB0ID0gd3AubWVkaWEuVmlldy5leHRlbmQoe1xuXHRcdHRhZ05hbWU6ICAgICdkaXYnLFxuXHRcdGNsYXNzTmFtZTogJ2dyaWQtcHJvbXB0Jyxcblx0XHR0ZW1wbGF0ZTogd3AudGVtcGxhdGUoJ2dyaWQtdWktcHJvbXB0JyksXG5cdFx0ZXZlbnRzOiB7XG5cdFx0XHQnY2xpY2sgLmJ0bi1jb25maXJtJzpcdCdjb25maXJtJyxcblx0XHRcdCdjbGljayAuYnRuLWNhbmNlbCc6XHQnY2xvc2UnXG5cdFx0fSxcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdF8uZGVmYXVsdHMoIG9wdGlvbnMsIHtcblx0XHRcdFx0ZGVmYXVsdFZhbHVlOiAnJyxcblx0XHRcdFx0dGl0bGU6ICcnLFxuXHRcdFx0XHRtZXNzYWdlOiAnJyxcblx0XHRcdFx0cGFyZW50OmZhbHNlXG5cdFx0XHR9KTtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dGhpcy4kcGFyZW50ID0gJCggISFvcHRpb25zLnBhcmVudCA/IG9wdGlvbnMucGFyZW50IDogJ2JvZHknICk7XG5cblx0XHRcdHJldHVybiB0aGlzLnJlbmRlcigpO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdG9wZW46IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy4kcGFyZW50LmFwcGVuZCggdGhpcy4kZWwgKTtcblx0XHRcdHRoaXMuJCgnW3R5cGU9XCJ0ZXh0XCJdJykuZm9jdXMoKS5zZWxlY3QoKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0Y2xvc2U6IGZ1bmN0aW9uKCkge1x0XG5cdFx0XHR0aGlzLiRlbC5yZW1vdmUoKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0Y29uZmlybTogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdjb25maXJtJyApO1xuXHRcdFx0dGhpcy5jbG9zZSgpO1xuXHRcdH0sXG5cdFx0Z2V0VmFsdWU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuJCgnW3R5cGU9XCJ0ZXh0XCJdJykudmFsKCk7XG5cdFx0fVxuXHR9KTtcblxuXG5cblx0TW9kYWwgPSBncmlkLnZpZXcudWkuTW9kYWwgPSB3cC5tZWRpYS52aWV3Lk1vZGFsLmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6IHdwLnRlbXBsYXRlKCdncmlkLXVpLW1vZGFsJyksXG5cdFx0ZXZlbnRzOiB7XG5cdFx0XHQnY2xpY2sgLmdyaWQtZGlhbG9nLXByZXYnOiAncHJldicsXG5cdFx0XHQnY2xpY2sgLmdyaWQtZGlhbG9nLW5leHQnOiAnbmV4dCcsXG5cdFx0XHQnY2xpY2sgLm1lZGlhLW1vZGFsLWJhY2tkcm9wLCAuZ3JpZC1kaWFsb2ctY2xvc2UnOiAnZXNjYXBlSGFuZGxlcicsXG5cdFx0XHQna2V5ZG93bic6ICdrZXlkb3duJ1xuXHRcdH0sXG5cdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcmV0ID0gd3AubWVkaWEudmlldy5Nb2RhbC5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHR0aGlzLnByZXZuZXh0ID0gISBfLmlzVW5kZWZpbmVkKCB0aGlzLm9wdGlvbnMucHJldiApICYmICEgXy5pc1VuZGVmaW5lZCggdGhpcy5vcHRpb25zLm5leHQgKTtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fSxcblx0XHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHJldCA9IHdwLm1lZGlhLnZpZXcuTW9kYWwucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRpZiAoIHRoaXMucHJldm5leHQgKSB7XG5cdFx0XHRcdHRoaXMuJCgnLmdyaWQtZGlhbG9nLXByZXYnKS5wcm9wKCAnZGlzYWJsZWQnLCAhIHRoaXMub3B0aW9ucy5wcmV2ICk7XG5cdFx0XHRcdHRoaXMuJCgnLmdyaWQtZGlhbG9nLW5leHQnKS5wcm9wKCAnZGlzYWJsZWQnLCAhIHRoaXMub3B0aW9ucy5uZXh0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLiQoJy5ncmlkLWRpYWxvZy1wcmV2LCAuZ3JpZC1kaWFsb2ctbmV4dCcpLnJlbW92ZSgpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9LFxuXHRcdG9wZW46IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHR3cC5tZWRpYS52aWV3Lk1vZGFsLnByb3RvdHlwZS5vcGVuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdC8vIGJvZHkubW9kYWwtb3BlbiBwcmV2ZXRucyBydGUgdG9vbGJhcnMgZnJvbSByZW5kZXJpbmdcblx0XHRcdCQoICdib2R5JyApLnJlbW92ZUNsYXNzKCAnbW9kYWwtb3BlbicgKS5hZGRDbGFzcygnZ3JpZC1tb2RhbC1vcGVuJyk7XG5cblx0XHR9LFxuXHRcdGNsb3NlOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdHdwLm1lZGlhLnZpZXcuTW9kYWwucHJvdG90eXBlLmNsb3NlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdC8vIGJvZHkubW9kYWwtb3BlbiBwcmV2ZXRucyBydGUgdG9vbGJhcnMgZnJvbSByZW5kZXJpbmdcblx0XHRcdCQoICdib2R5JyApLnJlbW92ZUNsYXNzKCAnZ3JpZC1tb2RhbC1vcGVuJyApO1xuXHRcdH0sXG5cdFx0bmV4dDogZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMudHJpZ2dlcignbmV4dCcpO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0cHJldjogZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMudHJpZ2dlcigncHJldicpO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fSk7XG5cblxuXHREaWFsb2cgPSBncmlkLnZpZXcudWkuRGlhbG9nID0gd3AubWVkaWEuVmlldy5leHRlbmQoe1xuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0XG5cdFx0XHR0aGlzLm1vZGVsXHRcdD0gb3B0aW9ucy5tb2RlbDtcblx0XHRcdHRoaXMuY29udHJvbGxlclx0PSBvcHRpb25zLmNvbnRyb2xsZXI7XG5cblx0XHRcdC8vIHNldHVwIGJ1dHRvblxuXHRcdFx0dGhpcy5va2F5QnRuID0gbmV3IHdwLm1lZGlhLnZpZXcuQnV0dG9uKCB7IHRleHQ6IGwxMG4uRG9uZSwgY2xhc3NlczogWydhcHBseScsJ2J1dHRvbi1wcmltYXJ5J10gfSApO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKXtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdHRoaXMuJCgnLmdyaWQtZGlhbG9nLXRpdGxlJykudGV4dCggdGhpcy5vcHRpb25zLnRpdGxlICk7XG5cdFx0XHRcblx0XHRcdC8vIHJlbmRlciBidXR0b25cblx0XHRcdHRoaXMub2theUJ0bi5yZW5kZXIoKTtcblx0XHRcdHRoaXMuJCgnLmdyaWQtZGlhbG9nLXRvb2xiYXInKS5hcHBlbmQoIHRoaXMub2theUJ0bi4kZWwgKTtcblx0XHR9LFxuXHRcdGRpc21pc3M6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy4kKCcuZ3JpZC1kaWFsb2ctY29udGVudCcpLmh0bWwoJycpO1xuXHRcdH1cblx0fSk7XG5cblx0VG9vbGJhciA9IGdyaWQudmlldy51aS5Ub29sYmFyID0gd3AubWVkaWEuVmlldy5leHRlbmQoe1xuXHRcdHRlbXBsYXRlOiB3cC50ZW1wbGF0ZSgnZ3JpZC11aS10b29sYmFyJyksXG5cdFx0Y2xhc3NOYW1lOidncmlkLXRvb2xiYXInLFxuXHRcdHRhZ05hbWU6J2RpdicsXG5cdFx0ZXZlbnRzOiB7XG5cdFx0XHQvLyBwcmV2ZW50IHNlbGVjdGlvbiBmcm9tIGxvb3NpbmcgZm9jdXNcbi8vXHRcdFx0J21vdXNlZG93biAqJzpcdFx0XHRcdFx0XHRcdCdwcmV2ZW50RGVmYXVsdCcsXG5cblx0XHRcdCdjbGljayAudmlld3N3aXRjaGVyIFt0eXBlPVwicmFkaW9cIl0nOlx0J3N3aXRjaFZpZXcnLFxuXG5cblx0XHRcdCdjbGljayAuc2V0LXZpc2liaWxpdHkgW3R5cGU9XCJyYWRpb1wiXSc6XHQnc2V0VmlzaWJsZScsXG5cdFx0XHRcblx0XHRcdCdjbGljayBidXR0b24uYWRkLWl0ZW0nOlx0XHRcdFx0J2FkZEl0ZW0nLFxuXHRcdFx0J2NoYW5nZSBzZWxlY3QuYWRkLWl0ZW0nOlx0XHRcdFx0J2FkZFRlbXBsYXRlSXRlbScsXG4vKlxuXHRcdFx0J2NoYW5nZSBzZWxlY3QuYWRkLWNvbnRhaW5lcic6XHRcdFx0J2FkZENvbnRhaW5lcicsXG5cdFx0XHQnY2xpY2sgYnV0dG9uLmFkZC1jb250YWluZXInOlx0XHRcdCdhZGRDb250YWluZXInLFxuXG5cdFx0XHQnY2hhbmdlIHNlbGVjdC5hZGQtcm93JzpcdFx0XHRcdCdhZGRSb3cnLFxuXHRcdFx0J2NsaWNrIGJ1dHRvbi5hZGQtcm93JzpcdFx0XHRcdFx0J2FkZFJvdycsXG5cblx0XHRcdCdjaGFuZ2Ugc2VsZWN0LmFkZC1jZWxsJzpcdFx0XHRcdCdhZGRDZWxsJyxcblx0XHRcdCdjbGljayBidXR0b24uYWRkLWNlbGwnOlx0XHRcdFx0J2FkZENlbGwnLFxuXG5cdFx0XHQnY2hhbmdlIHNlbGVjdC5hZGQtd2lkZ2V0JzpcdFx0XHRcdCdhZGRXaWRnZXQnLFxuXHRcdFx0J2NsaWNrIGJ1dHRvbi5hZGQtd2lkZ2V0JzpcdFx0XHRcdCdhZGRXaWRnZXQnLFxuKi9cblxuXHRcdFx0J2NsaWNrIC5pdGVtLWFjdGlvbi5lZGl0JzpcdFx0XHRcdCdlZGl0SXRlbScsXG5cdFx0XHQnY2xpY2sgLml0ZW0tYWN0aW9uLmNsb25lJzpcdFx0XHRcdCdjbG9uZUl0ZW0nLFxuXHRcdFx0J2NsaWNrIC5pdGVtLWFjdGlvbi5kZWxldGUnOlx0XHRcdCdkZWxldGVJdGVtJyxcblx0XHRcdCdjbGljayAuaXRlbS1hY3Rpb24ubG9jayc6XHRcdFx0XHQnbG9ja0l0ZW0nLFxuXG5cdFx0XHQnY2xpY2sgLmNyZWF0ZS10ZW1wbGF0ZSc6XHRcdFx0XHQnY3JlYXRlVGVtcGxhdGUnLFxuXHRcdFx0J2NsaWNrIC51cGRhdGUtdGVtcGxhdGUnOlx0XHRcdFx0J3VwZGF0ZVRlbXBsYXRlJyxcblx0XHRcdCdjbGljayAubWFuYWdlLXRlbXBsYXRlcyc6XHRcdFx0XHQnbWFuYWdlVGVtcGxhdGVzJyxcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0d3AubWVkaWEuVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHQvLyBjcmVhdGUgdG9vbGJhclxuXHRcdFx0dGhpcy5kZWxlZ2F0ZUV2ZW50cygpO1xuXHRcdFx0dGhpcy5zZXR1cFN0aWNreSgpO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdHRoaXMuc2V0dXBWaWV3c3dpdGNoZXIoKTtcblxuXHRcdFx0dGhpcy5zZXR1cFRlbXBsYXRlU2VsZWN0cygpO1xuXG5cdFx0XHR0aGlzLnVwZGF0ZVdpZHRoKCk7XG5cblx0XHRcdHZpZXdTaXplID0gd2luZG93LmdldFVzZXJTZXR0aW5nKCAnZ3JpZC12aWV3LXNpemUnICk7XG5cblx0XHRcdGlmICggISF2aWV3U2l6ZSApIHtcblx0XHRcdFx0dGhpcy4kKCcudmlld3N3aXRjaGVyIFt2YWx1ZT1cIicrdmlld1NpemUrJ1wiXScpLnByb3AoJ2NoZWNrZWQnLHRydWUpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy4kKCcudmlld3N3aXRjaGVyIFt0eXBlPVwicmFkaW9cIl06bGFzdCcpLnByb3AoJ2NoZWNrZWQnLHRydWUpO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy5zd2l0Y2hWaWV3KCk7XG5cblx0XHR9LFxuXHRcdHByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKGUpIHtcblx0XHRcdC8vIHByZXZlbnQgc2VsZWN0ZWQgZWxlbWVudCBmcm9tIGxvb3NpbmcgZm9jdXNcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdGFkZEl0ZW06IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCAnYWRkOicgKyAkKGUudGFyZ2V0KS5kYXRhKCdhZGQtaXRlbScpIClcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdGFkZFRlbXBsYXRlSXRlbTogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdhZGQ6JyArICQoZS50YXJnZXQpLmRhdGEoJ2FkZC1pdGVtJyksICQoZS50YXJnZXQpLnZhbCgpICk7XG5cdFx0XHQkKGUudGFyZ2V0KS52YWwoJycpO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH0sXG5cdFx0ZWRpdEl0ZW06IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCAnZWRpdCcgKTtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdGNsb25lSXRlbTogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdjbG9uZScgKTtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdGRlbGV0ZUl0ZW06IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCAnZGVsZXRlJyApO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH0sXG5cdFx0bG9ja0l0ZW06IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCAnbG9jaycgKTtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdHNldFZpc2libGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCd2aXNpYmxlJywgdGhpcy4kKCcuc2V0LXZpc2liaWxpdHkgW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkJykudmFsKCkgKTtcblx0XHR9LFxuXG5cdFx0c2V0dXBTdGlja3k6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHQkKHdpbmRvdykub24oJ3Njcm9sbCcsZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBvbGRTdGF0ZSA9IHNlbGYuJGVsLmF0dHIoJ2RhdGEtc3RpY2t5JykgPT09ICd0cnVlJyxcblx0XHRcdFx0XHRuZXdTdGF0ZSA9ICggJCh3aW5kb3cpLnNjcm9sbFRvcCgpICsgMzMgKSA+PSBzZWxmLmNvbnRyb2xsZXIuJGVsLm9mZnNldCgpLnRvcDtcblx0XHRcdFx0aWYgKCBvbGRTdGF0ZSAhPSBuZXdTdGF0ZSApIHtcblx0XHRcdFx0XHRzZWxmLiRlbC5hdHRyKCAnZGF0YS1zdGlja3knLCBuZXdTdGF0ZS50b1N0cmluZygpICk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0JCh3aW5kb3cpLm9uKCdyZXNpemUnLGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLnVwZGF0ZVdpZHRoKCk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdHVwZGF0ZVdpZHRoOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuJGVsLmNzcyggJ3dpZHRoJywgdGhpcy5jb250cm9sbGVyLiRlbC53aWR0aCgpLnRvU3RyaW5nKCkgKyAncHgnICk7XG5cdFx0fSxcblx0XHR1cGRhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzLmNvbnRyb2xsZXIuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0Y2FuX3Zpc2liaWxpdHkgPSBjYW5fZWRpdCA9IGNhbl9jbG9uZSA9IGNhbl9kZWxldGUgPSBjYW5fbG9jayA9IGZhbHNlLFxuXHRcdFx0XHRjYW5fdmlzaWJsZSA9IGNhbl9jcmVhdGVfdGVtcGxhdGUgPSBjYW5fdXBkYXRlX3RlbXBsYXRlID0gZmFsc2UsXG5cdFx0XHRcdGNhbl9hZGRfY29udGFpbmVyID0gY2FuX2FkZF9yb3cgPSBjYW5fYWRkX2NlbGwgPSBjYW5fYWRkX3dpZGdldCA9IGZhbHNlLFxuXHRcdFx0XHRjYW5fbWFuYWdlX3RlbXBsYXRlcyA9IHRydWU7XG5cblx0XHRcdGlmICggISEgaXRlbSApIHtcblx0XHRcdFx0dmFyIGl0ZW1faXNfZ3JpZCA9IGl0ZW0uaXMoIGdyaWQudmlldy5lbGVtZW50LkdyaWQgKSxcblx0XHRcdFx0XHRpc191bmxvY2tlZFx0PSBmZWF0dXJlcy5sb2NrcyB8fCAhIGl0ZW0ubW9kZWwuZ2V0KCAnbG9ja2VkJyApLFxuXHRcdFx0XHRcdGlzX3BhcmVudF91bmxvY2tlZFxuXHRcdFx0XHRcdFx0XHRcdD0gIGZlYXR1cmVzLmxvY2tzIHx8ICEgKCBpdGVtLnBhcmVudCgpICYmIGl0ZW0ucGFyZW50KCkubW9kZWwuZ2V0KCAnbG9ja2VkJyApICksXG5cdFx0XHRcdFxuXHRcdFx0XHRcdGNsb3Nlc3RfZ3JpZCBcdFx0PSBpdGVtLmNsb3Nlc3QoIGdyaWQudmlldy5lbGVtZW50LkdyaWQgKSxcblx0XHRcdFx0XHRjbG9zZXN0X2NvbnRhaW5lclx0PSBpdGVtLmNsb3Nlc3QoIGdyaWQudmlldy5lbGVtZW50LkNvbnRhaW5lciApLFxuXHRcdFx0XHRcdGNsb3Nlc3Rfcm93XHRcdFx0PSBpdGVtLmNsb3Nlc3QoIGdyaWQudmlldy5lbGVtZW50LlJvdyApLFxuXHRcdFx0XHRcdGNsb3Nlc3RfY2VsbFx0XHQ9IGl0ZW0uY2xvc2VzdCggZ3JpZC52aWV3LmVsZW1lbnQuQ2VsbCApLFxuXHRcdFx0XHRcdGl0ZW1fdmlzaWJpbGl0eSBcdD0gaXRlbS5tb2RlbC5nZXQoICd2aXNpYmlsaXR5XycgKyB0aGlzLndoaWNoVmlldygpICkgfHwgJyc7XG5cblx0XHRcdFx0Y2FuX2VkaXRcdD0gISBpdGVtX2lzX2dyaWQgJiYgaXNfdW5sb2NrZWQ7XG5cdFx0XHRcdGNhbl9jbG9uZVx0PSAhIGl0ZW1faXNfZ3JpZCAmJiBpc191bmxvY2tlZCAmJiBpc19wYXJlbnRfdW5sb2NrZWQ7XG5cdFx0XHRcdGNhbl9kZWxldGVcdD0gISBpdGVtX2lzX2dyaWQgJiYgaXNfdW5sb2NrZWQgJiYgaXNfcGFyZW50X3VubG9ja2VkO1xuXHRcdFx0XHRjYW5fbG9ja1x0PSB0cnVlO1xuXHRcdFx0XHRjYW5fdmlzaWJsZVx0PSAhIGl0ZW1faXNfZ3JpZDtcblxuXHRcdFx0XHRjYW5fY3JlYXRlX3RlbXBsYXRlXHRcdD0gISBpdGVtX2lzX2dyaWQ7XG5cdFx0XHRcdGNhbl91cGRhdGVfdGVtcGxhdGVcdFx0PSAhIGl0ZW1faXNfZ3JpZCAmJiAhIWl0ZW0ubW9kZWwuZ2V0KCAndGVtcGxhdGUnICk7XG5cdFx0XHRcdFxuXHRcdFx0XHRjYW5fYWRkX2NvbnRhaW5lclx0PSBmZWF0dXJlcy5sb2NrcyB8fCAhIGNsb3Nlc3RfZ3JpZC5tb2RlbC5nZXQoICdsb2NrZWQnICk7XG5cdFx0XHRcdGNhbl9hZGRfcm93XHRcdFx0PSAhISBjbG9zZXN0X2NvbnRhaW5lciAmJiAoIGZlYXR1cmVzLmxvY2tzIHx8ICEgY2xvc2VzdF9jb250YWluZXIubW9kZWwuZ2V0KCAnbG9ja2VkJyApICk7XG5cdFx0XHRcdGNhbl9hZGRfY2VsbFx0XHQ9ICEhIGNsb3Nlc3Rfcm93ICYmICggZmVhdHVyZXMubG9ja3MgfHwgISBjbG9zZXN0X3Jvdy5tb2RlbC5nZXQoICdsb2NrZWQnICkgKTtcblx0XHRcdFx0Y2FuX2FkZF93aWRnZXRcdFx0PSAhISBjbG9zZXN0X2NlbGwgJiYgKCBmZWF0dXJlcy5sb2NrcyB8fCAhIGNsb3Nlc3RfY2VsbC5tb2RlbC5nZXQoICdsb2NrZWQnICkgKTtcblxuXG5cdFx0XHRcdHRoaXMuJCgnLml0ZW0tYWN0aW9uLmxvY2snKS5wcm9wKCAnY2hlY2tlZCcsICEhIGl0ZW0ubW9kZWwuZ2V0KCAnbG9ja2VkJyApICk7XG5cblx0XHRcdFx0dGhpcy4kKCdbbmFtZT1cInNldC12aXNpYmlsaXR5XCJdJykuZWFjaChmdW5jdGlvbiggaSwgZWwgKSB7IFxuXHRcdFx0XHRcdHZhciAkdGhpcyA9ICQodGhpcyk7XG5cdFx0XHRcdFx0JHRoaXMucHJvcCggJ2NoZWNrZWQnLCAkdGhpcy52YWwoKSA9PSBpdGVtX3Zpc2liaWxpdHkgKTtcblx0XHRcdFx0fSk7XG4vL1x0XHRcdFx0dGhpcy50cmlnZ2VyKCAnc2VsZWN0JyApO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy4kKCcuaXRlbS1hY3Rpb24uZWRpdCcpLnByb3AoICdkaXNhYmxlZCcsICEgY2FuX2VkaXQgKTtcblx0XHRcdHRoaXMuJCgnLml0ZW0tYWN0aW9uLmNsb25lJykucHJvcCggJ2Rpc2FibGVkJywgISBjYW5fY2xvbmUgKTtcblx0XHRcdHRoaXMuJCgnLml0ZW0tYWN0aW9uLmRlbGV0ZScpLnByb3AoICdkaXNhYmxlZCcsICEgY2FuX2RlbGV0ZSApO1xuXHRcdFx0dGhpcy4kKCcuaXRlbS1hY3Rpb24ubG9jaycpLnByb3AoICdkaXNhYmxlZCcsICEgY2FuX2xvY2sgKTtcblxuXHRcdFx0dGhpcy4kKCcuY3JlYXRlLXRlbXBsYXRlJykucHJvcCggJ2Rpc2FibGVkJywgISBjYW5fY3JlYXRlX3RlbXBsYXRlICk7XG5cdFx0XHR0aGlzLiQoJy51cGRhdGUtdGVtcGxhdGUnKS5wcm9wKCAnZGlzYWJsZWQnLCAhIGNhbl91cGRhdGVfdGVtcGxhdGUgKTtcblx0XHRcdHRoaXMuJCgnLm1hbmFnZS10ZW1wbGF0ZXMnKS5wcm9wKCAnZGlzYWJsZWQnLCAhIGNhbl9tYW5hZ2VfdGVtcGxhdGVzICk7XG5cblx0XHRcdHRoaXMuJCgnLmFkZC1jb250YWluZXInKS5wcm9wKCAnZGlzYWJsZWQnLCAhIGNhbl9hZGRfY29udGFpbmVyICk7XG5cdFx0XHR0aGlzLiQoJy5hZGQtcm93JykucHJvcCggJ2Rpc2FibGVkJywgISBjYW5fYWRkX3JvdyApO1xuXHRcdFx0dGhpcy4kKCcuYWRkLWNlbGwnKS5wcm9wKCAnZGlzYWJsZWQnLCAhIGNhbl9hZGRfY2VsbCApO1xuXHRcdFx0dGhpcy4kKCcuYWRkLXdpZGdldCcpLnByb3AoICdkaXNhYmxlZCcsICEgY2FuX2FkZF93aWRnZXQgKTtcblxuXHRcdFx0dGhpcy4kKCdbbmFtZT1cInNldC12aXNpYmlsaXR5XCJdJykucHJvcCggJ2Rpc2FibGVkJywgISBjYW5fdmlzaWJsZSApO1xuXHRcdH0sXG5cdFx0XG5cdFx0c2V0dXBWaWV3c3dpdGNoZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0Xy5lYWNoKCBvcHRpb25zLnNjcmVlbnNpemVzLnNpemVzLCBmdW5jdGlvbiggc2l6ZU9wdGlvbnMsIHNpemUgKSB7XG5cdFx0XHRcdHZhciBzaXplT3B0cyA9IHtzaXplOnNpemV9LCBodG1sO1xuXHRcdFx0XHRfLmV4dGVuZCggc2l6ZU9wdHMsIHNpemVPcHRpb25zICk7XG5cdFx0XHRcdGh0bWwgPSB3cC50ZW1wbGF0ZSgndmlld3NpemUtaXRlbScpKHNpemVPcHRzKTtcblx0XHRcdFx0c2VsZi4kKCcudmlld3N3aXRjaGVyJykuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdFxuXHRcdHNldHVwVGVtcGxhdGVTZWxlY3RzOiBmdW5jdGlvbiggICkge1xuXHRcdFx0dGhpcy4kKCdzZWxlY3QuYWRkLWl0ZW1bZGF0YS1hZGQtaXRlbV0nKS5lYWNoKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHZhciAkc2VsZiA9ICQodGhpcyksXG5cdFx0XHRcdFx0dHlwZSA9ICRzZWxmLmF0dHIoJ2RhdGEtYWRkLWl0ZW0nKTtcblx0XHRcdFx0Ly8gcmVtb3ZlIHByZXZpb3VzIFxuXHRcdFx0XHQkKHRoaXMpLmZpbmQoJ1t2YWx1ZSE9XCJcIl0nKS5yZW1vdmUoKTtcblx0XHRcdFx0Z3JpZC50ZW1wbGF0ZXNbdHlwZV0uZWFjaChmdW5jdGlvbihlbCxpKSB7XG5cdFx0XHRcdFx0dmFyIHRwbERhdGEgPSBncmlkLnRlbXBsYXRlc1t0eXBlXS5nZXQoIGVsLmlkICkudG9KU09OKCk7XG5cdFx0XHRcdFx0JCgnPG9wdGlvbiB2YWx1ZT1cIicrdHBsRGF0YS5pZCsnXCI+Jyt0cGxEYXRhLm5hbWUrJzwvb3B0aW9uPicpLmFwcGVuZFRvKCAkc2VsZiApO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRzd2l0Y2hWaWV3OiBmdW5jdGlvbiggKSB7XG5cdFx0XHR2YXIgbmV3VmlldyA9IHRoaXMud2hpY2hWaWV3KCksXG5cdFx0XHRcdG9sZFZpZXcgPSB0aGlzLiRlbC5hdHRyKCAnZGF0YS12aWV3LXNpemUnICksXG5cdFx0XHRcdGNoYW5nZWQgPSBvbGRWaWV3ICE9IG5ld1ZpZXc7XG5cdFx0XHRpZiAoIG5ld1ZpZXcgKSB7XG5cdFx0XHRcdHRoaXMudHJpZ2dlciggJ3ZpZXdzaXplJywgdGhpcyApO1xuXHRcdFx0XHQvLyBzdG9yZSBpbiB1c2VyIHNldHRpbmdzXG5cdFx0XHRcdHdpbmRvdy5zZXRVc2VyU2V0dGluZyggJ2dyaWQtdmlldy1zaXplJywgbmV3VmlldyApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHR3aGljaFZpZXc6IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gdGhpcy4kKCcudmlld3N3aXRjaGVyIDpjaGVja2VkJykudmFsKCk7XG5cdFx0fSxcblx0XHRkZWxlZ2F0ZUV2ZW50czogZnVuY3Rpb24oKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5kZWxlZ2F0ZUV2ZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdHRoaXMub24oICd2aWV3c2l6ZScsIHRoaXMudXBkYXRlVmlzaWJpbGl0eVNlbGVjdCwgdGhpcyApO1xuXHRcdFx0dGhpcy5vbiggJ3NlbGVjdCcsIHRoaXMudXBkYXRlVmlzaWJpbGl0eVNlbGVjdCwgdGhpcyApO1xuXHRcdFx0dGhpcy5vbiggJ3NlbGVjdCcsIHRoaXMudXBkYXRlTG9ja0J1dHRvbiwgdGhpcyApO1xuXHRcdH0sXG5cdFx0dW5kZWxlZ2F0ZUV2ZW50czogZnVuY3Rpb24oKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS51bmRlbGVnYXRlRXZlbnRzLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9LFxuXHRcdHVwZGF0ZVZpc2liaWxpdHlTZWxlY3Q6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0dmlzaVZhbHVlO1xuXG5cdFx0XHRpZiAoICEhY3VycmVudCAmJiAhIGN1cnJlbnQuaXMoIGdyaWQudmlldy5lbGVtZW50LkdyaWQgKSApIHtcblx0XHRcdFx0dmlzaVZhbHVlID0gY3VycmVudC5tb2RlbC5nZXQoICd2aXNpYmlsaXR5XycgKyB0aGlzLndoaWNoVmlldygpICkgfHwgJyc7XG5cdCBcdFx0XHR0aGlzLiQoJ1tuYW1lPVwic2V0LXZpc2liaWxpdHlcIl1bdmFsdWU9XCInICsgdmlzaVZhbHVlICsgJ1wiXScpLnByb3AoICdjaGVja2VkJywgdHJ1ZSApO1xuXHQgXHRcdH1cblx0XHR9LFxuXHRcdHVwZGF0ZUxvY2tCdXR0b246IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSB0aGlzLmdldFNlbGVjdGVkKCksXG5cdFx0XHRcdHZpc2lWYWx1ZTtcblxuXHRcdFx0aWYgKCAhIWN1cnJlbnQgJiYgISBjdXJyZW50LmlzKCBncmlkLnZpZXcuZWxlbWVudC5HcmlkICkgKSB7XG5cdCBcdFx0XHR0aGlzLiQoJy5pdGVtLWFjdGlvbi5sb2NrJykucHJvcCggJ2NoZWNrZWQnLCAhISBjdXJyZW50Lm1vZGVsLmdldCggJ2xvY2tlZCcgKSApO1xuXHQgXHRcdH1cblx0XHR9LFxuXHRcdGNyZWF0ZVRlbXBsYXRlOiBmdW5jdGlvbihlKSB7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdjcmVhdGU6dGVtcGxhdGUnICk7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fSxcblx0XHR1cGRhdGVUZW1wbGF0ZTogZnVuY3Rpb24oZSkge1xuXHRcdFx0dGhpcy50cmlnZ2VyKCAndXBkYXRlOnRlbXBsYXRlJyApO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH0sXG5cdFx0bWFuYWdlVGVtcGxhdGVzOiBmdW5jdGlvbihlKSB7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdtYW5hZ2U6dGVtcGxhdGVzJyApO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblxuXHR9KTtcblxuXHRFZGl0b3IgPSBncmlkLnZpZXcudWkuRWRpdG9yID0gd3AubWVkaWEuVmlldy5leHRlbmQoe1xuXHRcdGNsYXNzTmFtZTonZ3JpZC1lZGl0b3InLFxuXHRcdHRhZ05hbWU6J2RpdicsXG5cdFx0c2VsZWN0V2lkZ2V0TW9kYWw6IG51bGwsXG5cdFx0ZXZlbnRzOntcblx0XHRcdCdmb2N1c291dCAqJzogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKCdibHVyJyxlKTtcblx0XHRcdH0sXG5cdFx0XHQnZm9jdXNpbiAqJzogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdHZhciB2aWV3ID0gJChlLnRhcmdldCkuZGF0YSgndmlldycpO1xuXHRcdFx0XHRpZiAoICQoZS50YXJnZXQpLmlzKCcubG9ja2VkJykgKSB7XG5cdFx0XHRcdFx0JChlLnRhcmdldCkuYmx1cigpO1xuXHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCAhISB2aWV3ICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0U2VsZWN0ZWQoIHZpZXcgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdCdrZXl1cCAqJzogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdHZhciBjYW5fZWRpdCwgcHJvcCxcblx0XHRcdFx0XHR2aWV3U2l6ZVx0PSB0aGlzLnRvb2xiYXIud2hpY2hWaWV3KCksXG5cdFx0XHRcdFx0c2VsXHRcdFx0PSB0aGlzLmdldFNlbGVjdGVkKCk7XG5cblx0XHRcdFx0aWYgKCAhIHNlbCApIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRzd2l0Y2ggKCBlLmtleUNvZGUgKSB7XG5cdFx0XHRcdFx0Y2FzZSAxMzogLy8gcmV0dXJuXG5cdFx0XHRcdFx0XHRjYW5fZWRpdCA9IGZlYXR1cmVzLmxvY2tzIHx8ICEgc2VsLm1vZGVsLmdldCggJ2xvY2tlZCcgKTtcblx0XHRcdFx0XHRcdGNhbl9lZGl0ICYmIHRoaXMuZWRpdEl0ZW0oKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgMzI6IC8vIHNwYWNlXG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlIDQ2OiAvLyBERUxcblx0XHRcdFx0XHRjYXNlIDg6IC8vIGJhY2tzcGFjZVxuXHRcdFx0XHRcdFx0Y2FuX2VkaXQgPSBmZWF0dXJlcy5sb2NrcyB8fCAhIHNlbC5tb2RlbC5nZXQoICdsb2NrZWQnICk7XG5cdFx0XHRcdFx0XHRjYW5fZWRpdCAmJiB0aGlzLmRlbGV0ZUl0ZW0oKTtcblx0XHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlIDM3OiAvLyBhcnJvdy1sZWZ0XG5cdFx0XHRcdFx0Y2FzZSAzOTogLy8gYXJyb3ctcmlnaHRcblx0XHRcdFx0XHRjYXNlIDM4OiAvLyBhcnJvdy11cFxuXHRcdFx0XHRcdGNhc2UgNDA6IC8vIGFycm93LWRvd25cblx0XHRcdFx0XHRcdHByb3BcdFx0PSBlLnNoaWZ0S2V5ID8gJ3NpemUnIDogJ29mZnNldCc7XG5cdFx0XHRcdFx0XHRjYW5fZWRpdFx0PSBmZWF0dXJlcy5sb2NrcyB8fCAoICEgc2VsLm1vZGVsLmdldCggJ2xvY2tlZCcgKSAmJiAhIHNlbC5tb2RlbC5nZXQoIHByb3AgKyAnXycgKyB2aWV3U2l6ZSArICc6bG9ja2VkJyApICk7XG5cblx0XHRcdFx0XHRcdGlmICggY2FuX2VkaXQgJiYgc2VsLmlzKCBncmlkLnZpZXcuZWxlbWVudC5DZWxsICkgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggZS5rZXlDb2RlID09IDM3ICkgeyAvLyBsZWZ0XG5cdFx0XHRcdFx0XHRcdFx0ZS5zaGlmdEtleSA/IHNlbC5kZWNyZW1lbnRTaXplKCkgOiBzZWwuZGVjcmVtZW50T2Zmc2V0KCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGUua2V5Q29kZSA9PSAzOSApIHsgLy8gcmlnaHRcblx0XHRcdFx0XHRcdFx0XHRlLnNoaWZ0S2V5ID8gc2VsLmluY3JlbWVudFNpemUoKSA6IHNlbC5pbmNyZW1lbnRPZmZzZXQoKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdC8vIGNyZWF0ZSB0b29sYmFyXG5cdFx0XHR0aGlzLnRvb2xiYXIgPSBuZXcgZ3JpZC52aWV3LnVpLlRvb2xiYXIoe1xuXHRcdFx0XHRjb250cm9sbGVyOiB0aGlzXG5cdFx0XHR9KTtcblx0XHRcdC8vIGNyZWF0ZSBncmlkdmlld1xuXHRcdFx0dGhpcy5ncmlkID0gbmV3IGdyaWQudmlldy5lbGVtZW50LkdyaWQoe1xuXHRcdFx0XHRjb250cm9sbGVyOiB0aGlzLFxuXHRcdFx0XHRtb2RlbDogdGhpcy5tb2RlbFxuXHRcdFx0fSk7XG5cdFx0XHR0aGlzLmJpbmRFdmVudHMoKTtcblx0XHQvL1x0dGhpcy5yZW5kZXIoKTtcblx0XHR9LFxuXHRcdGJpbmRFdmVudHM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHQkKGRvY3VtZW50KS5vbiggJ2NsaWNrJywgZnVuY3Rpb24oKSB7IFxuXHRcdFx0XHRzZWxmLmNoZWNrU2VsZWN0ZWQuYXBwbHkoc2VsZixhcmd1bWVudHMpO1xuXHRcdFx0fSk7XG5cdFx0XHQkKGRvY3VtZW50KS5vbiggJ2tleWRvd24nLCB0aGlzLnByZXZlbnRCYWNrc3BhY2VOYXYgKTtcblx0XHRcdFxuXHRcdFx0dGhpcy50b29sYmFyLm9uKCAnZWRpdCcsIHRoaXMuZWRpdEl0ZW0sIHRoaXMgKTtcblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ2Nsb25lJywgdGhpcy5jbG9uZUl0ZW0sIHRoaXMgKTtcblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ2RlbGV0ZScsIHRoaXMuZGVsZXRlSXRlbSwgdGhpcyApO1xuXHRcdFx0dGhpcy50b29sYmFyLm9uKCAnbG9jaycsIHRoaXMudG9nZ2xlTG9ja1N0YXRlLCB0aGlzICk7XG5cblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ3Zpc2libGUnLCB0aGlzLnNldFZpc2libGUsIHRoaXMgKTtcblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ3Zpc2libGUnLCB0aGlzLnJlRm9jdXMsIHRoaXMgKTtcblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ3ZpZXdzaXplJywgdGhpcy5vbkNoYW5nZVZpZXdzaXplLCB0aGlzICk7XG5cdFx0XHR0aGlzLnRvb2xiYXIub24oICd2aWV3c2l6ZScsIHRoaXMucmVGb2N1cywgdGhpcyApO1xuXG5cdFx0XHR0aGlzLnRvb2xiYXIub24oICdjcmVhdGU6dGVtcGxhdGUnLCB0aGlzLmNyZWF0ZVRlbXBsYXRlLCB0aGlzICk7XG5cdFx0XHR0aGlzLnRvb2xiYXIub24oICd1cGRhdGU6dGVtcGxhdGUnLCB0aGlzLnVwZGF0ZVRlbXBsYXRlLCB0aGlzICk7XG5cdFx0XHR0aGlzLnRvb2xiYXIub24oICdtYW5hZ2U6dGVtcGxhdGVzJywgdGhpcy5vcGVuVGVtcGxhdGVNYW5hZ2VyLCB0aGlzICk7XG5cblx0XHRcdHRoaXMudG9vbGJhci5vbiggJ2FkZDpjb250YWluZXInLCB0aGlzLmFkZENvbnRhaW5lciwgdGhpcyApO1xuXHRcdFx0dGhpcy50b29sYmFyLm9uKCAnYWRkOnJvdycsIHRoaXMuYWRkUm93LCB0aGlzICk7XG5cdFx0XHR0aGlzLnRvb2xiYXIub24oICdhZGQ6Y2VsbCcsIHRoaXMuYWRkQ2VsbCwgdGhpcyApO1xuXHRcdFx0dGhpcy50b29sYmFyLm9uKCAnYWRkOndpZGdldCcsIHRoaXMuYWRkV2lkZ2V0LCB0aGlzICk7XG5cblx0XHR9LFxuXHRcdHByZXZlbnRCYWNrc3BhY2VOYXY6IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dmFyIGVsID0gZXZlbnQuc3JjRWxlbWVudCB8fCBldmVudC50YXJnZXQ7XG5cdFx0XHRpZiAoICQoIGVsICkuaXMoIFwiOmlucHV0XCIgKSB8fCAkKCBlbCApLmlzKCBcIltjb250ZW50ZWRpdGFibGVdXCIgKSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0ZS5rZXlDb2RlID09PSA4ICYmIGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dGhpcy50b29sYmFyLnJlbmRlcigpO1xuXHRcdFx0Ly8qXG5cdFx0XHR2YXIgJHRvb2xiYXJXcmFwID0gJCgnPGRpdiBjbGFzcz1cImdyaWQtdG9vbGJhci13cmFwXCI+PC9kaXY+Jyk7XG5cdFx0XHR0aGlzLiRlbC5hcHBlbmQoICR0b29sYmFyV3JhcCApO1xuXHRcdFx0JHRvb2xiYXJXcmFwLmFwcGVuZCggdGhpcy50b29sYmFyLiRlbCApO1xuXHRcdFx0JHRvb2xiYXJXcmFwLmhlaWdodCggJHRvb2xiYXJXcmFwLmhlaWdodCgpICk7XG5cdFx0XHQvKi9cblx0XHRcdHRoaXMuJGVsLmFwcGVuZCggdGhpcy50b29sYmFyLiRlbCApO1xuXHRcdFx0Ly8qL1xuXHRcdFx0dGhpcy4kZWwuYXBwZW5kKCB0aGlzLmdyaWQuJGVsICk7XG5cdFx0XHR0aGlzLmdyaWQucmVuZGVyKCk7XG5cdFx0fSxcblx0XHRzZXRBY3RpdmVFZGl0b3I6IGZ1bmN0aW9uKCAgKSB7XG5cdFx0XHRncmlkLnNldEFjdGl2ZUVkaXRvciggdGhpcyApO1xuXHRcdH0sXG5cdFx0b25DaGFuZ2VWaWV3c2l6ZTogZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuJGVsLmF0dHIoJ2RhdGEtdmlldy1zaXplJywgdGhpcy50b29sYmFyLndoaWNoVmlldygpICk7XG5cdFx0fSxcblx0XHRnZXRTZWxlY3RlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5jb250cm9sbGVyLmdldFNlbGVjdGVkKHRoaXMpO1xuXHRcdH0sXG5cdFx0Y2hlY2tTZWxlY3RlZDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRpZiAoICEgdGhpcy4kZWwuaGFzKCBlLnRhcmdldCApLmxlbmd0aCAmJiAhICQoZS50YXJnZXQpLmNsb3Nlc3QoJy5ncmlkLXVpLW1vZGFsJykgKSB7XG5cdFx0XHRcdHRoaXMuc2V0U2VsZWN0ZWQoIG51bGwgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHNldFNlbGVjdGVkOmZ1bmN0aW9uKCBpdGVtICkge1xuXHRcdFx0dGhpcy5jb250cm9sbGVyLnNldFNlbGVjdGVkKCBpdGVtICk7XG5cdFx0XHR0aGlzLnRvb2xiYXIudXBkYXRlKCk7XG5cdFx0XHRpZiAoICEhIGl0ZW0gJiYgISBpdGVtLiRlbC5pcygnOmZvY3VzJykgKSB7XG5cdFx0XHRcdGl0ZW0uJGVsLmZvY3VzKCk7XG5cdFx0XHR9XG4vL1x0XHRcdHRoaXMuJGVsLmZvY3VzKCk7XG5cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0XG5cdFx0LyoqXG5cdFx0ICpcdE1hbmFnaW5nIGl0ZW1zXG5cdFx0ICovXG5cdFx0YWRkQ29udGFpbmVyOmZ1bmN0aW9uKCApIHtcblx0XHRcdHZhciB0ZW1wbGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPyBncmlkLnRlbXBsYXRlcy5nZXQoICdjb250YWluZXInLCBhcmd1bWVudHNbMF0gKSA6IGZhbHNlLFxuXHRcdFx0XHR2YWwgPSB0ZW1wbGF0ZSA/IHRlbXBsYXRlLmdldCgnZGF0YScpIDogeyB0eXBlOiAnY29udGFpbmVyJyB9O1xuXHRcdFx0XG5cdFx0XHR0aGlzLl9hZGRJdGVtKCBncmlkLnZpZXcuZWxlbWVudC5Db250YWluZXIsIHRoaXMuZ3JpZCwgdmFsICk7XG5cdFx0XHRcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdGFkZFJvdzogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHR2YXIgY3VycmVudFx0XHQ9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0cGFyZW50XHRcdD0gY3VycmVudC5jbG9zZXN0KCBncmlkLnZpZXcuZWxlbWVudC5Db250YWluZXIgKSxcblx0XHRcdFx0dGVtcGxhdGVcdD0gYXJndW1lbnRzLmxlbmd0aCA/IGdyaWQudGVtcGxhdGVzLmdldCggJ3JvdycsIGFyZ3VtZW50c1swXSApIDogZmFsc2UsXG5cdFx0XHRcdHZhbFx0XHRcdD0gdGVtcGxhdGUgPyB0ZW1wbGF0ZS5nZXQoJ2RhdGEnKSA6IHsgdHlwZTogJ3JvdycgfTtcblxuXHRcdFx0dGhpcy5fYWRkSXRlbSggZ3JpZC52aWV3LmVsZW1lbnQuUm93LCBwYXJlbnQsIHZhbCApO1xuXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhZGRDZWxsOiBmdW5jdGlvbiggZSApIHtcblx0XHRcdHZhciBjdXJyZW50XHQ9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0cGFyZW50XHQ9IGN1cnJlbnQuY2xvc2VzdCggZ3JpZC52aWV3LmVsZW1lbnQuUm93ICksXG5cdFx0XHRcdHRlbXBsYXRlID0gYXJndW1lbnRzLmxlbmd0aCA/IGdyaWQudGVtcGxhdGVzLmdldCggJ2NlbGwnLCBhcmd1bWVudHNbMF0gKSA6IGZhbHNlLFxuXHRcdFx0XHR2YWwgPSB0ZW1wbGF0ZSA/IHRlbXBsYXRlLmdldCgnZGF0YScpIDogeyBzaXplX3hzOiBvcHRpb25zLnNjcmVlbnNpemVzLmNvbHVtbnMsIHR5cGU6ICdjZWxsJyB9O1xuXG5cdFx0XHR0aGlzLl9hZGRJdGVtKCBncmlkLnZpZXcuZWxlbWVudC5DZWxsLCBwYXJlbnQsIHZhbCApO1xuXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhZGRXaWRnZXQ6IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0dmFyIHNlbGZcdFx0PSB0aGlzLFxuXHRcdFx0XHRjdXJyZW50XHRcdD0gdGhpcy5nZXRTZWxlY3RlZCgpLFxuXHRcdFx0XHRwYXJlbnRcdFx0PSBjdXJyZW50LmNsb3Nlc3QoIGdyaWQudmlldy5lbGVtZW50LkNlbGwgKSxcblx0XHRcdFx0dGVtcGxhdGVcdD0gYXJndW1lbnRzLmxlbmd0aCA/IGdyaWQudGVtcGxhdGVzLmdldCggJ3dpZGdldCcsIGFyZ3VtZW50c1swXSApIDogZmFsc2UsXG5cdFx0XHRcdHZhbFx0XHRcdD0gdGVtcGxhdGUgPyB0ZW1wbGF0ZS5nZXQoJ2RhdGEnKSA6IHsgaW5zdGFuY2U6IHt9LCB0eXBlOiAnd2lkZ2V0JyB9LFxuXHRcdFx0XHRtb2RlbFx0XHQ9IG5ldyBCYWNrYm9uZS5Nb2RlbCgpLCBkaWFsb2c7XG5cblx0XHRcdGlmICggISEgdGVtcGxhdGUgKSB7XG5cdFx0XHRcdHRoaXMuX2FkZEl0ZW0oIGdyaWQudmlldy5lbGVtZW50LldpZGdldCwgcGFyZW50LCB2YWwgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICggdGhpcy5zZWxlY3RXaWRnZXRNb2RhbCA9PT0gbnVsbCApIHtcblx0XHRcdFx0XHR0aGlzLnNlbGVjdFdpZGdldE1vZGFsID0gbmV3IHdwLm1lZGlhLnZpZXcuTW9kYWwoIHsgY29udHJvbGxlcjogdGhpcyB9ICksXG5cblx0XHRcdFx0XHRkaWFsb2cgPSBuZXcgZ3JpZC52aWV3LlNlbGVjdFdpZGdldERpYWxvZyggeyBcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnRyb2xsZXI6IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRtb2RlbDogbW9kZWwsXG5cdFx0XHRcdFx0XHRcdFx0XHR0aXRsZTogbDEwbi5TZWxlY3RXaWRnZXRcblx0XHRcdFx0XHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0XHRkaWFsb2cub24oICdkb25lJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHR2YWwud2lkZ2V0X2NsYXNzID0gbW9kZWwuZ2V0KCAnd2lkZ2V0X2NsYXNzJyApO1xuXHRcdFx0XHRcdFx0c2VsZi5fYWRkSXRlbSggZ3JpZC52aWV3LmVsZW1lbnQuV2lkZ2V0LCBwYXJlbnQsIHZhbCApLmVkaXRJdGVtKCApO1xuXHRcdFx0XHRcdFx0c2VsZi5zZWxlY3RXaWRnZXRNb2RhbC5jbG9zZSgpO1xuXHRcdFx0XHRcdH0sIHRoaXMuc2VsZWN0V2lkZ2V0TW9kYWwgKTtcblxuXHRcdFx0XHRcdHRoaXMuc2VsZWN0V2lkZ2V0TW9kYWwuY29udGVudCggZGlhbG9nICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5zZWxlY3RXaWRnZXRNb2RhbC5vcGVuKCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdGNsb25lSXRlbTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0aXRlbUNsYXNzID0gY3VycmVudC5nZXRDbGFzcygpLFxuXHRcdFx0XHRwYXJlbnQgPSBjdXJyZW50LnBhcmVudCgpLFxuXHRcdFx0XHRkYXRhID0gY3VycmVudC5tb2RlbC50b0pTT04oKTtcblxuXHRcdFx0ZGF0YS5pZHgrKztcblxuXHRcdFx0dGhpcy5fYWRkSXRlbSggaXRlbUNsYXNzLCBwYXJlbnQsIGRhdGEgKTtcblxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0X2FkZEl0ZW06IGZ1bmN0aW9uKCBpdGVtQ2xhc3MsIHBhcmVudCwgZGF0YSwgYWZ0ZXIgKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IHRoaXMuZ2V0U2VsZWN0ZWQoKSB8fCB0aGlzLFxuXHRcdFx0XHRkYXRhID0gZGF0YSB8fCB7fSxcblx0XHRcdFx0aXRlbU1vZGVsID0gbmV3IGdyaWQubW9kZWwuR3JpZE9iamVjdCggZGF0YSApLFxuXHRcdFx0XHRpdGVtID0gbmV3IGl0ZW1DbGFzcyh7XG5cdFx0XHRcdFx0Y29udHJvbGxlcjpcdHRoaXMsXG5cdFx0XHRcdFx0bW9kZWw6XHRcdGl0ZW1Nb2RlbCxcblx0XHRcdFx0XHRwYXJlbnQ6XHRcdHBhcmVudFxuXHRcdFx0XHR9KSxcblx0XHRcdFx0JGNvbGxlY3Rpb24sIGFmdGVyO1xuXG5cdFx0XHRhZnRlciA9IGFmdGVyIHx8IGN1cnJlbnQuY2xvc2VzdCggaXRlbUNsYXNzICk7XG5cblx0XHRcdC8vIGFkZCBET00gZWxlbWVudHNcblx0XHRcdCRjb2xsZWN0aW9uID0gcGFyZW50LiQoJz4uY29sbGVjdGlvbicpO1xuXG5cdFx0XHRpZiAoICEhYWZ0ZXIgKSB7XG5cdFx0XHRcdGl0ZW0ucmVuZGVyKCkuJGVsLmluc2VydEFmdGVyKCBhZnRlci4kZWwgKTtcblx0XHRcdFx0JGNvbGxlY3Rpb24udHJpZ2dlcignc29ydCcpOyBcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdCRjb2xsZWN0aW9uLmFwcGVuZCggaXRlbS5yZW5kZXIoKS4kZWwgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYWRkIHRvIG1vZGVsXG5cdFx0XHRwYXJlbnQubW9kZWwuaXRlbXMuYWRkKCBpdGVtTW9kZWwgKTtcblx0XHRcdFxuXHRcdFx0dGhpcy5ncmlkLmluaXRTb3J0YWJsZXMoKTtcblx0XHRcdHRoaXMuZ3JpZC5oYXNDaGFuZ2VkKCk7XG5cblx0XHRcdHRoaXMuc2V0U2VsZWN0ZWQoIGl0ZW0gKTtcblxuXHRcdFx0dGhpcy50cmlnZ2VyKCAnYWRkZWQ6JytpdGVtTW9kZWwuZ2V0KCd0eXBlJyksIGl0ZW0gKTtcblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRnZXRQcmV2SXRlbTogZnVuY3Rpb24oIGN1cnJlbnQgKSB7XG5cdFx0XHR2YXIgcHJldixcblx0XHRcdFx0Y3VycmVudCA9IGN1cnJlbnQgfHwgdGhpcy5nZXRTZWxlY3RlZCgpLFxuXHRcdFx0XHRwcmV2ID0gY3VycmVudC4kZWwucHJldigpLmRhdGEoJ3ZpZXcnKTtcblxuXHRcdFx0aWYgKCBfLmlzVW5kZWZpbmVkKCBwcmV2ICkgJiYgISBjdXJyZW50LnBhcmVudCgpLmlzKCBncmlkLnZpZXcuZWxlbWVudC5HcmlkICkgKSB7XG5cdFx0XHRcdHByZXYgPSBjdXJyZW50LnBhcmVudCgpO1xuXHRcdFx0fSBlbHNlIGlmICghIF8uaXNVbmRlZmluZWQoIHByZXYgKSAmJiAhIHByZXYuaXMoIGdyaWQudmlldy5lbGVtZW50LldpZGdldCApICkge1xuXHRcdFx0XHRwcmV2ID0gcHJldi4kKCcud2lkZ2V0JykubGFzdCgpLmRhdGEoJ3ZpZXcnKVxuXHRcdFx0fVxuXHRcdFx0aWYgKCAhIGZlYXR1cmVzLmxvY2tzICYmIHByZXYgJiYgcHJldi5tb2RlbC5nZXQoICdsb2NrZWQnICkgKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmdldFByZXZJdGVtKCBwcmV2ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcHJldjtcblx0XHR9LFxuXHRcdGdldE5leHRJdGVtOiBmdW5jdGlvbiggY3VycmVudCApIHtcblx0XHRcdHZhciBuZXh0LFxuXHRcdFx0XHRjdXJyZW50ID0gY3VycmVudCB8fCB0aGlzLmdldFNlbGVjdGVkKCk7XG5cblx0XHRcdGlmICggY3VycmVudC4kKCc+LmNvbGxlY3Rpb24nKS5jaGlsZHJlbigpLmxlbmd0aCApIHtcblx0XHRcdFx0bmV4dCA9IGN1cnJlbnQuJCgnPi5jb2xsZWN0aW9uPionKS5maXJzdCgpLmRhdGEoJ3ZpZXcnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG5leHQgPSBjdXJyZW50LiRlbC5uZXh0KCkuZGF0YSgndmlldycpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIF8uaXNVbmRlZmluZWQoIG5leHQgKSApIHtcblx0XHRcdFx0d2hpbGUgKCBfLmlzVW5kZWZpbmVkKCBuZXh0ICkgJiYgISBjdXJyZW50LmlzKCBncmlkLnZpZXcuZWxlbWVudC5HcmlkICkgKSB7XG5cdFx0XHRcdFx0Y3VycmVudCA9IGN1cnJlbnQucGFyZW50KCk7XG5cdFx0XHRcdFx0bmV4dCA9IGN1cnJlbnQuJGVsLm5leHQoKS5kYXRhKCd2aWV3Jyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICggISBmZWF0dXJlcy5sb2NrcyAmJiBuZXh0ICYmIG5leHQubW9kZWwuZ2V0KCAnbG9ja2VkJyApICkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5nZXROZXh0SXRlbSggbmV4dCApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG5leHQ7XG5cdFx0fSxcblxuXG5cdFx0dG9nZ2xlTG9ja1N0YXRlOiBmdW5jdGlvbiggKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0b2xkU3RhdGU7XG5cdFx0XHRpZiAoICEhIGl0ZW0gKSB7XG5cdFx0XHRcdG9sZFN0YXRlID0gISEgaXRlbS5tb2RlbC5nZXQoICdsb2NrZWQnICk7XG5cdFx0XHRcdGl0ZW0ubW9kZWwuc2V0KCAnbG9ja2VkJywgIW9sZFN0YXRlICk7XG5cdFx0XHRcdHRoaXMucmVGb2N1cygpXG5cdFx0XHR9XG5cdFx0XHR0aGlzLnRvb2xiYXIudXBkYXRlKCk7XG5cdFx0fSxcblx0XHRcblx0XHRlZGl0SXRlbTogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRlICYmIGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFx0aWYgKCAkKCAnYm9keScgKS5oYXNDbGFzcyggJ2dyaWQtbW9kYWwtb3BlbicgKSApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgc2VsZlx0XHQ9IHRoaXMsXG5cdFx0XHRcdGN1cnJlbnRcdFx0PSB0aGlzLmdldFNlbGVjdGVkKCksXG5cdFx0XHRcdG5leHRcdFx0PSB0aGlzLmdldE5leHRJdGVtKCBjdXJyZW50ICksXG5cdFx0XHRcdHByZXZcdFx0PSB0aGlzLmdldFByZXZJdGVtKCBjdXJyZW50ICksXG5cdFx0XHRcdG1vZGFsXHRcdD0gbmV3IE1vZGFsKCB7IFxuXHRcdFx0XHRcdGNvbnRyb2xsZXI6IHRoaXMsXG5cdFx0XHRcdFx0bmV4dDogISEgbmV4dCxcblx0XHRcdFx0XHRwcmV2OiAhISBwcmV2LFxuXHRcdFx0XHR9ICksXG5cdFx0XHRcdC8vc2V0dGluZ3NcdD0gb3B0aW9ucy5zZXR0aW5nc1sgY3VycmVudC5nZXRDbGFzc05hbWUoKS50b0xvd2VyQ2FzZSgpIF0sXG5cdFx0XHRcdGVkaXRvclx0XHQ9IG9wdGlvbnMuZWRpdG9yc1sgY3VycmVudC5nZXRDbGFzc05hbWUoKS50b0xvd2VyQ2FzZSgpIF0sXG5cdFx0XHRcdGRpYWxvZywgdGl0bGUgPSBbXSwgY3VycmVudFRpdGxlID0gY3VycmVudCwgdGl0bGVTZWdtZW50O1xuLy9cdFx0XHR0aXRsZSA9IFtdO1xuXG5cdFx0XHR3aGlsZSAoICEhIGN1cnJlbnRUaXRsZSAmJiAhIGN1cnJlbnRUaXRsZS5pcyggZ3JpZC52aWV3LmVsZW1lbnQuR3JpZCApICkge1xuXHRcdFx0XHR0aXRsZVNlZ21lbnQgPSBjdXJyZW50VGl0bGUuZ2V0VGl0bGUoKTsgXG5cdFx0XHRcdHRpdGxlLnVuc2hpZnQoIHRpdGxlU2VnbWVudCApO1xuXHRcdFx0XHRjdXJyZW50VGl0bGUgPSBjdXJyZW50VGl0bGUucGFyZW50KCk7XG5cdFx0XHR9XG4vL1x0XHRcdGNvbnNvbGUubG9nKGN1cnJlbnRUaXRsZS5pcyk7cmV0dXJuO1xuXHRcdFx0ZGlhbG9nXHRcdD0gbmV3IGdyaWQudmlldy5FZGl0RGlhbG9nKCB7IFxuXHRcdFx0XHR0aXRsZTogdGl0bGUuam9pbiggJyDigLogJyApLFxuXHRcdFx0XHRjb250cm9sbGVyOiB0aGlzICwgXG5cdFx0XHRcdG1vZGVsOiBjdXJyZW50Lm1vZGVsLCBcblx0XHRcdFx0aXRlbTogY3VycmVudCxcblx0XHRcdC8vXHRzZXR0aW5nczogc2V0dGluZ3MsIFxuXHRcdFx0XHRlZGl0b3I6IGVkaXRvciBcblx0XHRcdH0gKTtcblxuXHRcdFx0ZGlhbG9nLm9uKCAnZG9uZScsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHNlbGYuZ3JpZC5oYXNDaGFuZ2VkKCk7XG5cdFx0XHRcdG1vZGFsLmNsb3NlKCk7XG5cdFx0XHR9LCBtb2RhbCApO1xuXHRcdFx0XG5cdFx0XHRtb2RhbFxuXHRcdFx0XHQub24oJ2Nsb3NlJyxmdW5jdGlvbiggZSApIHtcblx0XHRcdFx0XHRkaWFsb2cuZGlzbWlzcygpO1xuXHRcdFx0XHRcdHNlbGYuZ2V0U2VsZWN0ZWQoKS4kZWwuZm9jdXMoKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0Lm9uKCduZXh0JyxmdW5jdGlvbiggZSApIHtcblx0XHRcdFx0XHRkaWFsb2cuYXBwbHlDaGFuZ2VzKCk7XG5cdFx0XHRcdFx0c2VsZi5ncmlkLmhhc0NoYW5nZWQoKTtcblx0XHRcdFx0XHRtb2RhbC5jbG9zZSgpO1xuXHRcdFx0XHRcdHNlbGYuc2V0U2VsZWN0ZWQoIG5leHQgKTtcblx0XHRcdFx0XHRzZWxmLmVkaXRJdGVtKCBlICk7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5vbigncHJldicsZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0ZGlhbG9nLmFwcGx5Q2hhbmdlcygpO1xuXHRcdFx0XHRcdHNlbGYuZ3JpZC5oYXNDaGFuZ2VkKCk7XG5cdFx0XHRcdFx0bW9kYWwuY2xvc2UoKTtcblx0XHRcdFx0XHRzZWxmLnNldFNlbGVjdGVkKCBwcmV2ICk7XG5cdFx0XHRcdFx0c2VsZi5lZGl0SXRlbSggZSApO1xuXHRcdFx0XHR9KTtcblx0XHRcdG1vZGFsLmNvbnRlbnQoIGRpYWxvZyApLm9wZW4oKTtcblx0XHRcdG1vZGFsLiRlbC5mb2N1cygpO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0ZGVsZXRlSXRlbTogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRlICYmIGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFx0dmFyIGN1cnJlbnQgPSB0aGlzLmdldFNlbGVjdGVkKCksXG5cdFx0XHRcdHBhcmVudCA9IGN1cnJlbnQucGFyZW50KCk7XG5cblx0XHRcdHRoaXMuX2RlbGV0ZUl0ZW0oIHRoaXMuZ2V0U2VsZWN0ZWQoKSApO1xuXHRcdFx0dGhpcy5zZXRTZWxlY3RlZCggcGFyZW50ICk7XG5cdFx0fSxcblx0XHRfZGVsZXRlSXRlbTogZnVuY3Rpb24oaXRlbSkge1xuXHRcdFx0dmFyIHBhcmVudCA9IGl0ZW0ucGFyZW50KCk7XG5cblx0XHRcdGl0ZW0ucmVtb3ZlKCk7XG5cdFx0XHRwYXJlbnQubW9kZWwuaXRlbXMucmVtb3ZlKCBpdGVtLm1vZGVsICk7XG5cblx0XHRcdHRoaXMuZ3JpZC5oYXNDaGFuZ2VkKCk7XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdHJlRm9jdXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzLmdldFNlbGVjdGVkKCk7XG5cdFx0XHQhISBpdGVtICYmIGl0ZW0ucmVGb2N1cygpO1xuXHRcdH0sXG4vLyBcdFx0bG9ja0l0ZW06IGZ1bmN0aW9uKCBlICkge1xuLy8gXHRcdFx0dmFyIGN1cnJlbnQgPSB0aGlzLmdldFNlbGVjdGVkKCk7XG4vLyBcdFx0XHRjdXJyZW50Lm1vZGVsLnNldCggJ2xvY2tlZCcsICQoZS50YXJnZXQpLmlzKCAnOmNoZWNrZWQnICkgKTtcbi8vIFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcbi8vIFx0XHR9LFxuXHRcdFxuXHRcdHNldFZpc2libGU6IGZ1bmN0aW9uKCB2aXNpYmlsaXR5ICkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSB0aGlzLmdldFNlbGVjdGVkKCksXG5cdFx0XHRcdHByb3AgPSAndmlzaWJpbGl0eV8nICsgdGhpcy50b29sYmFyLndoaWNoVmlldygpO1xuXHRcdFx0aWYgKCBjdXJyZW50ICkge1xuXHRcdFx0XHRjdXJyZW50Lm1vZGVsLnNldCggcHJvcCwgdmlzaWJpbGl0eSApO1xuXHRcdFx0XHRjdXJyZW50LnJlRm9jdXMoKVxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQgKlx0VEVNUExBVEVTXG5cdFx0ICovXG5cdFx0Y3JlYXRlVGVtcGxhdGU6IGZ1bmN0aW9uKCApIHtcblx0XHRcdC8vIGdldCBzZWxlY3Rpb25cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0Y3VycmVudCA9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0dGVtcGxhdGUgPSBuZXcgZ3JpZC5tb2RlbC5HcmlkVGVtcGxhdGUoKSxcblx0XHRcdFx0cHJvbXB0ID0gbmV3IGdyaWQudmlldy51aS5Qcm9tcHQoIHtcblx0XHRcdFx0XHR0aXRsZTogbDEwbi5UZW1wbGF0ZU5hbWUsXG5cdFx0XHRcdFx0ZGVzY3JpcHRpb246IGwxMG4uQ3JlYXRlVGVtcGxhdGVEZXNjcmlwdGlvbixcblx0XHRcdFx0XHRkZWZhdWx0VmFsdWU6IGwxMG5bIGN1cnJlbnQuZ2V0Q2xhc3NOYW1lKCkgXSArICcgJyArIGwxMG4uVGVtcGxhdGVcblx0XHRcdFx0fSApO1xuXG5cdFx0XHRwcm9tcHQub24oICdjb25maXJtJywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdHZhciBuYW1lID0gcHJvbXB0LmdldFZhbHVlKCksXG5cdFx0XHRcdFx0c2x1ZyA9IGdyaWQudXRpbHMuc2FuaXRpemVUaXRsZSggbmFtZSApLFxuXHRcdFx0XHRcdHR5cGUgPSBjdXJyZW50LmdldENsYXNzTmFtZSgpLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRcdFx0Ly8gYXNrIGZvciBuYW1lXG5cdFx0XHRcdHRlbXBsYXRlLnNldCggJ25hbWUnLCBuYW1lICk7XG5cdFx0XHRcdHRlbXBsYXRlLnNldCggJ3NsdWcnLCBzbHVnICk7XG5cdFx0XHRcdHRlbXBsYXRlLnNldCggJ3R5cGUnLCB0eXBlICk7XG5cdFx0XHRcdHRlbXBsYXRlLnNldCggJ2RhdGEnLCBjdXJyZW50Lm1vZGVsLnRvSlNPTigpICk7XG5cdFx0XHRcblxuXHRcdFx0XHQvLyBzYXZlIGpzb25cblx0XHRcdFx0dGVtcGxhdGUub25jZSgnc3luYycsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZhciBzbHVnID0gdGVtcGxhdGUuZ2V0KCdzbHVnJyk7XG5cdFx0XHRcdFx0dGVtcGxhdGUuc2V0KCAnaWQnLCBzbHVnICk7XG5cdFx0XHRcdFx0Ly8gc2V0IGl0ZW0gdGVtcGxhdGVcblx0XHRcdFx0XHRjdXJyZW50Lm1vZGVsLnNldCggJ3RlbXBsYXRlJywgc2x1ZyApO1xuXG5cdFx0XHRcdFx0Ly8gYWRkIHRvIHRlbXBsYXRlIHNlbGVjdFxuXHRcdFx0XHRcdGdyaWQudGVtcGxhdGVzW3R5cGVdLmFkZCggdGVtcGxhdGUgKTtcblxuXHRcdFx0XHRcdHNlbGYudG9vbGJhci51cGRhdGUoKTtcblxuXHRcdFx0XHRcdHNlbGYudG9vbGJhci5zZXR1cFRlbXBsYXRlU2VsZWN0cygpO1xuXG5cdFx0XHRcdFx0c2VsZi5ncmlkLmhhc0NoYW5nZWQoKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0dGVtcGxhdGUuc2F2ZSgpO1xuXHRcdFx0XHRjdXJyZW50LnJlRm9jdXMoKTtcblx0XHRcdH0sIHRoaXMgKS5vcGVuKCk7XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXG5cdFx0dXBkYXRlVGVtcGxhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gZmluZCB0aGUgdGVtcGxhdGVcblx0XHRcdHZhciBjdXJyZW50ID0gdGhpcy5nZXRTZWxlY3RlZCgpLFxuXHRcdFx0XHR0eXBlID0gY3VycmVudC5nZXRDbGFzc05hbWUoKS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRzbHVnID0gY3VycmVudC5tb2RlbC5nZXQoICd0ZW1wbGF0ZScgKTtcblx0XHRcdHRlbXBsYXRlID0gZ3JpZC50ZW1wbGF0ZXMuZ2V0KCB0eXBlLCBzbHVnICk7XG5cdFx0XHR0ZW1wbGF0ZS5zZXQoICdkYXRhJywgY3VycmVudC5tb2RlbC50b0pTT04oKSApO1xuXHRcdFx0dGVtcGxhdGUuc2F2ZSgpO1xuXHRcdFx0Y3VycmVudC5yZUZvY3VzKCk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblxuXHRcdG9wZW5UZW1wbGF0ZU1hbmFnZXI6IGZ1bmN0aW9uKCApIHtcblx0XHRcdC8vIGZpbmQgdGhlIHRlbXBsYXRlXG5cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0bW9kYWwgPSBuZXcgd3AubWVkaWEudmlldy5Nb2RhbCggeyBjb250cm9sbGVyOiB0aGlzIH0gKSxcblx0XHRcdFx0Y3VycmVudCA9IHRoaXMuZ2V0U2VsZWN0ZWQoKSxcblx0XHRcdFx0ZGlhbG9nID0gbmV3IGdyaWQudmlldy5NYW5hZ2VUZW1wbGF0ZXNEaWFsb2coIHsgY29udHJvbGxlcjogdGhpcywgdGl0bGU6IGwxMG4uTWFuYWdlVGVtcGxhdGVzIH0gKTtcblxuXHRcdFx0ZGlhbG9nLm9uKCAnZG9uZScsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdG1vZGFsLmNsb3NlKCk7XG5cdFx0XHR9LCBtb2RhbCApO1xuXG5cdFx0XHRtb2RhbFxuXHRcdFx0XHQuY29udGVudCggZGlhbG9nIClcblx0XHRcdFx0Lm9uKCdjbG9zZScsZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0c2VsZi50b29sYmFyLnNldHVwVGVtcGxhdGVTZWxlY3RzKCk7XG5cdFx0XHRcdFx0ISFjdXJyZW50ICYmIGN1cnJlbnQuJGVsLmZvY3VzKCk7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5vcGVuKCk7XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblxuXHR9KTtcblxuXHRfLmV4dGVuZChncmlkLCB7XG5cdFx0Z2V0QWN0aXZlRWRpdG9yOiBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBhY3RpdmVfZWRpdG9yO1xuXHRcdH0sXG5cdFx0c2V0QWN0aXZlRWRpdG9yOiBmdW5jdGlvbiggZWRpdG9yICkge1xuXHRcdFx0YWN0aXZlX2VkaXRvciA9IGVkaXRvcjtcblx0XHR9LFxuXHR9KTtcblxufSkoIGpRdWVyeSwgd2luZG93LmdyaWQgKTsiLCIoZnVuY3Rpb24oICQsIGdyaWQgKXtcblx0dmFyIERpYWxvZywgSW5wdXRXcmFwLCBJbnB1dEdyb3VwLCBUZW1wbGF0ZXNMaXN0LCBBY3RpdmVJbnB1dCwgUGFyZW50VmlldywgQ2hpbGRWaWV3LFxuXHRcdEdyaWRcdFx0PSBncmlkLnZpZXcuR3JpZCwgXG5cdFx0Q29udGFpbmVyXHQ9IGdyaWQudmlldy5Db250YWluZXIsIFxuXHRcdFJvd1x0XHRcdD0gZ3JpZC52aWV3LlJvdywgXG5cdFx0Q2VsbFx0XHQ9IGdyaWQudmlldy5DZWxsLCBcblx0XHRXaWRnZXRcdFx0PSBncmlkLnZpZXcuV2lkZ2V0LFxuXHRcdG9wdGlvbnNcdFx0PSBncmlkYnVpbGRlci5vcHRpb25zLFxuXHRcdGZlYXR1cmVzXHQ9IGdyaWRidWlsZGVyLm9wdGlvbnMuZmVhdHVyZXMsXG5cdFx0bDEwblx0XHQ9IGdyaWRidWlsZGVyLmwxMG4sXG5cdFx0aW5wdXRUeXBlc1x0PSBbJ3RleHQnLCd0ZXh0YXJlYScsJ2NvbG9yJywnbnVtYmVyJywnbWVkaWEnLCdzZWxlY3QnLCdjaGVja2JveCcsJ3JhZGlvJywgJ3JhbmdlJywgJ2xhYmVsJ10sXG5cdFx0aW5wdXRzXHRcdD0ge1xuXHRcdFx0aW5pdGVkOiBmYWxzZSxcblx0XHR9LFxuXG5cdFx0bWNlWkluZGV4O1xuXG5cblxuXHR2YXIgaW5wdXRQcm90b3R5cGUgPSB7XG5cdFx0cmVuZGVyOiBmdW5jdGlvbiggKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHR2YWx1ZSA9ICggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiB0aGlzLm9wdGlvbnMudmFsdWUgJiYgdGhpcy5vcHRpb25zLnZhbHVlICE9PSBudWxsICkgPyB0aGlzLm9wdGlvbnMudmFsdWUgOiB0aGlzLm9wdGlvbnMuc2V0dGluZ3MuZGVmYXVsdDtcblx0XHRcdHRoaXMuJGVsLmFkZENsYXNzKCAnaW5wdXQtJyArIHRoaXMub3B0aW9ucy5zZXR0aW5ncy5uYW1lICk7XG5cdFx0XHR0aGlzLnNldFZhbHVlKCB2YWx1ZSApO1xuXHRcdFx0c3dpdGNoICggdGhpcy5vcHRpb25zLnNldHRpbmdzLnR5cGUgKSB7XG5cdFx0XHRcdGNhc2UgJ251bWJlcic6XG5cdFx0XHRcdFx0Xy5lYWNoKCBbJ21pbicsJ21heCcsJ3N0ZXAnXSwgZnVuY3Rpb24oYXR0cikge1xuXHRcdFx0XHRcdFx0aWYgKCB0eXBlb2Ygc2VsZi5vcHRpb25zLnNldHRpbmdzW2F0dHJdICE9PSAndW5kZWZpbmVkJyApIHtcblx0XHRcdFx0XHRcdFx0c2VsZi4kKCdbdHlwZT1cIm51bWJlclwiXScpLmF0dHIoIGF0dHIsIHNlbGYub3B0aW9ucy5zZXR0aW5nc1sgYXR0ciBdICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ2NvbG9yJzpcblx0XHRcdFx0XHR0aGlzLiQoJ2lucHV0LmNvbG9yLXBpY2tlcicpLndwQ29sb3JQaWNrZXIoe1xuXHRcdFx0XHRcdFx0aGlkZTp0cnVlLFxuXHRcdFx0XHRcdFx0cGFsZXR0ZXM6IHNlbGYub3B0aW9ucy5zZXR0aW5ncy5wYWxldHRlc1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdtZWRpYSc6XG5cdFx0XHRcdFx0dmFyIGZyYW1lID0gbnVsbDtcblx0XHRcdFx0XHR0aGlzLiQoJy5zZWxlY3QtbWVkaWEnKS5vbiggJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGZyYW1lID09PSBudWxsICkge1xuXHRcdFx0XHRcdFx0XHRmcmFtZSA9IHdwLm1lZGlhKHtcblx0XHRcdFx0XHRcdFx0XHR0aXRsZTogc2VsZi5vcHRpb25zLnNldHRpbmdzLnRpdGxlLFxuXHRcdFx0XHRcdFx0XHRcdGxpYnJhcnk6IHsgdHlwZTogc2VsZi5vcHRpb25zLnNldHRpbmdzLm1pbWV0eXBlIH0sXG5cdFx0XHRcdFx0XHRcdFx0YnV0dG9uOiB7IHRleHQ6IGwxMG4uRG9uZSwgY2xvc2U6IHRydWUgfVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0ZnJhbWUub24oICdzZWxlY3QnLCBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdHZhciBhdHRhY2htZW50ID0gZnJhbWUuc3RhdGUoKS5nZXQoJ3NlbGVjdGlvbicpLmZpcnN0KCkuYXR0cmlidXRlcywgXG5cdFx0XHRcdFx0XHRcdFx0XHR1cmw7XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5zZXRWYWx1ZSggYXR0YWNobWVudC5pZCApO1xuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGZyYW1lLm9wZW4oKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAncmFuZ2UnOlxuXHRcdFx0XHRcdHRoaXMuJCgnaW5wdXQnKS5vbiggJ2NoYW5nZScsIGZ1bmN0aW9uKCkgeyBzZWxmLnVwZGF0ZVZhbHVlKCkgfSApO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0dGhpcy51cGRhdGVWYWx1ZSgpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHR1cGRhdGVWYWx1ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLiQoJy5kaXNwbGF5LXZhbHVlJykudGV4dCggdGhpcy5nZXRWYWx1ZSgpICk7XG5cdFx0fSxcblx0XHRzZXRWYWx1ZTogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIHVybDtcblx0XHRcdHN3aXRjaCAoIHRoaXMub3B0aW9ucy5zZXR0aW5ncy50eXBlICkge1xuXHRcdFx0XHRjYXNlICdzZWxlY3QnOlxuXHRcdFx0XHRcdHRoaXMuJCgnc2VsZWN0JykudmFsKCB2YWx1ZSApO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdyYWRpbyc6XG5cdFx0XHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkJykucHJvcCgnY2hlY2tlZCcsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXVt2YWx1ZT1cIicrdmFsdWUrJ1wiXScpLnByb3AoJ2NoZWNrZWQnLCB0cnVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlICdjaGVja2JveCc6XG5cdFx0XHRcdFx0dGhpcy4kKCdbdHlwZT1cImNoZWNrYm94XCJdJykucHJvcCgnY2hlY2tlZCcsICEhIHZhbHVlICk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgJ2NvbG9yJzpcblx0XHRcdFx0XHR0aGlzLiQoJ2lucHV0LmNvbG9yLXBpY2tlcicpLnZhbCggdmFsdWUgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAnbWVkaWEnOlxuXHRcdFx0XHRcdHRoaXMuJCgnLnRodW1ibmFpbCcpLmh0bWwoICcnICk7XG5cdFx0XHRcdFx0aWYgKCAhIXZhbHVlICkge1xuXHRcdFx0XHRcdFx0dGhpcy4kKCdbbmFtZT1cIm1lZGlhX2lkXCJdJykudmFsKCB2YWx1ZSApO1xuXHRcdFx0XHRcdFx0dmFyIGF0dGFjaG1lbnQgPSBuZXcgd3AubWVkaWEubW9kZWwuQXR0YWNobWVudCh7aWQ6dmFsdWV9KSwgXG5cdFx0XHRcdFx0XHRcdHNlbGYgPSB0aGlzO1xuXHRcdFx0XHRcdFx0YXR0YWNobWVudC5vbmNlKCdjaGFuZ2UnLGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgX2ZpbGVuYW1lLCB1cmxcblx0XHRcdFx0XHRcdFx0aWYgKCAhISBhdHRhY2htZW50LmdldCgnc2l6ZXMnKSApIHtcblx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dXJsID0gYXR0YWNobWVudC5nZXQoJ3NpemVzJykudGh1bWJuYWlsLnVybDtcblx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFdlJ2xsIHVzZSB0aGUgZnVsbCBpbWFnZSBpbnN0ZWFkXG5cdFx0XHRcdFx0XHRcdFx0XHR1cmwgPSBhdHRhY2htZW50LmdldCgnc2l6ZXMnKS5mdWxsLnVybDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dXJsID0gYXR0YWNobWVudC5nZXQoJ2ljb24nKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRfZmlsZW5hbWUgPSBuZXcgd3AubWVkaWEuVmlldyggeyB0YWdOYW1lOidzcGFuJywgY2xhc3NOYW1lOiAnZmlsZW5hbWUnIH0gKTtcblx0XHRcdFx0XHRcdFx0X2ZpbGVuYW1lLiRlbC50ZXh0KCBhdHRhY2htZW50LmdldCgndGl0bGUnKSApO1xuXG5cdFx0XHRcdFx0XHRcdHNlbGYuJCgnLnRodW1ibmFpbCcpLmFwcGVuZCggXG5cblx0XHRcdFx0XHRcdFx0XHQkKCc8aW1nIC8+JykuYXR0cignc3JjJyx1cmwpLCBcblxuXHRcdFx0XHRcdFx0XHRcdG5ldyB3cC5tZWRpYS52aWV3LkJ1dHRvbih7IFxuXHRcdFx0XHRcdFx0XHRcdFx0dGV4dDpsMTBuLlJlbW92ZU1lZGlhLCBcblx0XHRcdFx0XHRcdFx0XHRcdGNsaWNrOiBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRzZWxmLnNldFZhbHVlKG51bGwpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0pLiRlbC5hZGRDbGFzcygnZGFzaGljb25zIGRhc2hpY29ucy1kaXNtaXNzJyksXG5cblx0XHRcdFx0XHRcdFx0XHRfZmlsZW5hbWUuJGVsXG5cblx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0ZGVsZXRlKCBhdHRhY2htZW50ICk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdGF0dGFjaG1lbnQuZmV0Y2goKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGhpcy4kKCdbbmFtZT1cIm1lZGlhX2lkXCJdJykucmVtb3ZlQXR0ciggJ3ZhbHVlJyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSAndGV4dGFyZWEnOlxuXHRcdFx0XHRcdHRoaXMuJCgndGV4dGFyZWEnKS52YWwoIHZhbHVlICk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0dGhpcy4kKCdpbnB1dCcpLnZhbCggdmFsdWUgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9LFxuXHRcdGdldFZhbHVlOiBmdW5jdGlvbigpIHtcblx0XHRcdHN3aXRjaCAoIHRoaXMub3B0aW9ucy5zZXR0aW5ncy50eXBlICkge1xuXHRcdFx0XHRjYXNlICdzZWxlY3QnOlxuXHRcdFx0XHRcdHJldHVybiB0aGlzLiQoJ3NlbGVjdCcpLnZhbCgpO1xuXHRcdFx0XHRjYXNlICdyYWRpbyc6XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkJykudmFsKCk7XG5cdFx0XHRcdGNhc2UgJ2NoZWNrYm94Jzpcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy4kKCdbdHlwZT1cImNoZWNrYm94XCJdJykucHJvcCgnY2hlY2tlZCcpO1xuXHRcdFx0XHRjYXNlICdjb2xvcic6XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuJCgnaW5wdXQuY29sb3ItcGlja2VyJykudmFsKCk7XG5cdFx0XHRcdGNhc2UgJ3RleHRhcmVhJzpcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy4kKCd0ZXh0YXJlYScpLnZhbCgpO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHJldHVybiB0aGlzLiQoJ2lucHV0JykudmFsKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRkaXNtaXNzOiBmdW5jdGlvbigpe31cblx0fTtcblxuXHRmdW5jdGlvbiBnZXRJbnB1dFR5cGVzKCkge1xuXHRcdGlmICggISBpbnB1dHMuaW5pdGVkICkge1xuXHRcdFx0Xy5lYWNoKCBpbnB1dFR5cGVzLCBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0aW5wdXRzW3R5cGVdXHQ9IHdwLm1lZGlhLlZpZXcuZXh0ZW5kKCBfLmV4dGVuZCgge1xuXHRcdFx0XHRcdHRlbXBsYXRlOiB3cC50ZW1wbGF0ZSggJ2dyaWQtdWktaW5wdXQtJyArIHR5cGUgKVxuXHRcdFx0XHR9LCBpbnB1dFByb3RvdHlwZSApICk7XG5cdFx0XHR9KTtcblx0XHRcdGlucHV0cy5pbml0ZWQgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gaW5wdXRzO1xuXHR9XG5cblx0UGFyZW50VmlldyA9IHdwLm1lZGlhLlZpZXcuZXh0ZW5kKCB7XG5cdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdHRoaXMuY2hpbGRyZW4gPSBbXTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0Xy5lYWNoKHRoaXMuY2hpbGRyZW4sZnVuY3Rpb24oY2hpbGQsaSl7XG5cdFx0XHRcdGNoaWxkLnJlbmRlcigpO1xuXHRcdFx0XHRzZWxmLiRlbC5hcHBlbmQoY2hpbGQuJGVsKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fSApO1xuXHRDaGlsZFZpZXcgPSBQYXJlbnRWaWV3LmV4dGVuZCgge1xuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdFx0UGFyZW50Vmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHQhIW9wdGlvbnMucGFyZW50ICYmIG9wdGlvbnMucGFyZW50LmNoaWxkcmVuLnB1c2goIHRoaXMgKTtcblx0XHR9XG5cdH0gKTtcblxuXHRpbnB1dHMud2lkZ2V0X2luc3RhbmNlID0gd3AubWVkaWEuVmlldy5leHRlbmQoIHtcblx0XHR0YWdOYW1lOiAnZGl2Jyxcblx0XHRjbGFzc05hbWU6ICd3aWRnZXQtaW5zdGFuY2Ugd2lkZ2V0LWluc2lkZScsXG5cdFx0XG5cdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oICkge1xuXHRcdFx0d3AubWVkaWEuVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHR0aGlzLiRmb3JtID0gJCgnPGZvcm0gLz4nKTtcblx0XHRcdHRoaXMuJHNwaW5uZXIgPSAkKCAnPHNwYW4gY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJ2aXNpYmlsaXR5OnZpc2libGU7ZmxvYXQ6bm9uZVwiPjwvc3Bhbj4nICk7XG4vL1x0XHRcdHRoaXMuJGNvbnRlbnQgPSAkKCAnPGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50XCI+PC9kaXY+JyApO1xuLy9cdFx0XHR0aGlzLiRmb3JtLmFwcGVuZCggJzxzcGFuIGNsYXNzPVwic3Bpbm5lclwiIHN0eWxlPVwidmlzaWJpbGl0eTp2aXNpYmxlO2Zsb2F0Om5vbmVcIj48L3NwYW4+JyApO1xuXG5cdFx0XHR0aGlzLiRlbC5hcHBlbmQoIHRoaXMuJHNwaW5uZXIgKTtcblx0XHRcdHRoaXMuJGVsLmFwcGVuZCggdGhpcy4kZm9ybSApO1xuLy9cdFx0XHR0aGlzLiRmb3JtLmFwcGVuZCggdGhpcy4kY29udGVudCApO1xuXG5cdFx0XHR0aGlzLiR3aWRnZXRcdD0gbnVsbDtcblxuXHRcdFx0dmFyIHNlbGZcdFx0PSB0aGlzO1xuXG5cblx0XHRcdCQuYWpheCh7XG5cdFx0XHRcdG1ldGhvZDogJ3Bvc3QnLFxuXHRcdFx0XHR1cmw6IG9wdGlvbnMuYWpheHVybCxcblx0XHRcdFx0Y29tcGxldGU6ZnVuY3Rpb24oeGhyLHN0YXR1cyl7fSxcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24oIGRhdGEsIHN0YXR1cywgeGhyICkge1xuXHRcdFx0XHRcdHNlbGYuJHNwaW5uZXIucmVtb3ZlKCk7XG5cdFx0XHRcdFx0c2VsZi4kd2lkZ2V0ID0gJChkYXRhKTtcblx0XHRcdFx0XHRzZWxmLiRmb3JtLmh0bWwoJycpLmFwcGVuZCggc2VsZi4kd2lkZ2V0ICk7XG5cdFx0XHRcdFx0c2VsZi5wcmVwYXJlTUNFKCk7XG5cdFx0XHRcdFx0d3AubWVkaWFXaWRnZXRzLmhhbmRsZVdpZGdldEFkZGVkKCB7fSwgc2VsZi4kZWwucGFyZW50KCkgKTtcblx0XHRcdFx0XHR3cC50ZXh0V2lkZ2V0cy5oYW5kbGVXaWRnZXRBZGRlZCgge30sIHNlbGYuJGVsLnBhcmVudCgpICk7XG4vL1x0XHRcdFx0XHQkKGRvY3VtZW50KS50cmlnZ2VyKCAnd2lkZ2V0LWFkZGVkJywgWyBzZWxmLiR3aWRnZXQgXSApOyAvLyBuZWNlc3NhcnkgZm9yIHRpbnltY2Ugd2lkZ2V0XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGRhdGE6IHtcblx0XHRcdFx0XHRhY3Rpb24gOiAnZ3JpZGJ1aWxkZXItZ2V0LXdpZGdldCcsXG5cdFx0XHRcdFx0bm9uY2UgIDogb3B0aW9ucy5nZXRfd2lkZ2V0X25vbmNlLFxuXHRcdFx0XHRcdHdpZGdldF9jbGFzczogdGhpcy5vcHRpb25zLm1vZGVsLmdldCgnd2lkZ2V0X2NsYXNzJyksXG5cdFx0XHRcdFx0aW5zdGFuY2U6IEpTT04uc3RyaW5naWZ5KCB0aGlzLm9wdGlvbnMubW9kZWwuZ2V0KCdpbnN0YW5jZScpIClcblx0XHRcdFx0fSxcblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRoYXNNQ0U6IGZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gdGhpcy5nZXRNQ0UoKS5sZW5ndGggPiAwO1x0XHRcdFxuXHRcdH0sXG5cdFx0Z2V0TUNFOiBmdW5jdGlvbiggc2VsICkge1xuXHRcdFx0dmFyICR0ZXh0YXJlYXMgPSB0aGlzLiQoICcubWNlLXRpbnltY2UgKyB0ZXh0YXJlYSwgLnF1aWNrdGFncy10b29sYmFyICsgdGV4dGFyZWEnICksXG5cdFx0XHRcdGVkaXRvcnMgPSBbXTtcblx0XHRcdF8uZWFjaCggdGlueU1DRS5lZGl0b3JzLCBmdW5jdGlvbiggZWQsIGkgKSB7XG5cdFx0XHRcdCR0ZXh0YXJlYXMuZWFjaChmdW5jdGlvbihpLGVsKXtcblx0XHRcdFx0XHRpZiAoIGVsID09PSBlZC50YXJnZXRFbG0gKSB7XG5cdFx0XHRcdFx0XHRlZGl0b3JzLnB1c2goIGVkICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KVxuXHRcdFx0fSApO1xuXHRcdFx0cmV0dXJuIGVkaXRvcnM7XG5cdFx0fSxcblx0XHRnZXRWYWx1ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdHJldCA9IHt9O1xuXG5cdFx0XHQvLyBzYXZlIHRpbnltY2UuXG5cdFx0XHRfLmVhY2goIHRoaXMuZ2V0TUNFKCksIGZ1bmN0aW9uKGVkKXtcblx0XHRcdFx0ZWQuc2F2ZSgpO1xuXHRcdFx0fSk7XG5cblx0XHRcdF8uZWFjaCggdGhpcy4kZm9ybS5zZXJpYWxpemVBcnJheSgpLCBmdW5jdGlvbiggdmFsICkge1xuXHRcdFx0XHR2YXIgbmFtZSwgbWF0Y2hlcyA9IHZhbC5uYW1lLm1hdGNoKCAvXFxbKFthLXowLTktX10rKVxcXSQvZyApO1xuXHRcdFx0XHRpZiAoIG1hdGNoZXMgKSB7XG5cdFx0XHRcdFx0bmFtZSA9IG1hdGNoZXMubGVuZ3RoID8gbWF0Y2hlc1swXS5yZXBsYWNlKC9bXFxbXFxdXSsvZywnJykgOiB2YWwubmFtZTtcblx0XHRcdFx0XHRyZXRbIG5hbWUgXSA9IHZhbC52YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0sXG5cdFx0c2V0VmFsdWU6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZGlzbWlzczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgd2lkZ2V0SWQgPSB0aGlzLiRlbC5wYXJlbnQoKS5maW5kKCcud2lkZ2V0LWluc2lkZSA+IGZvcm0sIC53aWRnZXQtaW5zaWRlID4gLmZvcm0nKS5maW5kKCcgPiAud2lkZ2V0LWlkJykudmFsKCk7XG5cdFx0XHRpZiAoIHdwLm1lZGlhV2lkZ2V0cy53aWRnZXRDb250cm9sc1sgd2lkZ2V0SWQgXSApIHtcblx0XHRcdFx0ZGVsZXRlKCB3cC5tZWRpYVdpZGdldHMud2lkZ2V0Q29udHJvbHNbIHdpZGdldElkIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggd3AudGV4dFdpZGdldHMud2lkZ2V0Q29udHJvbHNbIHdpZGdldElkIF0gKSB7XG5cdFx0XHRcdGRlbGV0ZSggd3AudGV4dFdpZGdldHMud2lkZ2V0Q29udHJvbHNbIHdpZGdldElkIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0JChkb2N1bWVudCkudHJpZ2dlcigge3R5cGU6J3dpZGdldC1yZW1vdmVkJyx0YXJnZXQ6IHRoaXMuJHdpZGdldCB9ICk7IC8vIG5lY2Vzc2FyeSBmb3IgdGlueW1jZSB3aWRnZXRcblx0XHRcdC8vIHJlbW92ZSB0aW55bWNlLlxuXHRcdFx0Xy5lYWNoKCB0aGlzLmdldE1DRSgpLCBmdW5jdGlvbihlZCl7XG5cdFx0XHRcdHRpbnltY2UucmVtb3ZlKCBlZCApO1xuXHRcdFx0fSk7XG5cblx0XHRcdFxuXHRcdFx0dGhpcy5yZXNldE1DRSgpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblxuXHRcdHByZXBhcmVNQ0U6IGZ1bmN0aW9uKCl7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdG1vZGFsID0gdGhpcy4kZWwuY2xvc2VzdCgnLmdyaWQtdWktbW9kYWwnKS5nZXQoMCk7XG5cdFx0XHR0aGlzLl9wcmV2TUNFID0ge307XG5cdFx0XHRcblx0XHRcdGlmICggISBtb2RhbCApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBzZXQgdGlueW1jZSB6LWluZGV4IGhpZ2hlciB0aGFuIG1vZGFsIHotaW5kZXhcblx0XHRcdG1jZVpJbmRleCA9IDEwMDAgKyBwYXJzZUludCggd2luZG93LmdldENvbXB1dGVkU3R5bGUoIG1vZGFsICkuZ2V0UHJvcGVydHlWYWx1ZShcInotaW5kZXhcIikgKTtcblxuXHRcdFx0Ly8gZmxvYXRwYW5lbHMgKGxpa2UgbWVudXMpXG5cdFx0XHR0aGlzLl9wcmV2TUNFLkZsb2F0UGFuZWxaaW5kZXggPSB0aW55TUNFLnVpLkZsb2F0UGFuZWwuekluZGV4O1xuXHRcdFx0dGlueU1DRS51aS5GbG9hdFBhbmVsLnpJbmRleCArPSBtY2VaSW5kZXg7XG5cblx0XHRcdC8vIHRvb2x0aXBzXG5cdFx0XHR0aGlzLl9wcmV2TUNFLlRvb2x0aXBSZXBhaW50ID0gdGlueU1DRS51aS5Ub29sdGlwLnByb3RvdHlwZS5yZXBhaW50O1xuXHRcdFx0dGlueU1DRS51aS5Ub29sdGlwLnByb3RvdHlwZS5yZXBhaW50ID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0c2VsZi5fcHJldk1DRS5Ub29sdGlwUmVwYWludC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHRcdHZhciBzdHlsZSA9IHRoaXMuZ2V0RWwoKS5zdHlsZTtcblx0XHRcdFx0c3R5bGUuekluZGV4ID0gbWNlWkluZGV4ICsgMHhGRkZGICsgMFhGRkZGO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBub3RpZmljYXRpb25zXG5cdFx0XHR0aGlzLl9wcmV2TUNFLk5vdGlmaWNhdGlvbnBSZXBhaW50ID0gdGlueU1DRS51aS5Ob3RpZmljYXRpb24ucHJvdG90eXBlLnJlcGFpbnQ7XG5cdFx0XHR0aW55TUNFLnVpLk5vdGlmaWNhdGlvbi5wcm90b3R5cGUucmVwYWludCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdHNlbGYuX3ByZXZNQ0UuTm90aWZpY2F0aW9ucFJlcGFpbnQuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0XHR2YXIgc3R5bGUgPSB0aGlzLmdldEVsKCkuc3R5bGU7XG5cdFx0XHRcdHN0eWxlLnpJbmRleCA9IG1jZVpJbmRleCArIDB4RkZGRiArIDBYRkZGRjtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0Ly8gd3BsaW5rXG5cdFx0XHRpZiAoICEhIHRpbnltY2UudWkuV1BMaW5rUHJldmlldyApIHtcblx0XHRcdFx0dGhpcy5fcHJldk1DRS53cExpbmtSZW5kZXJIdG1sID0gdGlueW1jZS51aS5XUExpbmtQcmV2aWV3LnByb3RvdHlwZS5yZW5kZXJIdG1sO1xuXHRcdFx0XHR0aW55bWNlLnVpLldQTGlua1ByZXZpZXcucHJvdG90eXBlLnJlbmRlckh0bWwgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHR2YXIgcmV0ID0gc2VsZi5fcHJldk1DRS53cExpbmtSZW5kZXJIdG1sLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0LnJlcGxhY2UoJ2NsYXNzPVwid3AtbGluay1wcmV2aWV3XCInLCdjbGFzcz1cIndwLWxpbmstcHJldmlldyBpbi1ncmlkLW1vZGFsXCInKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0cmVzZXRNQ0U6IGZ1bmN0aW9uKCl7XG5cdFx0XHRpZiAoICEhIHRoaXMuX3ByZXZNQ0UgKSB7XG5cdFx0XHRcdCEhIHRoaXMuX3ByZXZNQ0UuRmxvYXRQYW5lbFppbmRleFx0XHQmJiAoIHRpbnlNQ0UudWkuRmxvYXRQYW5lbC56SW5kZXhcdFx0XHRcdFx0PSB0aGlzLl9wcmV2TUNFLkZsb2F0UGFuZWxaaW5kZXggKTtcblx0XHRcdFx0ISEgdGhpcy5fcHJldk1DRS5Ub29sdGlwUmVwYWludFx0XHRcdCYmICggdGlueU1DRS51aS5Ub29sdGlwLnByb3RvdHlwZS5yZXBhaW50XHRcdFx0PSB0aGlzLl9wcmV2TUNFLlRvb2x0aXBSZXBhaW50ICk7XG5cdFx0XHRcdCEhIHRoaXMuX3ByZXZNQ0UuTm90aWZpY2F0aW9ucFJlcGFpbnRcdCYmICggdGlueU1DRS51aS5Ob3RpZmljYXRpb24ucHJvdG90eXBlLnJlcGFpbnRcdFx0PSB0aGlzLl9wcmV2TUNFLk5vdGlmaWNhdGlvbnBSZXBhaW50ICk7XG5cdFx0XHRcdCEhIHRoaXMuX3ByZXZNQ0Uud3BMaW5rUmVuZGVySHRtbFx0XHQmJiAoIHRpbnltY2UudWkuV1BMaW5rUHJldmlldy5wcm90b3R5cGUucmVuZGVySHRtbFx0PSB0aGlzLl9wcmV2TUNFLndwTGlua1JlbmRlckh0bWwgKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gKTtcblxuXHRBY3RpdmVJbnB1dCA9ICBCYWNrYm9uZS5WaWV3LmV4dGVuZCh7XG5cdFx0dGFnTmFtZTonaW5wdXQnLCBcblx0XHRhdHRyaWJ1dGVzOntcblx0XHRcdHR5cGU6ICd0ZXh0Jyxcblx0XHR9LFxuXHRcdGV2ZW50czogeyAnYmx1ciBbdHlwZT1cInRleHRcIl0nOiAndXBkYXRlJyB9LFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdFx0dGhpcy5wcm9wZXJ0eSA9IG9wdGlvbnMucHJvcGVydHk7XG5cdFx0XHR0aGlzLm1vZGVsID0gb3B0aW9ucy5tb2RlbDtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpe1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0QmFja2JvbmUuVmlldy5wcm90b3R5cGUucmVuZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHRcdHRoaXMuJGVsLm9uKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7IHNlbGYudXBkYXRlKCkgfSk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdHVwZGF0ZTpmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5tb2RlbC5zZXQoIHRoaXMucHJvcGVydHksIHRoaXMuJGVsLnZhbCgpICk7XG5cdFx0XHR0aGlzLm1vZGVsLnNhdmUoKTtcblx0XHR9XG5cdH0pO1xuXG5cdFRlbXBsYXRlc0xpc3QgPSB3cC5tZWRpYS5WaWV3LmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6ICB3cC50ZW1wbGF0ZSgnZ3JpZC11aS10ZW1wbGF0ZXMtbGlzdCcpLFxuXHRcdGNsYXNzTmFtZTogJ3RlbXBsYXRlcy1saXN0JyxcblxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHR0aGlzLm9wdGlvbnMudGVtcGxhdGVzLmVhY2goIGZ1bmN0aW9uKCB0ZW1wbGF0ZSwgayApIHtcblx0XHRcdFx0dmFyIGxpID0gbmV3IEJhY2tib25lLlZpZXcoIHsgdGFnTmFtZTonbGknIH0gKSxcblx0XHRcdFx0XHRkZWwgPSBuZXcgd3AubWVkaWEudmlldy5CdXR0b24oIHsgXG5cdFx0XHRcdFx0XHRtb2RlbDp0ZW1wbGF0ZSxcblx0XHRcdFx0XHRcdHRleHQ6ICcnLCBcblx0XHRcdFx0XHRcdGNsYXNzZXM6IFsnZGVsZXRlJywnZGFzaGljb25zJywnZGFzaGljb25zLWRpc21pc3MnXSwgXG5cdFx0XHRcdFx0XHRjbGljazogZnVuY3Rpb24oICkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLm9wdGlvbnMubW9kZWwuZGVzdHJveSgpO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHR9IFxuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdHRpdGxlID0gbmV3IEFjdGl2ZUlucHV0KCB7IFxuXHRcdFx0XHRcdFx0dGFnTmFtZTonaW5wdXQnLCBcblx0XHRcdFx0XHRcdHByb3BlcnR5OiAnbmFtZScsXG5cdFx0XHRcdFx0XHRtb2RlbDogdGVtcGxhdGUsXG5cdFx0XHRcdFx0XHRhdHRyaWJ1dGVzOiB7XG5cdFx0XHRcdFx0XHRcdHZhbHVlOiB0ZW1wbGF0ZS5nZXQoICduYW1lJyApLFxuXHRcdFx0XHRcdFx0XHR0eXBlOiAndGV4dCdcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0bGkucmVuZGVyKCkuJGVsLmFwcGVuZCggdGl0bGUucmVuZGVyKCkuJGVsLCBkZWwucmVuZGVyKCkuJGVsICk7XG5cdFx0XHRcdHNlbGYuJCgnLnRlbXBsYXRlcycpLmFwcGVuZCggbGkuJGVsICk7XG5cdFx0XHRcdFxuXHRcdFx0XHRsaS5saXN0ZW5UbyggdGVtcGxhdGUsICdkZXN0cm95JywgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHR0aGlzLiRlbC5yZW1vdmUoKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRcdFxuXHRcdFx0XHR0aXRsZS5saXN0ZW5UbyggdGl0bGUsICdrZXl1cCcsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdH0pO1xuXG5cdElucHV0V3JhcCA9IHdwLm1lZGlhLlZpZXcuZXh0ZW5kKHtcblx0XHR0ZW1wbGF0ZTogIHdwLnRlbXBsYXRlKCdncmlkLXVpLWlucHV0LXdyYXAnKSxcblx0XHRjbGFzc05hbWU6ICdpbnB1dC13cmFwJyxcblxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdFx0dmFyIGlucHV0cyA9IGdldElucHV0VHlwZXMoKTtcblxuXHRcdFx0Xy5leHRlbmQoIG9wdGlvbnMsIHtcblx0XHRcdFx0bG9jazogZmVhdHVyZXMubG9ja3Ncblx0XHRcdH0gKTtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0aWYgKCBvcHRpb25zLnNldHRpbmdzLnR5cGUgPT0gJ2h0bWwnICkge1xuXHRcdFx0XHR0aGlzLiRlbCA9ICQob3B0aW9ucy5zZXR0aW5ncy5odG1sKTtcblx0XHRcdFx0dGhpcy5pbnB1dCA9IHtcblx0XHRcdFx0XHRnZXRWYWx1ZVx0OiBmdW5jdGlvbigpe30sXG5cdFx0XHRcdFx0c2V0VmFsdWVcdDogZnVuY3Rpb24oKXt9LFxuXHRcdFx0XHRcdHJlbmRlclx0XHQ6IGZ1bmN0aW9uKCl7fSxcblx0XHRcdFx0XHRkaXNtaXNzXHRcdDogZnVuY3Rpb24oKXt9XG5cdFx0XHRcdH07XG5cdFx0XHR9IGVsc2UgaWYgKCAhISBpbnB1dHNbIG9wdGlvbnMuc2V0dGluZ3MudHlwZSBdICkge1xuXHRcdFx0XHR0aGlzLmlucHV0ID0gbmV3IGlucHV0c1sgb3B0aW9ucy5zZXR0aW5ncy50eXBlIF0oIG9wdGlvbnMgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuaW5wdXQgPSBmYWxzZTtcblx0XHRcdFx0Y29uc29sZS50cmFjZSggJ25vIHN1Y2ggaW5wdXQgdHlwZScsIG9wdGlvbnMuc2V0dGluZ3MudHlwZSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHRcblx0XHRcdGlmICggISB0aGlzLmlucHV0ICkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5pbnB1dC5yZW5kZXIoKTtcblx0XHRcdHRoaXMuJCgnLmlucHV0JykuYXBwZW5kKCB0aGlzLmlucHV0LiRlbCApO1xuXHRcdFx0dGhpcy4kZWwuYWRkQ2xhc3MoJ2lucHV0LXR5cGUtJyt0aGlzLm9wdGlvbnMuc2V0dGluZ3MudHlwZSApO1xuXHRcdFx0XG5cdFx0XHR0aGlzLnNldExvY2soIHRoaXMub3B0aW9ucy5sb2NrZWQgKTtcblx0XHRcdFxuXHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMuc2V0dGluZ3MuYXR0ciApIHtcblx0XHRcdFx0Xy5lYWNoKCB0aGlzLm9wdGlvbnMuc2V0dGluZ3MuYXR0ciwgZnVuY3Rpb24oIHZhbHVlLCBhdHRyICkge1xuXHRcdFx0XHRcdHZhciBwcmV2QXR0ciA9IHNlbGYuJGVsLmF0dHIoIGF0dHIgKSxcblx0XHRcdFx0XHRcdGdsdWUgPSAnICc7XG5cdFx0XHRcdFx0aWYgKCBhdHRyID09ICdzdHlsZScgKSB7XG5cdFx0XHRcdFx0XHRnbHVlID0gJzsnO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzZWxmLiRlbC5hdHRyKCBhdHRyLCBwcmV2QXR0ciArIGdsdWUgKyB2YWx1ZSApXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRnZXRMb2NrOiBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB0aGlzLiQoJy5sb2NrIFt0eXBlPVwiY2hlY2tib3hcIl0nKS5wcm9wKCdjaGVja2VkJyk7XG5cdFx0fSxcblx0XHRzZXRMb2NrOiBmdW5jdGlvbiggbG9jayApIHtcblx0XHRcdHRoaXMuJCgnLmxvY2sgW3R5cGU9XCJjaGVja2JveFwiXScpLnByb3AoICdjaGVja2VkJywgbG9jayApO1xuXHRcdH0sXG5cdFx0Z2V0VmFsdWU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuaW5wdXQuZ2V0VmFsdWUoKTtcblx0XHR9LFxuXHRcdHNldFZhbHVlOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR0aGlzLmlucHV0LnNldFZhbHVlKCB2YWx1ZSApO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRkaXNtaXNzOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuaW5wdXQuZGlzbWlzcygpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHR9KTtcblxuXHRJbnB1dEdyb3VwID0gd3AubWVkaWEuVmlldy5leHRlbmQoe1xuXHRcdHRlbXBsYXRlOiAgd3AudGVtcGxhdGUoJ2dyaWQtdWktaW5wdXQtZ3JvdXAnKSxcblx0XHRjbGFzc05hbWU6ICdpbnB1dC1ncm91cCcsXG5cblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0dGhpcy5tb2RlbCA9IG9wdGlvbnMubW9kZWw7XG5cblx0XHRcdHRoaXMuaW5wdXRzID0gW107XG5cdFx0XHRfLmVhY2goIG9wdGlvbnMuc2V0dGluZ3MuaXRlbXMsIGZ1bmN0aW9uKCBzZXR0aW5nLCBuYW1lICkge1xuXG5cdFx0XHRcdGlmICggc2V0dGluZy50eXBlID09ICdtYXRyaXgnICkge1xuXHRcdFx0XHRcdHNlbGYuaW5pdGlhbGl6ZUlucHV0TWF0cml4KCBzZXR0aW5nLCBuYW1lICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c2VsZi5pbml0aWFsaXplSW5wdXRXcmFwKCBzZXR0aW5nLCBuYW1lICk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0aW5pdGlhbGl6ZUlucHV0V3JhcDogZnVuY3Rpb24oIHNldHRpbmcsIG5hbWUgKXtcblx0XHRcdHZhciB2YWx1ZSwgaW5wdXQgPSBmYWxzZSwgc2VsZiA9IHRoaXM7XG5cdFx0XHRfLmV4dGVuZCggc2V0dGluZywgeyBcblx0XHRcdFx0bmFtZTogbmFtZSwgXG5cdFx0XHRcdGxvY2s6IGZlYXR1cmVzLmxvY2tzICYmIHNldHRpbmcudHlwZSAhPSAnbGFiZWwnXG5cdFx0XHR9KTtcblxuXHRcdFx0aWYgKCBmZWF0dXJlcy5sb2NrcyB8fCAhIHNlbGYubW9kZWwuZ2V0KCBuYW1lKyc6bG9ja2VkJyApICkge1xuXHRcdFx0XHR2YWx1ZSA9IHNlbGYubW9kZWwuZ2V0KCBuYW1lICksXG5cdFx0XHRcdGlucHV0ID0gbmV3IElucHV0V3JhcCh7XG5cdFx0XHRcdFx0Y29udHJvbGxlclx0OiBzZWxmLmNvbnRyb2xsZXIsXG5cdFx0XHRcdFx0c2V0dGluZ3NcdDogc2V0dGluZyxcblx0XHRcdFx0XHR2YWx1ZVx0XHQ6ICggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiB2YWx1ZSkgPyB2YWx1ZSA6IG51bGwsXG5cdFx0XHRcdFx0bG9ja2VkXHRcdDogISEgc2VsZi5tb2RlbC5nZXQoIG5hbWUrJzpsb2NrZWQnICksXG5cdFx0XHRcdFx0bW9kZWxcdFx0OiBzZWxmLm1vZGVsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzZWxmLmlucHV0cy5wdXNoKCBpbnB1dCApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGlucHV0O1xuXHRcdH0sXG5cdFx0aW5pdGlhbGl6ZUlucHV0TWF0cml4OiBmdW5jdGlvbiggc2V0dGluZywgbmFtZSApe1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHRfbWF0cml4ID0gbmV3IFBhcmVudFZpZXcoIHtcblx0XHRcdFx0XHR0YWdOYW1lXHRcdDogJ3RhYmxlJyxcblx0XHRcdFx0XHRjbGFzc05hbWVcdDogJ2lucHV0LW1hdHJpeCBmb3JtLXRhYmxlJyxcblx0XHRcdFx0XHR0ZW1wbGF0ZVx0OiB3cC50ZW1wbGF0ZSgnZ3JpZC11aS1pbnB1dC1tYXRyaXgnKSxcblx0XHRcdFx0fSApO1xuXHRcdFx0Xy5lYWNoKCBzZXR0aW5nLnJvd3MsIGZ1bmN0aW9uKCByb3dEYXRhLCBpICkge1xuXHRcdFx0XHR2YXIgX3JvdyA9IG5ldyBDaGlsZFZpZXcoIHtcblx0XHRcdFx0XHR0YWdOYW1lXHQ6ICd0cicsXG5cdFx0XHRcdFx0cGFyZW50XHQ6IF9tYXRyaXhcblx0XHRcdFx0fSApO1xuXHRcdFx0XHRfLmVhY2goIHJvd0RhdGEsIGZ1bmN0aW9uKCBjZWxsRGF0YSwgbmFtZSApIHtcblx0XHRcdFx0XHR2YXIgaW5wdXQsIF9jZWxsID0gbmV3IENoaWxkVmlldygge1xuXHRcdFx0XHRcdFx0dGFnTmFtZVx0OiAndGQnLFxuXHRcdFx0XHRcdFx0cGFyZW50XHQ6IF9yb3dcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0aW5wdXQgPSBzZWxmLmluaXRpYWxpemVJbnB1dFdyYXAoIGNlbGxEYXRhLCBuYW1lICk7XG5cdFx0XHRcdFx0aW5wdXQuJHBhcmVudCA9IF9jZWxsLiRlbDtcblx0XHRcdFx0fSApO1xuXHRcdFx0fSApO1xuXHRcdFx0c2VsZi5pbnB1dHMucHVzaCggX21hdHJpeCApO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcdFxuXHRcdFx0d3AubWVkaWEuVmlldy5wcm90b3R5cGUucmVuZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0Xy5lYWNoKHRoaXMuaW5wdXRzLCBmdW5jdGlvbiggaW5wdXQgKXtcblx0XHRcdFx0aW5wdXQucmVuZGVyKCk7XG5cdFx0XHRcdGlmICggaW5wdXQuJHBhcmVudCApIHtcblx0XHRcdFx0XHRpbnB1dC4kcGFyZW50LmFwcGVuZCggaW5wdXQuJGVsICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c2VsZi4kKCcuaW5wdXRzJykuYXBwZW5kKCBpbnB1dC4kZWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZGlzbWlzczogZnVuY3Rpb24oKSB7XG5cdFx0XHRfLmVhY2godGhpcy5pbnB1dHMsIGZ1bmN0aW9uKCBpbnB1dCApe1xuXHRcdFx0XHQhIWlucHV0LmRpc21pc3MgJiYgaW5wdXQuZGlzbWlzcygpO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdH0pO1xuXG5cblx0RWRpdERpYWxvZyA9IGdyaWQudmlldy5FZGl0RGlhbG9nID0gZ3JpZC52aWV3LnVpLkRpYWxvZy5leHRlbmQoe1xuXHRcdHRlbXBsYXRlOiAgd3AudGVtcGxhdGUoJ2dyaWQtdWktZWRpdC1kaWFsb2cnKSxcblx0XHRjbGFzc05hbWU6ICdlZGl0LWRpYWxvZyBzaWRlYmFyJyxcblx0XHRldmVudHM6IHtcblx0XHRcdCdjbGljayAuYXBwbHknIDogJ2RvbmUnXG5cdFx0fSxcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdGdyaWQudmlldy51aS5EaWFsb2cucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFxuXHRcdFx0Ly8gc2V0dXAgaW5wdXQgZ3JvdXBzXG5cdFx0XHR0aGlzLmlucHV0Z3JvdXBzID0gW107XG5cdFx0XHR0aGlzLmVkaXRvciA9IG5ldyBJbnB1dEdyb3VwKHtcblx0XHRcdFx0Y29udHJvbGxlcjogdGhpcyxcblx0XHRcdFx0bW9kZWw6IHRoaXMubW9kZWwsXG5cdFx0XHRcdHNldHRpbmdzOiB7IHRpdGxlOicnLCBpdGVtczpvcHRpb25zLmVkaXRvci5tYWluIH1cblx0XHRcdH0pO1xuXG5cdFx0XHRfLmVhY2goIG9wdGlvbnMuZWRpdG9yLnNpZGViYXIsIGZ1bmN0aW9uKCBzZXR0aW5nLCBuYW1lICl7XG5cdFx0XHRcdF8uZXh0ZW5kKCBzZXR0aW5nLCB7IG5hbWU6IG5hbWUgfSk7XG5cblx0XHRcdFx0dmFyIGlucHV0Z3JvdXAgPSBuZXcgSW5wdXRHcm91cCh7XG5cdFx0XHRcdFx0Y29udHJvbGxlcjogc2VsZixcblx0XHRcdFx0XHRtb2RlbDogc2VsZi5tb2RlbCxcblx0XHRcdFx0XHRzZXR0aW5nczogc2V0dGluZ1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0c2VsZi5pbnB1dGdyb3Vwcy5wdXNoKCBpbnB1dGdyb3VwICk7XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Z3JpZC52aWV3LnVpLkRpYWxvZy5wcm90b3R5cGUucmVuZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0XG5cdFx0XHQvLyByZW5kZXIgaW5wdXQgZmllbGRzXG5cdFx0XHRfLmVhY2godGhpcy5pbnB1dGdyb3VwcywgZnVuY3Rpb24oIGlucHV0Z3JvdXAgKXtcblx0XHRcdFx0aW5wdXRncm91cC5yZW5kZXIoKTtcblx0XHRcdFx0c2VsZi4kKCcuZ3JpZC1kaWFsb2ctc2lkZWJhcicpLmFwcGVuZCggaW5wdXRncm91cC4kZWwgKTtcblx0XHRcdH0pO1xuXHRcdFx0XG5cdFx0XHR0aGlzLiQoJy5ncmlkLWRpYWxvZy1jb250ZW50JykuYXBwZW5kKCB0aGlzLmVkaXRvci5yZW5kZXIoKS4kZWwgKTtcblx0XHRcdFxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRhcHBseUNoYW5nZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgXHRcdD0gdGhpcyxcblx0XHRcdFx0dXBkYXRlTW9kZWxcdD0ge307XG5cdFx0XHRmdW5jdGlvbiBzZXRNb2RlbFZhbCggaW5wdXQgKSB7XHRcblx0XHRcdFx0aWYgKCAhISBpbnB1dC5vcHRpb25zLnNldHRpbmdzICYmICEhaW5wdXQub3B0aW9ucy5zZXR0aW5ncy5uYW1lICkge1xuXHRcdFx0XHRcdHZhciBwcm9wID0gaW5wdXQub3B0aW9ucy5zZXR0aW5ncy5uYW1lO1xuXHRcdFx0XHRcdGlmICggaXNOYU4oIHBhcnNlSW50KHByb3ApICkgKSB7XG5cdFx0XHRcdFx0XHR1cGRhdGVNb2RlbFsgcHJvcCBdID0gaW5wdXQuZ2V0VmFsdWUoKTtcblx0XHRcdFx0XHRcdGlmICggZmVhdHVyZXMubG9ja3MgKSB7XG5cdFx0XHRcdFx0XHRcdHVwZGF0ZU1vZGVsWyBwcm9wICsgJzpsb2NrZWQnIF0gPSBpbnB1dC5nZXRMb2NrKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRfLmVhY2goIHRoaXMuZWRpdG9yLmlucHV0cywgc2V0TW9kZWxWYWwgKTtcblxuXHRcdFx0Xy5lYWNoKCB0aGlzLmlucHV0Z3JvdXBzLCBmdW5jdGlvbiggZ3JvdXAgKSB7XG5cdFx0XHRcdF8uZWFjaCggZ3JvdXAuaW5wdXRzLCBzZXRNb2RlbFZhbCApO1xuXHRcdFx0fSk7XG5cdFx0XHR0aGlzLm1vZGVsLnNldCggdXBkYXRlTW9kZWwgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZG9uZTogZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuYXBwbHlDaGFuZ2VzKCk7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdkb25lJyApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0ZGlzbWlzczogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmVkaXRvci5kaXNtaXNzKCk7XG5cblx0XHRcdF8uZWFjaCh0aGlzLmlucHV0Z3JvdXBzLCBmdW5jdGlvbiggaW5wdXRncm91cCApIHtcblx0XHRcdFx0aW5wdXRncm91cC5kaXNtaXNzKCk7XG5cdFx0XHR9KTtcblx0XHRcdGdyaWQudmlldy51aS5EaWFsb2cucHJvdG90eXBlLmRpc21pc3MuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHR9KTtcblxuXHRNYW5hZ2VUZW1wbGF0ZXNEaWFsb2cgPSBncmlkLnZpZXcuTWFuYWdlVGVtcGxhdGVzRGlhbG9nID0gZ3JpZC52aWV3LnVpLkRpYWxvZy5leHRlbmQoe1xuXHRcdHRlbXBsYXRlOiAgd3AudGVtcGxhdGUoJ2dyaWQtdWktZGlhbG9nJyksXG5cdFx0Y2xhc3NOYW1lOiAnbWFuYWdlLXRlbXBsYXRlcy1kaWFsb2cnLFxuXHRcdGV2ZW50czoge1xuXHRcdFx0J2NsaWNrIC5hcHBseSc6XHRcdCdkb25lJyxcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Z3JpZC52aWV3LnVpLkRpYWxvZy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXNcblx0XHRcdFx0dGhpcy50ZW1wbGF0ZUxpc3RzID0ge307XG5cblx0XHRcdF8uZWFjaCggWyAnQ29udGFpbmVyJywgJ1JvdycsICdDZWxsJywgJ1dpZGdldCcgXSwgZnVuY3Rpb24oIHR5cGUgKSB7XG5cblx0XHRcdFx0c2VsZi50ZW1wbGF0ZUxpc3RzWyB0eXBlLnRvTG93ZXJDYXNlKCkgXSA9IG5ldyBUZW1wbGF0ZXNMaXN0KCB7IFxuXHRcdFx0XHRcdHRpdGxlOiBsMTBuWyB0eXBlIF0gKyAnICcgKyBsMTBuLlRlbXBsYXRlcyxcblx0XHRcdFx0XHR0ZW1wbGF0ZXM6IGdyaWQudGVtcGxhdGVzWyB0eXBlLnRvTG93ZXJDYXNlKCkgXVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRncmlkLnZpZXcudWkuRGlhbG9nLnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHRfLmVhY2goIHRoaXMudGVtcGxhdGVMaXN0cywgZnVuY3Rpb24oIHRlbXBsYXRlTGlzdCApe1xuXHRcdFx0XHRzZWxmLiQoJy5ncmlkLWRpYWxvZy1jb250ZW50JykuYXBwZW5kKCB0ZW1wbGF0ZUxpc3QucmVuZGVyKCkuJGVsICk7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZG9uZTogZnVuY3Rpb24oZSl7XG5cdFx0XHR0aGlzLnRyaWdnZXIoICdkb25lJyApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fSk7XG5cblx0U2VsZWN0V2lkZ2V0RGlhbG9nID0gZ3JpZC52aWV3LlNlbGVjdFdpZGdldERpYWxvZyA9IGdyaWQudmlldy51aS5EaWFsb2cuZXh0ZW5kKHtcblx0XHR0ZW1wbGF0ZTogIHdwLnRlbXBsYXRlKCdncmlkLXVpLWRpYWxvZycpLFxuXHRcdGNsYXNzTmFtZTogJ3NlbGVjdC13aWRnZXQtZGlhbG9nJyxcblx0XHRldmVudHM6IHtcblx0XHRcdCdjaGFuZ2UgW25hbWU9XCJ3aWRnZXRfY2xhc3NcIl0nIDogJ2RvbmUnXG5cdFx0fSxcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdGdyaWQudmlldy51aS5EaWFsb2cucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0Ly8gc2hvdWxkIGJlIGJ1dHRvbnMhXG5cdFx0XHR0aGlzLnNlbGVjdFdpZGdldCA9IG5ldyBJbnB1dFdyYXAoIHsgXG5cdFx0XHRcdG1vZGVsOiB0aGlzLm1vZGVsLFxuXHRcdFx0XHRzZXR0aW5nczoge1xuXHRcdFx0XHRcdHR5cGU6J3JhZGlvJyxcblx0XHRcdFx0XHRuYW1lOiAnd2lkZ2V0X2NsYXNzJyxcblx0XHRcdFx0XHR0aXRsZTogbDEwbi5XaWRnZXRUeXBlcyxcblx0XHRcdFx0XHRvcHRpb25zOiBvcHRpb25zLndpZGdldHNcblx0XHRcdFx0fSBcblx0XHRcdH0gKTtcblx0XHRcdHRoaXMub2theUJ0bi4kZWwuaGlkZSgpO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdGdyaWQudmlldy51aS5EaWFsb2cucHJvdG90eXBlLnJlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHR0aGlzLiQoJy5ncmlkLWRpYWxvZy1jb250ZW50JykuYXBwZW5kKCB0aGlzLnNlbGVjdFdpZGdldC5yZW5kZXIoKS4kZWwgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZG9uZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdmFsID0gdGhpcy5zZWxlY3RXaWRnZXQuZ2V0VmFsdWUoKTtcblx0XHRcdHRoaXMubW9kZWwuc2V0KCAnd2lkZ2V0X2NsYXNzJywgZXNjYXBlKCB2YWwgKSApO1xuXHRcdFx0dGhpcy5zZWxlY3RXaWRnZXQuc2V0VmFsdWUoIG51bGwgKTtcblx0XHRcdHRoaXMudHJpZ2dlciggJ2RvbmUnICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9KTtcblxufSkoalF1ZXJ5LHdpbmRvdy5ncmlkKTsiLCIoZnVuY3Rpb24oICQsIGdyaWQgKXtcblx0XG5cdGlmICggISEgZG9jdW1lbnQuY2FyZXRQb3NpdGlvbkZyb21Qb2ludCAmJiAhIGRvY3VtZW50LmNhcmV0UmFuZ2VGcm9tUG9pbnQgKSB7XG5cdFx0ZG9jdW1lbnQuY2FyZXRSYW5nZUZyb21Qb2ludCA9IGRvY3VtZW50LmNhcmV0UG9zaXRpb25Gcm9tUG9pbnQ7XG5cdH1cblx0XG5cdHZhciBHcmlkLCBDb250YWluZXIsIFJvdywgQ2VsbCwgV2lkZ2V0LFxuXHRcdENvbGxlY3Rpb25WaWV3LCBcblx0XHRDb2x1bW5Db2xsZWN0aW9uVmlldyxcblx0XHRTZWxlY3RvckRpc3BsYXksIFRlbXBsYXRlRGlzcGxheSxcblx0XHRjbGFzc01hcCxcblx0XHRsMTBuXHRcdD0gZ3JpZGJ1aWxkZXIubDEwbixcblx0XHRvcHRpb25zXHRcdD0gZ3JpZGJ1aWxkZXIub3B0aW9ucyxcblx0XHRmZWF0dXJlc1x0PSBncmlkYnVpbGRlci5vcHRpb25zLmZlYXR1cmVzLFxuXHRcdHNpemVrZXlzIFx0PSB7fSxcblx0XHRvZmZzZXRrZXlzXHQ9IHt9LFxuXHRcdHV1aWRcdFx0PSAxLFxuXHRcdGFsbE9iamVjdHNcdD0gW10sXG5cdFx0XG5cdFx0YWN0aXZlX2VkaXRvcjtcblxuXHRfLmVhY2goIG9wdGlvbnMuc2NyZWVuc2l6ZXMuc2l6ZXMsIGZ1bmN0aW9uKCBzaXRlT3B0aW9ucywgc2l6ZSApIHtcblx0XHRzaXpla2V5c1tzaXplXVx0XHQ9ICdzaXplXycgKyBzaXplO1xuXHRcdG9mZnNldGtleXNbc2l6ZV1cdD0gJ29mZnNldF8nICsgc2l6ZTtcblx0fSk7XG5cdF8udGVtcGxhdGVTZXR0aW5ncyA9IHtcblx0XHRpbnRlcnBvbGF0ZTogL1xce1xceyguKz8pXFx9XFx9L2dcblx0fTtcblx0b3B0aW9ucy5zY3JlZW5zaXplcy5zaXplX2xvY2tfdGVtcGxhdGVcdFx0PSBfLnRlbXBsYXRlKCAnY29sLXt7c2NyZWVuc2l6ZX19LWxvY2snICk7XG5cdG9wdGlvbnMuc2NyZWVuc2l6ZXMub2Zmc2V0X2xvY2tfdGVtcGxhdGVcdD0gXy50ZW1wbGF0ZSggJ2NvbC17e3NjcmVlbnNpemV9fS1vZmZzZXQtbG9jaycgKTtcblx0b3B0aW9ucy5zY3JlZW5zaXplcy5zaXplX2NsYXNzX3RlbXBsYXRlXHRcdD0gXy50ZW1wbGF0ZSggJ2NvbC17e3NjcmVlbnNpemV9fS17e3NpemV9fScgKTtcblx0b3B0aW9ucy5zY3JlZW5zaXplcy5vZmZzZXRfY2xhc3NfdGVtcGxhdGVcdD0gXy50ZW1wbGF0ZSggJ2NvbC17e3NjcmVlbnNpemV9fS1vZmZzZXQte3tzaXplfX0nICk7XG5cblxuXG5cdFNlbGVjdG9yRGlzcGxheSA9IHdwLm1lZGlhLlZpZXcuZXh0ZW5kKHtcblx0XHR0YWdOYW1lOiAgICAnZGl2Jyxcblx0XHRjbGFzc05hbWU6ICAnZGlzcGxheS1zZWxlY3RvcicsXG5cblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdHRoaXMubW9kZWwgPSBvcHRpb25zLm1vZGVsO1xuXHRcdFx0dGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLCdjaGFuZ2UnLHRoaXMucmVuZGVyKTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaWQgXHRcdFx0PSB0aGlzLm1vZGVsLmdldCgnYXR0cl9pZCcpLFxuXHRcdFx0XHRjbGFzc25hbWVcdD0gdGhpcy5tb2RlbC5nZXQoJ2F0dHJfY2xhc3MnKSxcblx0XHRcdFx0bG9ja2VkXHRcdD0gdGhpcy5tb2RlbC5nZXQoJ2xvY2tlZCcpLFxuXHRcdFx0XHRzZWxlY3Rvclx0PSAnJztcblxuXHRcdFx0aWYgKCAhIWlkICkge1xuXHRcdFx0XHRzZWxlY3RvciArPSAnPHNwYW4gY2xhc3M9XCJkaXNwbGF5LWlkXCI+IycgKyBpZCArICc8L3NwYW4+Jztcblx0XHRcdH1cblx0XHRcdGlmICggISFjbGFzc25hbWUgKSB7XG5cdFx0XHRcdHNlbGVjdG9yICs9ICc8c3BhbiBjbGFzcz1cImRpc3BsYXktY2xhc3NcIj4uJyArIGNsYXNzbmFtZS5zcGxpdCgnICcpLmpvaW4oJy4nKSArICc8L3NwYW4+Jztcblx0XHRcdH1cblx0XHRcdGlmICggbG9ja2VkICkge1xuXHRcdFx0XHRzZWxlY3RvciArPSAnPHNwYW4gY2xhc3M9XCJkYXNoaWNvbnMgZGFzaGljb25zLWxvY2tcIj48L3NwYW4+Jztcblx0XHRcdH1cblx0XHRcdHRoaXMuJGVsLmh0bWwoc2VsZWN0b3IpO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdH0pO1xuXHRUZW1wbGF0ZURpc3BsYXkgPSB3cC5tZWRpYS5WaWV3LmV4dGVuZCh7XG5cdFx0dGFnTmFtZTogICAgJ2RpdicsXG5cdFx0Y2xhc3NOYW1lOiAgJ2Rpc3BsYXktdGVtcGxhdGUnLFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdFx0dGhpcy5tb2RlbCA9IG9wdGlvbnMubW9kZWw7XG5cdFx0XHR0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsJ2NoYW5nZScsdGhpcy5yZW5kZXIpO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0ZW1wbGF0ZSA9IHRoaXMubW9kZWwuZ2V0KCd0ZW1wbGF0ZScpLFxuXHRcdFx0XHRzZWxlY3RvciA9ICcnO1xuXHRcdFx0aWYgKCAhIXRlbXBsYXRlICkge1xuXHRcdFx0XHRzZWxlY3RvciArPSBsMTBuLlRlbXBsYXRlKyc6ICcrdGVtcGxhdGU7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLiRlbC50ZXh0KHNlbGVjdG9yKTtcblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHR9KTtcblxuXG5cblxuXHRDb2xsZWN0aW9uVmlldyA9IHdwLm1lZGlhLlZpZXcuZXh0ZW5kKHtcblx0XHRldmVudHM6IHtcblx0XHRcdCdkYmxjbGljaydcdDogJ2VkaXQnXG5cdFx0fSxcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcywgdGVtcGxhdGU7XG5cdFx0XHRcblx0XHRcdHRoaXMuU3Vidmlld3NcdD0gd3AuQmFja2JvbmUuU3Vidmlld3M7XG5cdFx0XHR0aGlzLm9wdGlvbnNcdD0gb3B0aW9ucztcblx0XHRcdHRoaXMuY29udHJvbGxlclx0PSBvcHRpb25zLmNvbnRyb2xsZXI7XG5cdFx0XHR0aGlzLm1vZGVsIFx0XHQ9IG9wdGlvbnMubW9kZWw7XG5cdFx0XHR0aGlzLnRlbXBsYXRlRGlzcGxheSA9IG5ldyBUZW1wbGF0ZURpc3BsYXkoeyBtb2RlbDogdGhpcy5tb2RlbCB9KTtcblx0XHRcdHRoaXMuc2VsZWN0b3JEaXNwbGF5ID0gbmV3IFNlbGVjdG9yRGlzcGxheSh7IG1vZGVsOiB0aGlzLm1vZGVsIH0pO1xuXG5cdFx0XHR0aGlzLmxpc3RlblRvKCB0aGlzLm1vZGVsLCAnY2hhbmdlJywgdGhpcy51cGRhdGVEaXNwbGF5ICk7XG5cblx0XHRcdC8vIGNoZWNrIGlmIHRlbXBsYXRlIHN0aWxsIGV4aXN0c1xuXHRcdFx0XG5cdFx0XHR0ZW1wbGF0ZSA9IHRoaXMubW9kZWwuZ2V0KCAndGVtcGxhdGUnICk7XG5cdFx0XHRpZiAoIHRlbXBsYXRlICYmICEgZ3JpZC50ZW1wbGF0ZXMuZ2V0KCB0aGlzLmdldENsYXNzTmFtZSgpLCB0ZW1wbGF0ZSApICkge1xuXHRcdFx0XHR0aGlzLm1vZGVsLnVuc2V0KCAndGVtcGxhdGUnICk7XG5cdFx0XHR9XG5cblx0XHRcdGFsbE9iamVjdHMucHVzaCggdGhpcyApO1xuXHRcdFx0XG5cdFx0XHR0aGlzLiRlbC5kYXRhKCAndmlldycsIHRoaXMgKTtcblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRlZGl0OiBmdW5jdGlvbiggZSApIHtcblx0XHRcdGlmICggZmVhdHVyZXMubG9ja3MgfHwgIXRoaXMubW9kZWwuZ2V0KCAnbG9ja2VkJyApICkge1xuXG5cdFx0XHRcdHRoaXMuY29udHJvbGxlclxuXHRcdFx0XHRcdC5zZXRTZWxlY3RlZCggdGhpcyApXG5cdFx0XHRcdFx0LmVkaXRJdGVtKCk7XG5cdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRyZW1vdmU6IGZ1bmN0aW9uKCl7XG5cdFx0XHQvLyB1cGRhdGUgbW9kZWxcblx0XHRcdHZhciBpZHggPSBhbGxPYmplY3RzLmluZGV4T2YodGhpcyk7XG5cdFx0XHRhbGxPYmplY3RzLnNwbGljZSggaWR4LCAxICk7XG5cdFx0XHR0aGlzLiRlbC5yZW1vdmUoKTtcblx0XHR9LFxuXHRcdHJlbmRlcjpmdW5jdGlvbigpIHtcblx0XHRcdHdwLm1lZGlhLlZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0Y2xzID0gdGhpcy5jb2xsZWN0aW9uVmlldygpLFxuXHRcdFx0XHQkY29sbGVjdGlvbiA9IHRoaXMuJCgnPi5jb2xsZWN0aW9uLD4qPi5jb2xsZWN0aW9uJykuZmlyc3QoKTtcblxuXHRcdFx0aWYgKCAhIGZlYXR1cmVzLmxvY2tzICYmIHRoaXMubW9kZWwuZ2V0KCdsb2NrZWQnKSApIHtcblx0XHRcdFx0dGhpcy4kZWwuYWRkQ2xhc3MoJ2xvY2tlZCcpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy4kZWwuYWRkQ2xhc3MoJ3VubG9ja2VkJyk7XG5cdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0JGNvbGxlY3Rpb24uaHRtbCgnJyk7XG5cdFx0XHR0aGlzLiRlbC5kYXRhKCAnbW9kZWwnLCB0aGlzLm1vZGVsICk7XG4vL1x0XHRcdHRoaXMuJGVsLmRhdGEoICd2aWV3JywgdGhpcyApO1xuXHRcdFx0JGNvbGxlY3Rpb24uZGF0YSggJ3ZpZXcnLCB0aGlzICkuZGF0YSggJ21vZGVsJywgdGhpcy5tb2RlbC5pdGVtcyApO1xuXHRcdFx0aWYgKCBjbHMgKSB7XG5cdFx0XHRcdHRoaXMubW9kZWwuaXRlbXMuZWFjaCggZnVuY3Rpb24oIGl0ZW0sIGkgKSB7XG5cdFx0XHRcdFx0dmFyIGNudCA9IG5ldyBjbHMoIHsgXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyOiBzZWxmLm9wdGlvbnMuY29udHJvbGxlciwgXG5cdFx0XHRcdFx0XHRtb2RlbDogaXRlbSwgXG5cdFx0XHRcdFx0XHRwYXJlbnQ6IHNlbGYgXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0JGNvbGxlY3Rpb24uYXBwZW5kKCBjbnQuJGVsICk7XG5cdFx0XHRcdFx0Y250LnJlbmRlcigpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdHRoaXMuJGVsLnByZXBlbmQoIHRoaXMuc2VsZWN0b3JEaXNwbGF5LnJlbmRlcigpLiRlbCApO1xuXHRcdFx0dGhpcy4kZWwucHJlcGVuZCggdGhpcy50ZW1wbGF0ZURpc3BsYXkucmVuZGVyKCkuJGVsICk7XG5cblx0XHRcdHRoaXMudXBkYXRlRGlzcGxheSgpO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdHJlRm9jdXM6IGZ1bmN0aW9uKCApe1xuXHRcdFx0dGhpcy4kZWwuZm9jdXMoKTtcblx0XHR9LFxuXHRcdHVwZGF0ZURpc3BsYXk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy51cGRhdGVWaXNpYmlsaXR5Q2xhc3NlcygpO1xuXHRcdH0sXG5cdFx0c2V0VmlzaWJpbGl0eTogZnVuY3Rpb24oIHZpc2liaWxpdHkgKSB7XG5cdFx0XHR2YXIgZ3JpZFZpZXcgPSB0aGlzLmNvbnRyb2xsZXIudmlldyxcblx0XHRcdFx0dmlld1NpemUgPSB0aGlzLmNvbnRyb2xsZXIudG9vbGJhci53aGljaFZpZXcoKSxcblx0XHRcdFx0cHJvcCA9ICd2aXNpYmlsaXR5XycgKyB2aWV3U2l6ZTtcblx0XHRcdHRoaXMubW9kZWwuc2V0KCBwcm9wLCB2aXNpYmlsaXR5ICk7XG5cdFx0XHRncmlkVmlldy5oYXNDaGFuZ2VkKCk7XG5cdFx0fSxcblx0XHR1cGRhdGVWaXNpYmlsaXR5Q2xhc3NlczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdGFkZENsYXNzID0gW10sXG5cdFx0XHRcdHJlbW92ZUNsYXNzID0gW107XG5cdFx0XHRfLmVhY2goIG9wdGlvbnMuc2NyZWVuc2l6ZXMuc2l6ZXMsIGZ1bmN0aW9uKCBzaXplLCB2aWV3U2l6ZSApIHtcblx0XHRcdFx0dmFyIHZpcyA9IHNlbGYubW9kZWwuZ2V0KCAndmlzaWJpbGl0eV8nICsgdmlld1NpemUgKSxcblx0XHRcdFx0XHR2aXNpYmxlQ2xhc3MgPSAndmlzaWJsZS0nICsgdmlld1NpemUsXG5cdFx0XHRcdFx0aGlkZGVuQ2xhc3MgID0gJ2hpZGRlbi0nICsgdmlld1NpemU7XG5cdFx0XHRcdGlmICggdmlzID09PSAndmlzaWJsZScgKSB7XG5cdFx0XHRcdFx0YWRkQ2xhc3MucHVzaCggdmlzaWJsZUNsYXNzICk7XG5cdFx0XHRcdFx0cmVtb3ZlQ2xhc3MucHVzaCggaGlkZGVuQ2xhc3MgKTtcblx0XHRcdFx0fSBlbHNlIGlmICggdmlzID09PSAnaGlkZGVuJyApIHtcblx0XHRcdFx0XHRhZGRDbGFzcy5wdXNoKCBoaWRkZW5DbGFzcyApO1xuXHRcdFx0XHRcdHJlbW92ZUNsYXNzLnB1c2goIHZpc2libGVDbGFzcyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHJlbW92ZUNsYXNzLnB1c2goIHZpc2libGVDbGFzcyApO1xuXHRcdFx0XHRcdHJlbW92ZUNsYXNzLnB1c2goIGhpZGRlbkNsYXNzICk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0dGhpcy4kZWwucmVtb3ZlQ2xhc3MoIHJlbW92ZUNsYXNzLmpvaW4oJyAnKSApLmFkZENsYXNzKCBhZGRDbGFzcy5qb2luKCcgJykgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0ZGV0YWNoOmZ1bmN0aW9uKCApIHtcblx0XHR9LFxuXHRcdGlzOiBmdW5jdGlvbiggd2hhdCApIHtcblx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yID09PSB3aGF0O1xuXHRcdH0sXG5cdFx0Y2xvc2VzdDogZnVuY3Rpb24oIHdoYXQgKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IHRoaXM7XG5cdFx0XHR3aGlsZSAoICEhIGN1cnJlbnQgJiYgISBjdXJyZW50LmlzKCB3aGF0ICkgKSB7XG5cdFx0XHRcdGN1cnJlbnQgPSBjdXJyZW50LnBhcmVudCgpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGN1cnJlbnQ7XG5cdFx0fSxcblx0XHRwYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5wYXJlbnQ7XG5cdFx0fSxcblx0XHRnZXRDbGFzczogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvcjtcblx0XHR9LFxuXHRcdGdldENsYXNzTmFtZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdHJlc3VsdHMgPSBfLmZpbHRlciggWydHcmlkJywnQ29udGFpbmVyJywnUm93JywnQ2VsbCcsJ1dpZGdldCddLCBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0XHRcdHJldHVybiBzZWxmLmlzKCBjbGFzc01hcFsgY2xhc3NOYW1lIF0gKTtcblx0XHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcmVzdWx0cy5sZW5ndGggPyByZXN1bHRzWzBdIDogZmFsc2U7XG5cdFx0fSxcblx0XHRoYXNDaGFuZ2VkOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY2xvc2VzdChHcmlkKS5oYXNDaGFuZ2VkKCApO1xuXHRcdH0sXG5cdFx0Z2V0VGl0bGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGwxMG5bIHRoaXMuZ2V0Q2xhc3NOYW1lKCkgXTtcblx0XHR9XG5cdH0pO1xuXG5cdENvbHVtbkNvbGxlY3Rpb25WaWV3ID0gQ29sbGVjdGlvblZpZXcuZXh0ZW5kKHtcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciByZXQgPSBDb2xsZWN0aW9uVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0sXG5cdFx0dXBkYXRlRGlzcGxheTogZnVuY3Rpb24oKSB7XG5cdFx0XHRDb2xsZWN0aW9uVmlldy5wcm90b3R5cGUudXBkYXRlRGlzcGxheS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHR0aGlzLnVwZGF0ZUNvbExvY2tDbGFzc2VzKCk7XG5cdFx0XHR0aGlzLnVwZGF0ZVNpemVDbGFzc2VzKCk7XG5cdFx0XHR0aGlzLnVwZGF0ZU9mZnNldENsYXNzZXMoKTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHRDb2xsZWN0aW9uVmlldy5wcm90b3R5cGUucmVuZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHRcdF8uZWFjaCggc2l6ZWtleXMsIGZ1bmN0aW9uKCBzaXpla2V5LCB2aWV3U2l6ZSApIHtcblx0XHRcdFx0dmFyIHNpemUgPSBzZWxmLm1vZGVsLmdldCggc2l6ZWtleSApO1xuXHRcdFx0XHRpZiAoICEhIHNpemUgKSB7XG5cdFx0XHRcdFx0c2VsZi5zZXRDb2xDbGFzcyggc2l6ZSwgdmlld1NpemUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdFx0Xy5lYWNoKCBvZmZzZXRrZXlzLCBmdW5jdGlvbiggb2Zmc2V0a2V5LCB2aWV3U2l6ZSApIHtcblx0XHRcdFx0dmFyIG9mZnNldCA9IHNlbGYubW9kZWwuZ2V0KCBvZmZzZXRrZXkgKTtcblx0XHRcdFx0aWYgKCAhIGlzTmFOKCBwYXJzZUludChvZmZzZXQpICkgKSB7XG5cdFx0XHRcdFx0c2VsZi5zZXRPZmZzZXRDbGFzcyggb2Zmc2V0LCB2aWV3U2l6ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGdldEN1cnJlbnRTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB2aWV3U2l6ZSA9IHRoaXMuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRzZWxmID0gdGhpcywgZGlkID0gZmFsc2UsIHNpemUgPSBmYWxzZTtcblxuXHRcdFx0JC5lYWNoKCBzaXpla2V5cywgZnVuY3Rpb24oIHNpemVLZXksIHByb3AgKSB7XG5cdFx0XHRcdHZhciBfc2l6ZSA9IHNlbGYubW9kZWwuZ2V0KCBwcm9wICk7XG5cdFx0XHRcdGlmICggISBkaWQgJiYgISFfc2l6ZSApIHtcblx0XHRcdFx0XHRzaXplID0gcGFyc2VJbnQoIF9zaXplICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBzaXplS2V5ID09IHZpZXdTaXplICkge1xuXHRcdFx0XHRcdGRpZCA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblxuXHRcdFx0cmV0dXJuIHNpemUgfHwgb3B0aW9ucy5zY3JlZW5zaXplcy5jb2x1bW5zIDtcblx0XHR9LFxuXG5cdFx0aGFzQ29sQ2xhc3M6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHR2YXIgY2xhc3NuYW1lLFxuXHRcdFx0XHR2aWV3U2l6ZVx0PSAnKFxcXFx3KyknLFxuXHRcdFx0XHRzaXplXHRcdD0gJyhcXFxcZCspJztcblxuXHRcdFx0aWYgKCBhcmd1bWVudHNbMF0gKSB7XG5cdFx0XHRcdHZpZXdTaXplID0gYXJndW1lbnRzWzBdO1xuXHRcdFx0XHRpZiAoIGFyZ3VtZW50c1sxXSApIHtcblx0XHRcdFx0XHRzaXplID0gYXJndW1lbnRzWzFdO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGNsYXNzbmFtZSA9IG9wdGlvbnMuc2NyZWVuc2l6ZXMuc2l6ZV9jbGFzc190ZW1wbGF0ZSh7IHNjcmVlbnNpemU6IHZpZXdTaXplLCBzaXplOiBzaXplIH0pO1xuXG5cdFx0XHRyZXR1cm4gISEgdGhpcy4kZWwuYXR0cignY2xhc3MnKS5tYXRjaCggbmV3IFJlZ0V4cChjbGFzc25hbWUsJ2cnKSApO1xuXHRcdFx0XG5cdFx0fSxcblx0XHRzZXRDb2xDbGFzczogZnVuY3Rpb24oIHNpemUsIHZpZXdTaXplICkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZTtcblx0XHRcdHRoaXMuJGVsLnJlbW92ZUNsYXNzKCB0aGlzLmdldENvbENsYXNzbmFtZXMoIHZpZXdTaXplICkuam9pbignICcpICk7XG5cdFx0XHRpZiAoICEgaXNOYU4oIHBhcnNlSW50KHNpemUpICkgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IG9wdGlvbnMuc2NyZWVuc2l6ZXMuc2l6ZV9jbGFzc190ZW1wbGF0ZSh7IHNjcmVlbnNpemU6IHZpZXdTaXplLCBzaXplOiBzaXplIH0pO1xuXHRcdFx0XHR0aGlzLiRlbC5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHR9XG4gICAgXHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cblx0XHRnZXRDdXJyZW50T2Zmc2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB2aWV3U2l6ZSA9IHRoaXMuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRzZWxmID0gdGhpcywgZGlkID0gZmFsc2UsIG9mZnNldCA9IGZhbHNlO1xuXHRcdFx0b2Zmc2V0X2tleSA9IF8uZmluZCggb2Zmc2V0a2V5cywgZnVuY3Rpb24ocHJvcCxzaXplS2V5KSB7XG5cdFx0XHRcdHZhciBfb2Zmc2V0ID0gc2VsZi5tb2RlbC5nZXQoIHByb3AgKTtcblx0XHRcdFx0aWYgKCAhIGRpZCAmJiAhISBfb2Zmc2V0ICkge1xuXHRcdFx0XHRcdG9mZnNldCA9IHBhcnNlSW50KCBfb2Zmc2V0wqApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggc2l6ZUtleSA9PSB2aWV3U2l6ZSApIHtcblx0XHRcdFx0XHRkaWQgPSB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBvZmZzZXQgfHwgMDtcblx0XHR9LFxuXHRcdHNldE9mZnNldENsYXNzOiBmdW5jdGlvbiggb2Zmc2V0LCB2aWV3U2l6ZSApIHtcblx0XHRcdHZhciBjbGFzc05hbWU7XG5cdFx0XHR0aGlzLiRlbC5yZW1vdmVDbGFzcyggdGhpcy5nZXRDb2xDbGFzc25hbWVzKCB2aWV3U2l6ZSwgb3B0aW9ucy5zY3JlZW5zaXplcy5vZmZzZXRfY2xhc3NfdGVtcGxhdGUgKS5qb2luKCcgJykgKTtcblx0XHRcdGlmICggISBpc05hTiggcGFyc2VJbnQoIG9mZnNldCApICkgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IG9wdGlvbnMuc2NyZWVuc2l6ZXMub2Zmc2V0X2NsYXNzX3RlbXBsYXRlKHsgc2NyZWVuc2l6ZTogdmlld1NpemUsIHNpemU6IG9mZnNldCB9KTtcblx0XHRcdFx0dGhpcy4kZWwuYWRkQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0fVxuICAgIFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGdldENvbENsYXNzbmFtZXM6IGZ1bmN0aW9uKCB2aWV3c2l6ZSwgY2xhc3NfdGVtcGxhdGUgKSB7XG5cdFx0XHRpZiAoICd1bmRlZmluZWQnID09PSB0eXBlb2YgY2xhc3NfdGVtcGxhdGUgKSB7XG5cdFx0XHRcdGNsYXNzX3RlbXBsYXRlID0gb3B0aW9ucy5zY3JlZW5zaXplcy5zaXplX2NsYXNzX3RlbXBsYXRlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGNscyA9IFtdO1xuXHRcdFx0Zm9yICh2YXIgaT0wO2k8MTM7aSsrKSB7XG5cdFx0XHRcdGNscy5wdXNoKCBjbGFzc190ZW1wbGF0ZSh7IHNjcmVlbnNpemU6dmlld3NpemUsc2l6ZTppIH0pICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gY2xzO1xuXHRcdH0sXG5cdFx0Z2V0TG9ja0NsYXNzbmFtZXM6IGZ1bmN0aW9uKCB2aWV3c2l6ZSwgY2xhc3NfdGVtcGxhdGUgKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fSxcblxuXHRcdGluY3JlbWVudE9mZnNldDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdmlld1NpemUgPSB0aGlzLmNvbnRyb2xsZXIudG9vbGJhci53aGljaFZpZXcoKSxcblx0XHRcdFx0b2Zmc2V0ID0gdGhpcy5nZXRDdXJyZW50T2Zmc2V0KCk7XG5cdFx0XHRpZiAoIG9mZnNldCA8IChvcHRpb25zLnNjcmVlbnNpemVzLmNvbHVtbnMgLSAxICkgKSB7XG5cdFx0XHRcdHRoaXMuc2V0T2Zmc2V0KCBvZmZzZXQgKyAxLCB2aWV3U2l6ZSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0ZGVjcmVtZW50T2Zmc2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB2aWV3U2l6ZSA9IHRoaXMuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRvZmZzZXQgPSB0aGlzLmdldEN1cnJlbnRPZmZzZXQoKTtcblx0XHRcdGlmICggb2Zmc2V0ID4gMCApIHtcblx0XHRcdFx0dGhpcy5zZXRPZmZzZXQoIG9mZnNldCAtIDEsIHZpZXdTaXplICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGluY3JlbWVudFNpemU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHZpZXdTaXplID0gdGhpcy5jb250cm9sbGVyLnRvb2xiYXIud2hpY2hWaWV3KCksXG5cdFx0XHRcdHNpemUgPSB0aGlzLmdldEN1cnJlbnRTaXplKCk7XG5cdFx0XHRpZiAoIHNpemUgPCBvcHRpb25zLnNjcmVlbnNpemVzLmNvbHVtbnMgKSB7XG5cdFx0XHRcdHRoaXMuc2V0U2l6ZSggc2l6ZSArIDEsIHZpZXdTaXplICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRkZWNyZW1lbnRTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB2aWV3U2l6ZSA9IHRoaXMuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRzaXplID0gdGhpcy5nZXRDdXJyZW50U2l6ZSgpO1xuXHRcdFx0aWYgKCBzaXplID4gMSApIHtcblx0XHRcdFx0dGhpcy5zZXRTaXplKCBzaXplIC0gMSwgdmlld1NpemUgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdFxuXHRcdHNldFNpemU6IGZ1bmN0aW9uKCBzaXplLCB2aWV3U2l6ZSApIHtcblx0XHRcdHRoaXMubW9kZWwuc2V0KCAnc2l6ZV8nICsgdmlld1NpemUsIHNpemUgKTtcblx0XHRcdHRoaXMuc2V0Q29sQ2xhc3MoIHNpemUsIHZpZXdTaXplICk7XG5cdFx0XHR0aGlzLmhhc0NoYW5nZWQoKTtcblx0XHR9LFxuXHRcdHNldE9mZnNldDogZnVuY3Rpb24oIG9mZnNldCwgdmlld1NpemUgKSB7XG5cdFx0XHR0aGlzLnNldE9mZnNldENsYXNzKCBvZmZzZXQsIHZpZXdTaXplICk7XG5cblx0XHRcdHRoaXMubW9kZWwuc2V0KCAnb2Zmc2V0XycgKyB2aWV3U2l6ZSwgb2Zmc2V0ICk7XG5cdFx0XHR0aGlzLmhhc0NoYW5nZWQoKTtcblx0XHR9LFxuXHRcdHVwZGF0ZVNpemVDbGFzc2VzOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdF8uZWFjaCggb3B0aW9ucy5zY3JlZW5zaXplcy5zaXplcywgZnVuY3Rpb24oIHNpdGVPcHRpb25zLCBzY3JlZW5TaXplICkge1xuXHRcdFx0XHR2YXIgc2l6ZSA9IHNlbGYubW9kZWwuZ2V0KCAnc2l6ZV8nICsgc2NyZWVuU2l6ZSApO1xuXHRcdFx0XHRzZWxmLnNldENvbENsYXNzKCBzaXplLCBzY3JlZW5TaXplICk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdHVwZGF0ZU9mZnNldENsYXNzZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0Xy5lYWNoKCBvcHRpb25zLnNjcmVlbnNpemVzLnNpemVzLCBmdW5jdGlvbiggc2l0ZU9wdGlvbnMsIHNjcmVlblNpemUgKSB7XG5cdFx0XHRcdHZhciBvZmZzZXQgPSBzZWxmLm1vZGVsLmdldCggJ29mZnNldF8nICsgc2NyZWVuU2l6ZSApO1xuXHRcdFx0XHRzZWxmLnNldE9mZnNldENsYXNzKCBvZmZzZXQsIHNjcmVlblNpemUgKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0dXBkYXRlQ29sTG9ja0NsYXNzZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGZcdFx0PSB0aGlzLFxuXHRcdFx0XHRhZGRfY2xhc3Nlc1x0PSBbXSxcblx0XHRcdFx0cm1fY2xhc3Nlc1x0PSBbXTtcblx0XHRcdDtcblxuXHRcdFx0Xy5lYWNoKCBvcHRpb25zLnNjcmVlbnNpemVzLnNpemVzLCBmdW5jdGlvbiggc2l0ZU9wdGlvbnMsIHNpemUgKSB7XG5cdFx0XHRcdF8uZWFjaCgge1x0XG5cdFx0XHRcdFx0J3NpemUnIDogb3B0aW9ucy5zY3JlZW5zaXplcy5zaXplX2xvY2tfdGVtcGxhdGUsIFxuXHRcdFx0XHRcdCdvZmZzZXQnIDogb3B0aW9ucy5zY3JlZW5zaXplcy5vZmZzZXRfbG9ja190ZW1wbGF0ZSBcblx0XHRcdFx0fSwgZnVuY3Rpb24oIHRwbCwgcHJvcCApIHtcblxuXHRcdFx0XHRcdHZhciBjbHMgPSB0cGwoIHsgc2NyZWVuc2l6ZSA6IHNpemUgfSApO1xuXHRcdFx0XHRcdGlmICggc2VsZi5tb2RlbC5nZXQoIHByb3AgKyAnXycgKyBzaXplICsgJzpsb2NrZWQnICkgKSB7XG5cdFx0XHRcdFx0XHRhZGRfY2xhc3Nlcy5wdXNoKCBjbHMgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cm1fY2xhc3Nlcy5wdXNoKCBjbHMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0XHR0aGlzLiRlbC5yZW1vdmVDbGFzcyggcm1fY2xhc3Nlcy5qb2luKCcgJykgKS5hZGRDbGFzcyggYWRkX2NsYXNzZXMuam9pbignICcpICk7XG5cdFx0fSxcblx0fSk7XG5cblx0V2lkZ2V0ID0gZ3JpZC52aWV3LmVsZW1lbnQuV2lkZ2V0ID0gQ29sdW1uQ29sbGVjdGlvblZpZXcuZXh0ZW5kKHtcblx0XHR0ZW1wbGF0ZTogd3AudGVtcGxhdGUoJ2dyaWQtZWxlbWVudC13aWRnZXQnKSxcblx0XHRjbGFzc05hbWU6J3dpZGdldCBncmlkLWl0ZW0nLFxuXHRcdHRhZ05hbWU6J2xpJyxcblx0XHRhdHRyaWJ1dGVzOiB7XG5cdFx0XHQndGFiaW5kZXgnOiAwXG5cdFx0fSxcblx0XHR1cGRhdGVEaXNwbGF5OiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0aXRsZSwgZXZlbnQsIHdpZGdldF9jbGFzcyxcblx0XHRcdFx0d2lkZ2V0X3R5cGUsIGljb247XG5cblx0XHRcdGlmICggISB0aGlzLmhhc0NvbENsYXNzKCkgKSB7XG5cdFx0XHRcdHRoaXMuc2V0Q29sQ2xhc3MoIG9wdGlvbnMuc2NyZWVuc2l6ZXMuY29sdW1ucywgXy5rZXlzKCBvcHRpb25zLnNjcmVlbnNpemVzLnNpemVzKVswXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyB1cGRhdGUgYXMgZ3JpZCBvYmplY3Rcblx0XHRcdENvbHVtbkNvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS51cGRhdGVEaXNwbGF5LmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblxuXHRcdFx0Ly8gcmUtcmVuZGVyIHRlbXBhbHRlXG5cdFx0XHR3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdH0sXG5cdFx0Y29sbGVjdGlvblZpZXc6IGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2UgfSxcblx0XHRnZXRUaXRsZTogZnVuY3Rpb24oICkge1xuXHRcdFx0dmFyIHdpZGdldENsYXNzID0gdGhpcy5tb2RlbC5nZXQoJ3dpZGdldF9jbGFzcycpO1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0cmV0dXJuIG9wdGlvbnMud2lkZ2V0c1sgdW5lc2NhcGUoIHdpZGdldENsYXNzICkgXS5uYW1lO1xuXHRcdFx0fSBjYXRjaCggZXJyICkge1xuXHRcdFx0XHRyZXR1cm4gbDEwbi51bmtvbnduV2lkZ2V0ICsgJyAnICsgd2lkZ2V0Q2xhc3M7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHRDZWxsID0gZ3JpZC52aWV3LmVsZW1lbnQuQ2VsbCA9IENvbHVtbkNvbGxlY3Rpb25WaWV3LmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6IHdwLnRlbXBsYXRlKCdncmlkLWVsZW1lbnQtY2VsbCcpLFxuXHRcdGNsYXNzTmFtZTonY2VsbCBncmlkLWl0ZW0nLFxuXHRcdHRhZ05hbWU6J2xpJyxcblx0XHRhdHRyaWJ1dGVzOiB7XG5cdFx0XHQndGFiaW5kZXgnOiAwXG5cdFx0fSxcblxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHJldCA9IENvbHVtbkNvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHRcdHRoaXMubGlzdGVuVG8oIHRoaXMubW9kZWwuaXRlbXMsICd1cGRhdGUnLCB0aGlzLml0ZW1zQ2hhbmdlZCApO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9LFxuXHRcdGl0ZW1zQ2hhbmdlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHQvLyBsZXQgcm93IGFkanVzdCBjZWxsIGhlaWdodHNcblx0XHRcdHRoaXMucGFyZW50KCkuYWRqdXN0Q2VsbFNpemUoKTtcblx0XHR9LFxuXHRcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdENvbHVtbkNvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsICRkcmFnZ2VkLCBldmVudFByb3AgPSAnc2NyZWVuWCcsXG5cdFx0XHRcdGRyYWdTdGFydFgsIHN0YXJ0T2Zmc2V0O1xuXG5cblx0XHRcdC8vIEZGIGRvZXMgbm90IGluY2x1ZGUgcG9pbnRlciBwb3NpdGlvbiBpbiBkcmFnIGV2ZW50cy5cblx0XHRcdC8vIG5lZWQgdG8gZ2V0IGJhY2sgdG8gZ29vZCBvbGQgbW91c2Vtb3ZlXG5cdFx0XHRmdW5jdGlvbiBtb3VzZW1vdmUoIGUgKSB7XG5cdFx0XHRcdHZhciAkZSA9ICQuRXZlbnQoICdkcmFnJywge1xuXHRcdFx0XHRcdHBhZ2VYOiBlLnBhZ2VYLFxuXHRcdFx0XHRcdHBhZ2VZOiBlLnBhZ2V5LFxuXHRcdFx0XHRcdHNjcmVlblg6IGUuc2NyZWVuWCxcblx0XHRcdFx0XHRzY3JlZW5ZOiBlLnNjcmVlbnksXG5cdFx0XHRcdFx0Y2xpZW50WDogZS5jbGllbnRYLFxuXHRcdFx0XHRcdGNsaWVudHk6IGUuY2xpZW50eVxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdCRkcmFnZ2VkLnRyaWdnZXIoICRlICk7XG5cdFx0XHR9XG5cdFx0XHRmdW5jdGlvbiBtb3VzZXVwKCBlICkge1xuXHRcdFx0XHQkKGRvY3VtZW50KS5vZmYoICdtb3VzZW1vdmUnLCBtb3VzZW1vdmUgKTtcblx0XHRcdFx0JChkb2N1bWVudCkub2ZmKCAnbW91c2V1cCcsIG1vdXNldXAgKTtcblx0XHRcdH1cblx0XHRcdGlmICggZmVhdHVyZXMubG9ja3MgfHwgISB0aGlzLm1vZGVsLmdldCgnbG9ja2VkJykgKSB7XG5cdFxuXHRcdFx0XHR0aGlzLiQoJy5yZXNpemUtaGFuZGxlLCAub2Zmc2V0LWhhbmRsZScpXG5cdFx0XHRcdFx0Lm9uKCAnbW91c2Vkb3duJywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0XHQvLyBhZGQgbW92ZSBsaXN0ZW5lclxuXHRcdFx0XHRcdFx0dmFyIHZpZXdTaXplXHQ9IHNlbGYuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRcdFx0XHRwcm9wbmFtZVx0PSAoICQodGhpcykuaXMoJy5vZmZzZXQtaGFuZGxlJykgPyAnb2Zmc2V0XycgOiAnc2l6ZV8nICkgKyB2aWV3U2l6ZTtcblx0XHRcdFx0XHRcdGlmICggZmVhdHVyZXMubG9jayB8fCAhIHNlbGYubW9kZWwuZ2V0KCBwcm9wbmFtZSsnOmxvY2tlZCcgKSApIHtcblx0XHRcdFx0XHRcdFx0ZHJhZ1N0YXJ0WCA9IGUuc2NyZWVuWDtcblx0XHRcdFx0XHRcdFx0c3RhcnRPZmZzZXQgPSBzZWxmLmdldEN1cnJlbnRPZmZzZXQoKTtcblx0XHRcdFx0XHRcdFx0JGRyYWdnZWQgPSAkKHRoaXMpO1xuXHRcdFx0XHRcdFx0XHQkKGRvY3VtZW50KS5vbiggJ21vdXNlbW92ZScsIG1vdXNlbW92ZSApO1xuXHRcdFx0XHRcdFx0XHQkKGRvY3VtZW50KS5vbiggJ21vdXNldXAnLCBtb3VzZXVwICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0fSApO1xuXG5cblx0XHRcdFx0dGhpcy4kKCcucmVzaXplLWhhbmRsZScpXG5cdFx0XHRcdFx0Lm9uKCBcImRyYWdcIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRcdFx0dmFyIGNvbFdpZHRoXHQ9ICQodGhpcykuY2xvc2VzdCgnLnJvdycpLndpZHRoKCkgLyBvcHRpb25zLnNjcmVlbnNpemVzLmNvbHVtbnMsXG5cdFx0XHRcdFx0XHRcdHZpZXdTaXplXHQ9IHNlbGYuY29udHJvbGxlci50b29sYmFyLndoaWNoVmlldygpLFxuXHRcdFx0XHRcdFx0XHRjb2xzXHRcdD0gTWF0aC5tYXgoIDEsIE1hdGgubWluKCBvcHRpb25zLnNjcmVlbnNpemVzLmNvbHVtbnMsIE1hdGgucm91bmQoICggZXZlbnQucGFnZVggLSBzZWxmLiRlbC5vZmZzZXQoKS5sZWZ0ICkgLyBjb2xXaWR0aCApICkgKSxcblx0XHRcdFx0XHRcdFx0cHJldkNvbHNcdD0gc2VsZi5tb2RlbC5nZXQoICdzaXplXycrdmlld1NpemUgKTtcblxuXHRcdFx0XHRcdFx0aWYgKCBwcmV2Q29scyAhPSBjb2xzICkge1xuXHRcdFx0XHRcdFx0XHRzZWxmLnNldFNpemUoIGNvbHMsIHZpZXdTaXplICk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdH0gKTtcblxuXHRcdFx0XHR0aGlzLiQoJy5vZmZzZXQtaGFuZGxlJylcblx0XHRcdFx0XHQub24oJ2RyYWcnLGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0XHRcdHZhciBjb2xXaWR0aFx0PSAkKHRoaXMpLmNsb3Nlc3QoJy5yb3cnKS53aWR0aCgpIC8gb3B0aW9ucy5zY3JlZW5zaXplcy5jb2x1bW5zO1xuXHRcdFx0XHRcdFx0XHR2aWV3U2l6ZVx0PSBzZWxmLmNvbnRyb2xsZXIudG9vbGJhci53aGljaFZpZXcoKSxcblx0XHRcdFx0XHRcdFx0ZGlmZiBcdFx0PSBkcmFnU3RhcnRYIC0gZXZlbnQuc2NyZWVuWDtcblx0XHRcdFx0XHRcdFx0b2Zmc2V0RGlmZlx0PSBNYXRoLnJvdW5kKCBkaWZmIC8gY29sV2lkdGggKSxcblx0XHRcdFx0XHRcdFx0b2Zmc2V0XHRcdD0gTWF0aC5taW4oIDExLCBNYXRoLm1heCggMCwgc3RhcnRPZmZzZXQgLSBvZmZzZXREaWZmICkgKSxcblx0XHRcdFx0XHRcdFx0cHJldk9mZnNldFx0PSBzZWxmLm1vZGVsLmdldCggJ29mZnNldF8nICsgdmlld1NpemUgKTtcblxuXHRcdFx0XHRcdFx0aWYgKCBwcmV2T2Zmc2V0ICE9IG9mZnNldCApIHtcblx0XHRcdFx0XHRcdFx0c2VsZi5zZXRPZmZzZXQoIG9mZnNldCwgdmlld1NpemUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0fSlcbiAgICBcdFx0fVxuICAgIFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGNvbGxlY3Rpb25WaWV3OiBmdW5jdGlvbigpeyByZXR1cm4gV2lkZ2V0IH0sXG5cdH0pO1xuXG5cdFJvdyA9IGdyaWQudmlldy5lbGVtZW50LlJvdyA9IENvbGxlY3Rpb25WaWV3LmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6IHdwLnRlbXBsYXRlKCdncmlkLWVsZW1lbnQtcm93JyksXG5cdFx0Y2xhc3NOYW1lOidyb3cgZ3JpZC1pdGVtJyxcblx0XHR0YWdOYW1lOidsaScsXG5cdFx0YXR0cmlidXRlczoge1xuXHRcdFx0J3RhYmluZGV4JzogMFxuXHRcdH0sXG5cdFx0XG5cdFx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oKXtcblx0XHRcdENvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRcdENvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpe3NlbGYuYWRqdXN0Q2VsbFNpemUoKTt9LDEpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRhZGp1c3RDZWxsU2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgJGNlbGxzID0gdGhpcy4kKCcuY2VsbCcpO1xuXHRcdFx0dmFyIGNlbGxIZWlnaHQgPSAwO1xuXHRcdFx0JGNlbGxzLmVhY2goIGZ1bmN0aW9uKGksZWwpe1xuXHRcdFx0XHQkKHRoaXMpLnJlbW92ZUF0dHIoICdzdHlsZScgKTtcblx0XHRcdFx0Y2VsbEhlaWdodCA9IE1hdGgubWF4KGNlbGxIZWlnaHQsICQodGhpcykuaGVpZ2h0KCkgKTtcblx0XHRcdH0gKTtcblx0XHRcdCRjZWxscy5lYWNoKCBmdW5jdGlvbigpe1xuXHRcdFx0XHQkKHRoaXMpLmNzcyggeyAnaGVpZ2h0JzpjZWxsSGVpZ2h0KydweCcgfSApOyBcblx0XHRcdH0gKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0Y29sbGVjdGlvblZpZXc6IGZ1bmN0aW9uKCl7IHJldHVybiBDZWxsIH0sXG5cdH0pO1xuXG5cdENvbnRhaW5lciA9IGdyaWQudmlldy5lbGVtZW50LkNvbnRhaW5lciA9IENvbGxlY3Rpb25WaWV3LmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6IHdwLnRlbXBsYXRlKCdncmlkLWVsZW1lbnQtY29udGFpbmVyJyksXG5cdFx0Y2xhc3NOYW1lOidjb250YWluZXIgZ3JpZC1pdGVtJyxcblx0XHR0YWdOYW1lOidsaScsXG5cdFx0YXR0cmlidXRlczoge1xuXHRcdFx0J3RhYmluZGV4JzogMFxuXHRcdH0sXG5cblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdENvbGxlY3Rpb25WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpe1xuXHRcdFx0Q29sbGVjdGlvblZpZXcucHJvdG90eXBlLnJlbmRlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHR0aGlzLnNldENvbGxhcHNlZCggdGhpcy5tb2RlbC5nZXQoJ2NvbGxhcHNlZCcpICk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGNvbGxlY3Rpb25WaWV3OiBmdW5jdGlvbigpeyByZXR1cm4gUm93IH0sXG5cdFx0dG9nZ2xlQ29sbGFwc2VkOiBmdW5jdGlvbiggZSApIHtcblx0XHRcdHZhciBzdGF0ZSA9ICF0aGlzLm1vZGVsLmdldCgnY29sbGFwc2VkJyk7XG5cdFx0XHR0aGlzLnNldENvbGxhcHNlZCggc3RhdGUgKTtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9LFxuXHRcdHNldENvbGxhcHNlZDogZnVuY3Rpb24oIHN0YXRlICkge1xuXHRcdFx0dGhpcy4kZWwudG9nZ2xlQ2xhc3MoICdjb2xsYXBzZWQnLCAhIXN0YXRlICk7XG5cdFx0XHR0aGlzLm1vZGVsLnNldCgnY29sbGFwc2VkJywgISFzdGF0ZSApO1xuXHRcdFx0dGhpcy4kKCc+LmNvbGxlY3Rpb24gLnJvdycpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0JCh0aGlzKS5kYXRhKCd2aWV3JykuYWRqdXN0Q2VsbFNpemUoKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fSk7XG5cdENvbnRhaW5lci5wcm90b3R5cGUuZXZlbnRzWydjbGljayAudG9nZ2xlLWNvbGxhcHNlJyBdID0gJ3RvZ2dsZUNvbGxhcHNlZCc7XG5cblx0R3JpZCA9IGdyaWQudmlldy5lbGVtZW50LkdyaWQgPSBDb2xsZWN0aW9uVmlldy5leHRlbmQoe1xuXHRcdHRlbXBsYXRlXHQ6IHdwLnRlbXBsYXRlKCdncmlkLWVsZW1lbnQtZ3JpZCcpLFxuXHRcdGNsYXNzTmFtZVx0OiAnZ3JpZC12aWV3IGdyaWQtaXRlbScsXG5cdFx0dGFnTmFtZVx0XHQ6ICdkaXYnLFxuXHRcdGF0dHJpYnV0ZXNcdDoge1xuXHRcdFx0J2RhdGEtZ3JpZC1jb2x1bW5zJzogb3B0aW9ucy5zY3JlZW5zaXplcy5jb2x1bW5zXG5cdFx0fSxcblx0XHRldmVudHNcdFx0OiB7XG5cdFx0fSxcblx0XHRpbml0aWFsaXplOiBmdW5jdGlvbigpe1xuXHRcdFx0Q29sbGVjdGlvblZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dGhpcy5zZWxlY3RXaWRnZXRNb2RhbCA9IG51bGw7XG5cdFx0XHR0aGlzLnRlbXBsYXRlU2VsZWN0T3B0aW9ucyA9IFtdO1xuXG5cdFx0fSxcblx0XHRyZW5kZXI6IGZ1bmN0aW9uKCl7XG5cdFx0XHQvLyBzZXQgdmlldyBzaXplXG5cdFx0XHR2YXIgdmlld1NpemUsIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHRDb2xsZWN0aW9uVmlldy5wcm90b3R5cGUucmVuZGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdHRoaXMuJGVsLnJlbW92ZUF0dHIoJ3RhYmluZGV4Jyk7XG5cblx0XHRcdHRoaXMuaW5pdFNvcnRhYmxlcygpO1xuXG5cdFx0XHR0aGlzLmNvbnRyb2xsZXIuc2V0U2VsZWN0ZWQoIHRoaXMgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cblxuXHRcdHJlbmRlclRlbXBsYXRlU2VsZWN0czogZnVuY3Rpb24oKXtcblx0XHRcdHZhciBzZWxmID0gdGhpczsgXG5cdFx0XHRcblx0XHRcdF8uZWFjaCggdGhpcy50ZW1wbGF0ZVNlbGVjdE9wdGlvbnMsIGZ1bmN0aW9uKCBvcHRpb24gKXtcblx0XHRcdFx0b3B0aW9uLnN0b3BMaXN0ZW5pbmcoKTtcblx0XHRcdFx0b3B0aW9uLnJlbW92ZSgpO1xuXHRcdFx0XHRzZWxmLnN0b3BMaXN0ZW5pbmcoIG9wdGlvbi5tb2RlbCApO1xuXHRcdFx0fSk7XG5cblx0XHRcdF8uZWFjaChbICdjb250YWluZXInLCAncm93JywgJ2NlbGwnLCAnd2lkZ2V0JyBdLCBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0dmFyICRzZWxlY3QgPSBzZWxmLiQoJ3NlbGVjdC5hZGQtJyt0eXBlKTtcblx0XHRcdFx0Z3JpZC50ZW1wbGF0ZXNbdHlwZV0uZWFjaCggZnVuY3Rpb24oIG1vZGVsICkge1xuXHRcdFx0XHRcdHZhciB2YWx1ZSA9IG1vZGVsLmdldCggJ3NsdWcnICksXG5cdFx0XHRcdFx0XHRvcHRpb24gPSBuZXcgQmFja2JvbmUuVmlldyh7XG5cdFx0XHRcdFx0XHRcdHRhZ05hbWU6ICdvcHRpb24nLFxuXHRcdFx0XHRcdFx0XHRhdHRyaWJ1dGVzOiB7XG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdG1vZGVsOiBtb2RlbFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0b3B0aW9uLnJlbmRlcigpLiRlbC50ZXh0KCBtb2RlbC5nZXQoICduYW1lJyApICk7XG5cdFx0XHRcdFx0JHNlbGVjdC5hcHBlbmQoIG9wdGlvbi4kZWwgKTtcblx0XHRcdFx0XHRvcHRpb24ubGlzdGVuVG8oIG1vZGVsLCAnY2hhbmdlJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHR0aGlzLiRlbC50ZXh0KCB0aGlzLm1vZGVsLmdldCgnbmFtZScpICk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdHNlbGYubGlzdGVuVG8oIG1vZGVsLCAnZGVzdHJveScsIGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0Xy5lYWNoKCBhbGxPYmplY3RzLCBmdW5jdGlvbiggb2JqLCBpICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIG9iai5tb2RlbC5nZXQoJ3RlbXBsYXRlJyApID09PSBtb2RlbC5pZCApIHtcblx0XHRcdFx0XHRcdFx0XHRvYmoubW9kZWwudW5zZXQoJ3RlbXBsYXRlJyApO1xuXHRcdFx0XHRcdFx0XHRcdGhhc0NoYW5nZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdGhhc0NoYW5nZWQgJiYgc2VsZi5oYXNDaGFuZ2VkKCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0c2VsZi50ZW1wbGF0ZVNlbGVjdE9wdGlvbnMucHVzaCggb3B0aW9uICk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRcblx0XHRpbml0U29ydGFibGVzOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBncm91cHMgPSBbICdjb250YWluZXInLCAncm93JywgJ2NlbGwnLCAnd2lkZ2V0JyBdLCBzb3J0b3B0aW9ucyA9IHtcblx0XHRcdFx0Z2hvc3RDbGFzczogJ2dob3N0Jyxcblx0XHRcdFx0c2Nyb2xsOiB0cnVlXG5cdFx0XHR9LCBzZWxmID0gdGhpcztcblxuXHRcdFx0JCggJ1tkYXRhLXNvcnQtZ3JvdXA9XCJjZWxsXCJdJyApLm9uKCdhZGQgcmVtb3ZlJywgZnVuY3Rpb24oZSkge1xuLy9cdFx0XHRcdGNvbnNvbGUubG9nKCdtb3ZlZCB3aWRnZXQnLCB0aGlzLCBlICk7XG5cdFx0XHR9KTtcblx0XHRcdF8uZWFjaCggZ3JvdXBzLCBmdW5jdGlvbiggZ3JvdXAgKSB7XG5cblx0XHRcdFx0dmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7XG5cdFx0XHRcdFx0XHRncm91cDogZ3JvdXAsXG5cdFx0XHRcdFx0XHRoYW5kbGU6ICcuc29ydC1oYW5kbGUnLFxuXHRcdFx0XHRcdH0sIHNvcnRvcHRpb25zICksXG5cdFx0XHRcdFx0JHNvcnRhYmxlO1xuXG5cdFx0XHRcdCRzb3J0YWJsZSA9ICQoICcudW5sb2NrZWQ+W2RhdGEtc29ydC1ncm91cD1cIicrZ3JvdXArJ1wiXScgKVxuXHRcdFx0XHRcdC5zb3J0YWJsZSggb3B0aW9ucyApXG5cdFx0XHRcdFx0Lm9uKCAnYWRkJywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0XHR2YXIgY29sbGVjdGlvbiA9ICQodGhpcykuZGF0YSgnbW9kZWwnKSxcblx0XHRcdFx0XHRcdFx0dmlldyA9ICQodGhpcykuZGF0YSgndmlldycpLFxuXHRcdFx0XHRcdFx0XHRpdGVtVmlldyA9ICQoIGUub3JpZ2luYWxFdmVudC5pdGVtICkuZGF0YSggJ3ZpZXcnICk7XG5cblx0XHRcdFx0XHRcdC8vIHVwZGF0ZSBtb2RlbFxuIFx0XHRcdFx0XHRcdGNvbGxlY3Rpb24uYWRkKCAkKGUub3JpZ2luYWxFdmVudC5pdGVtKS5kYXRhKCdtb2RlbCcpLCB7IHNpbGVudDogdHJ1ZSB9ICk7XG4gXHRcdFx0XHRcdFx0Y29sbGVjdGlvbi50cmlnZ2VyKCd1cGRhdGUnKTtcblxuXHRcdFx0XHRcdFx0Ly8gdXBkYXRlIHZpZXdcblx0XHRcdFx0XHRcdGl0ZW1WaWV3Lm9wdGlvbnMucGFyZW50ID0gdmlldztcblx0XHRcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0fSApXG5cdFx0XHRcdFx0Lm9uKCAncmVtb3ZlJywgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0XHR2YXIgY29sbGVjdGlvbiA9ICQodGhpcykuZGF0YSgnbW9kZWwnKTtcbiBcdFx0XHRcdFx0XHRjb2xsZWN0aW9uLnJlbW92ZSggJChlLm9yaWdpbmFsRXZlbnQuaXRlbSkuZGF0YSgnbW9kZWwnKSwgeyBzaWxlbnQ6IHRydWUgfSApO1xuIFx0XHRcdFx0XHRcdGNvbGxlY3Rpb24udHJpZ2dlcigndXBkYXRlJyk7XG5cdFx0XHRcdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHRcdC5vbignc29ydCcsZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdFx0XHQkKHRoaXMpLmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbihpLGVsKXtcblx0XHRcdFx0XHRcdFx0dmFyIGVsTW9kZWwgPSAkKGVsKS5kYXRhKCdtb2RlbCcpO1xuXHRcdFx0XHRcdFx0XHRlbE1vZGVsLnNldCgnaWR4JyxpKTtcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0JCh0aGlzKS5kYXRhKCdtb2RlbCcpLnNvcnQoKTtcblx0XHRcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRzZXRJdGVtVmlzaWJpbGl0eTogZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IHRoaXMuZ2V0U2VsZWN0ZWQoKTtcblx0XHRcdGlmICggISEgY3VycmVudCApIHtcblx0XHRcdFx0Y3VycmVudC5zZXRWaXNpYmlsaXR5KCB0aGlzLiQoJ1tuYW1lPVwic2V0LXZpc2liaWxpdHlcIl06Y2hlY2tlZCcpLnZhbCgpICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGNvbGxlY3Rpb25WaWV3OiBmdW5jdGlvbigpeyByZXR1cm4gQ29udGFpbmVyIH0sXG5cblx0XHRoYXNDaGFuZ2VkOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMubW9kZWwudHJpZ2dlciggJ2NoYW5nZScsIHRoaXMubW9kZWwgKTtcblx0XHR9XG5cblxuXHRcdFxuXHR9KTtcblxuXHRjbGFzc01hcFx0PSB7XG5cdFx0J0dyaWQnXHRcdDogR3JpZCxcblx0XHQnQ29udGFpbmVyJ1x0OiBDb250YWluZXIsXG5cdFx0J1JvdydcdFx0OiBSb3csXG5cdFx0J0NlbGwnXHRcdDogQ2VsbCxcblx0XHQnV2lkZ2V0J1x0OiBXaWRnZXRcblx0fTtcbn0pKGpRdWVyeSx3aW5kb3cuZ3JpZCk7Il19
